2012-07-16  Oleg Endo  <olegendo@gcc.gnu.org>

	* config/sh/sh.h (CONST_OK_FOR_I06): Delete.
	(CONST_OK_FOR_I10): Move macro to ...
	* config/sh/sh.c: ... here.
	(sh_legitimate_index_p): Use satisfies_constraint_I06 instead of
	CONST_OK_FOR_I06.

2012-07-16  Oleg Endo  <olegendo@gcc.gnu.org>

	* config/sh/sh.md: Delete mov related define_peephole patterns.

2012-07-16  Jonathan Wakely  <jwakely.gcc@gmail.com>

	PR c++/53919
	* doc/install.texi (Installing GCC): Refer to instructions for
	released versions. Fix hyphenation.

2012-07-16  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>

	* config/spu/spu.c (targetm): Move to bottom of file.
	(spu_attribute_table): Likewise.
	(spu_option_override, spu_init_builtins, spu_builtin_decl,
	spu_scalar_mode_supported_p, spu_vector_mode_supported_p,
	spu_legitimate_address_p, spu_addr_space_legitimate_address_p,
	adjust_operand, get_pic_reg, need_to_save_reg, frame_emit_store,
	frame_emit_load, frame_emit_add_imm, emit_nop_for_insn,
	insn_clobbers_hbr, spu_emit_branch_hint, spu_emit_vector_compare,
	get_branch_target, spu_machine_dependent_reorg, spu_sched_issue_rate,
	spu_sched_variable_issue, spu_sched_adjust_cost, spu_sched_init_global,
	spu_sched_init, spu_sched_reorder, spu_handle_fndecl_attribute,
	spu_handle_vector_attribute, spu_pass_by_reference, spu_function_arg,
	spu_function_arg_advance, spu_build_builtin_va_list, spu_va_start,
	spu_gimplify_va_arg_expr, store_with_one_insn_p, reg_aligned_for_addr,
	spu_assemble_integer, spu_asm_globalize_label, spu_rtx_costs,
	spu_function_ok_for_sibcall, spu_init_libfuncs, spu_return_in_memory,
	spu_encode_section_info, spu_legitimize_address,
	spu_addr_space_legitimize_address, spu_builtin_mask_for_load,
	spu_builtin_vectorization_cost, spu_vector_alignment_reachable,
	spu_addr_space_pointer_mode, spu_addr_space_address_mode,
	spu_addr_space_subset_p, spu_addr_space_convert, spu_sms_res_mii,
	spu_section_type_flags, spu_select_section, spu_unique_section,
	spu_trampoline_init, spu_conditional_register_usage,
	spu_ref_may_alias_errno, spu_output_mi_thunk, spu_unwind_word_mode,
	spu_libgcc_cmp_return_mode, spu_libgcc_shift_count_mode,
	spu_setup_incoming_varargs): Remove prototypes.
	(spu_legitimize_address): Add "static" to definition.

2012-07-16  Jakub Jelinek  <jakub@redhat.com>

	* config/i386/rtmintrin.h (_xabort): Remove trailing semicolon.

2012-07-16  Ulrich Weigand  <ulrich.weigand@linaro.org>

	* tree-ssa-ccp.c (optimize_unreachable): Check gsi_end_p
	before calling gsi_stmt.

2012-07-16  Kirill Yukhin  <kirill.yukhin@intel.com>

	Revert
	2012-07-16 Sergey Melnikov <sergey.melnikov@intel.com>

	* config/i386/i386.md (stack_protect_set): Disable the pattern
	for Android since Android libc (bionic) does not provide random
	value for stack protection guard at gs:0x14. Guard value
	will be provided from external symbol (default implementation).
	(stack_protect_set_<mode>): Likewise.
	(stack_protect_test): Likewise.
	(stack_protect_test_<mode>): Likewise.

2012-07-16  H.J. Lu  <hongjiu.lu@intel.com>

	PR middle-end/53959
	PR bootstrap/53963
	* gimple.c (gimple_types_compatible_p_1): Restore type attribute
	comparison.

2012-07-16  Bill Schmidt  <wschmidt@linux.ibm.com>

	* opts.c (default_option): Add -fvect-cost-model to default options
	at -O3 and above.

2012-07-16  Steven Bosscher  <steven@gcc.gnu.org>

	* graphite-clast-to-gimple.c, graphite-dependences.c,
	graphite-sese-to-poly.c: Include tree-pass.h instead of dumpfile.h
	for pass TODO flags.
	* Makefile.in: Fix dependencies.

2012-07-16  Steven Bosscher  <steven@gcc.gnu.org>

	* haifa-sched.c (init_before_recovery): Do not set EDGE_CAN_FALLTHRU.
	* cfgrtl.c (force_nonfallthru_and_redirect): Likewise.

	* function.c (stack_protect_epilogue): Use expand_call to expand
	targetm.stack_protect_fail.
	* stmt.c (expand_expr_stmt): Remove now-unused function.
	* tree.h (expand_expr_stmt): Remove prototype.
	* doc/tm.texi.in (TARGET_STACK_PROTECT_FAIL): Document that this
	hook must return a CALL_EXPR.
	* doc/tm.texi: Regenerate.

	* emit-rtl.c (emit_label_before): Do not allow the same label
        to be emitted twice.
	(emit_label_after): Likewise.
	(emit_label): Likewise.

	* flags.h (TYPE_OVERFLOW_WRAPS, TYPE_OVERFLOW_UNDEFINED,
	TYPE_OVERFLOW_TRAPS, POINTER_TYPE_OVERFLOW_UNDEFINED): Move to tree.h.
	* tree.h (TYPE_OVERFLOW_WRAPS, TYPE_OVERFLOW_UNDEFINED,
	TYPE_OVERFLOW_TRAPS, POINTER_TYPE_OVERFLOW_UNDEFINED): New home.

2012-07-16  Steven Bosscher  <steven@gcc.gnu.org>

	* system.h (dump_file): Do not define.
	* tree-pass.h: Include dumpfile.h, which is a new file containing...
	(enum tree_dump_index, TDF_*, get_dump_file_name, dump_enabled_p,
	dump_initialized_p, dump_begin, dump_end, dump_node, dump_switch_p,
	dump_flag_name, dump_file, dump_flags, dump_file_name,
	get_dump_file_info, struct dump_file_info): all of this, moved to...
	* dumpfile.h: Here, new file.
	* tree-dump.h: Include dumpfile.h, but not tree-pass.h.
	(dump_stmt): Remove prototype for C++ specific function.
	(dump_enumerated_decls): Move prototype from here...
	* tree-flow.h (dump_enumerated_decls): ... to here.
	(get_ref_base_and_extent) Move prototype from here ...
	* tree.h (get_ref_base_and_extent) ... to here.
	* tree-ssa-live.c: Do not inclde tree-pretty-print.h, because
	gimple-pretty-print.h is enough.  Do not include tree-dump.h,
	include timevar.h and dumpfile.h instead.
	(struct numbered_tree_d, compare_decls_by_uid,
	dump_enumerated_decls_push, dump_enumerated_decls): Move from here ...
	* tree-dfa.c:(struct numbered_tree_d, compare_decls_by_uid,
	dump_enumerated_decls_push, dump_enumerated_decls):... to here.
	Do not include timevar.h.
	* tree.c: Do not include timevar.h.
	* tree-cfg.c: Do not include langhooks.h, tree-pretty-print.h, and
	timevar.h.
	(dump_cfg_stats): Use current_function_name.
	(gimple_cfg2vcg): Likewise.
	(dump_function_to_file): Likewise.
	* df-scan.c: Do not include tree-pass.h and timevar.h.
	Include dumpfile.h.
	(df_entry_block_bitmap_verify, df_exit_block_bitmap_verify): Do not
	use print_current_pass.
	* df-problems.c: Include dumpfile.h.
	Always define REG_DEAD_DEBUGGING, avoid #ifdef code, because it
	leads to errors in the code not selected.
	(df_note_compute): Do not print_rtl_with_bb here.  Fix compilation
	bug if REG_DEAD_DEBUGGING is not 0, get_insns is not available here.
	* lcm.c: Include dumpfile.h.
	Remove obsolete include of insn-attr.h.
	* dojump.c (do_compare_rtx_and_jump): Remove failure printing for
	missing probability notes.
	* stmt.c: Include dumpfile.h.
	(emit_case_decision_tree): Re-enable printing expand details only
	if TDF_DETAILS.
	* alias.c, auto-inc-dec.c, bb-reorder.c, caller-save.c, cfg.c, 
	cfgcleanup.c, cfgexpand.c, cfgloop.c, cfgloopmanip.c, cgraph.c, 
	cgraphclones.c, cgraphunit.c, combine.c, combine-stack-adj.c, 
	coverage.c, cprop.c, cse.c, cselib.c, dbgcnt.c, dce.c, df-core.c, 
	dse.c, dwarf2out.c, emit-rtl.c, except.c, expr.c, final.c, 
	function.c, fwprop.c, gcse.c, gimple-fold.c, 
	gimple-pretty-print.c, gimple-ssa-strength-reduction.c, 
	gimplify.c, graphite-blocking.c, graphite-clast-to-gimple.c, 
	graphite-dependences.c, graphite-interchange.c, 
	graphite-optimize-isl.c, graphite-poly.c, 
	graphite-sese-to-poly.c, haifa-sched.c, hw-doloop.c, ifcvt.c, 
	ipa.c, ipa-cp.c, ipa-inline-analysis.c, ipa-inline.c, 
	ipa-inline-transform.c, ipa-prop.c, ipa-pure-const.c, 
	ipa-reference.c, ipa-split.c, ipa-utils.c, ira.c, ira-emit.c, 
	jump.c, loop-doloop.c, loop-init.c, loop-invariant.c, loop-iv.c, 
	loop-unroll.c, loop-unswitch.c, lower-subreg.c, 
	lto-section-out.c, lto-streamer-in.c, matrix-reorg.c, mcf.c, 
	mode-switching.c, modulo-sched.c, omega.c, omp-low.c, passes.c, 
	plugin.c, postreload.c, postreload-gcse.c, predict.c, print-rtl.c, 
	print-tree.c, profile.c, recog.c, ree.c, regcprop.c, reginfo.c, 
	regmove.c, regrename.c, reg-stack.c, reload1.c, reorg.c, 
	sched-rgn.c, sched-vis.c, sel-sched.c, sel-sched-ir.c, 
	store-motion.c, tracer.c, trans-mem.c, tree-affine.c, 
	tree-call-cdce.c, tree-cfgcleanup.c, tree-chrec.c, 
	tree-data-ref.c, tree-diagnostic.c, tree-dump.c,
	tree-eh.c, tree-flow-inline.h, tree-if-conv.c, tree-into-ssa.c, 
	tree-mudflap.c, tree-nrv.c, tree-object-size.c, 
	tree-optimize.c, tree-outof-ssa.c, tree-predcom.c, 
	tree-pretty-print.c, tree-profile.c, tree-scalar-evolution.c, 
	tree-sra.c, tree-ssa-address.c, tree-ssa-alias.c, tree-ssa.c, 
	tree-ssa-ccp.c, tree-ssa-coalesce.c, tree-ssa-copy.c, 
	tree-ssa-copyrename.c,, tree-ssa-dce.c, tree-ssa-dom.c, 
	tree-ssa-dse.c, tree-ssa-forwprop.c, tree-ssa-ifcombine.c, 
	tree-ssa-loop.c, tree-ssa-loop-ch.c, tree-ssa-loop-im.c, 
	tree-ssa-loop-ivcanon.c, tree-ssa-loop-ivopts.c, 
	tree-ssa-loop-manip.c, tree-ssa-loop-niter.c, 
	tree-ssa-loop-prefetch.c, tree-ssa-loop-unswitch.c, 
	tree-ssa-math-opts.c, tree-ssa-operands.c, tree-ssa-phiopt.c, 
	tree-ssa-phiprop.c, tree-ssa-pre.c, tree-ssa-propagate.c, 
	tree-ssa-reassoc.c, tree-ssa-sccvn.c, tree-ssa-sink.c, 
	tree-ssa-structalias.c, tree-ssa-tail-merge.c, tree-ssa-ter.c, 
	tree-ssa-threadedge.c, tree-ssa-threadupdate.c, 
	tree-ssa-uncprop.c, tree-ssa-uninit.c, 
	tree-switch-conversion.c, tree-tailcall.c, 
	tree-vect-data-refs.c, tree-vect-loop.c, 
	tree-vect-loop-manip.c, tree-vectorizer.c, 
	tree-vect-patterns.c, tree-vect-slp.c, tree-vect-stmts.c, 
	tree-vrp.c, value-prof.c, var-tracking.c, web.c: Include tree-pass.h
	only if needed.  If tree-pass.h is included, do not include timevar.h
	and dumpfile.h.  If tree-pass.h is not included but dump_file, or
	dump_flags, or the TDF_* flags are used, include dumpfile.h.
	If gimple-pretty-print.h is included, don't include tree-pretty-print.h.
	Remove assorted unnecessary includes.

	* config/mn10300/mn10300.c, config/c6x/c6x.c, config/ia64/ia64.c,
	config/arm/arm.c, config/bfin/bfin.c, config/frv/frv.c,
	config/spu/spu.c, config/mep/mep.c, config/i386/i386.c:
	Include dumpfile.h.
	* config/rl78/rl78.c: Include dumpfile.h instead of tree-pass.h.
	* arm/t-arm, avr/t-avr, i386/t-i386, ia64/t-ia64, mep/t-mep,
	spu/t-spu-elf: Fix dependencies.

2012-07-16  Dehao Chen  <dehao@google.com>

	Revert
	2012-07-10  Dehao Chen  <dehao@google.com>

	* tree.h (phi_arg_d): New field.
	* tree-flow-inline.h (gimple_phi_arg_block): New function.
	(gimple_phi_arg_block_from_edge): New function.
	(gimple_phi_arg_set_block): New function.
	(gimple_phi_arg_has_block): New function.
	(redirect_edge_var_map_block): New function.
	* tree-flow.h (_edge_var_map): New field.
	* tree-ssa-live.c (remove_unused_locals): Mark phi_arg's block as used.
	* tree-eh.c (cleanup_empty_eh_merge_phis): Add block debug info for
	redirect_edge_var_map_add.
	* tree-outof-ssa.c (_elim_graph): New field.
	(insert_partition_copy_on_edge): New parameter.
	(insert_value_copy_on_edge): New parameter.
	(insert_rtx_to_part_on_edge): New parameter.
	(insert_part_to_rtx_on_edge): New parameter.
	(elim_graph_add_edge): New parameter.
	(elim_graph_remove_succ_edge): New parameter.
	(FOR_EACH_ELIM_GRAPH_SUCC): New parameter.
	(FOR_EACH_ELIM_GRAPH_PRED): New parameter.
	(new_elim_graph): Add block debug info.
	(clear_elim_graph): Likewise.
	(delete_elim_graph): Likewise.
	(elim_graph_add_node): Likewise.
	(elim_graph_add_edge): Likewise.
	(elim_graph_remove_succ_edge): Likewise.
	(eliminate_build): Likewise.
	(elim_forward): Likewise.
	(elim_unvisited_predecessor): Likewise.
	(elim_backward): Likewise.
	(elim_create): Likewise.
	(eliminate_phi): Likewise.
	(insert_backedge_copies): Likewise.
	* tree-into-ssa.c (insert_phi_nodes_for): Add block debug info for
	add_phi_arg.
	(rewrite_add_phi_arguments): Likewise.
	* tree-ssa-loop-im.c (execute_sm_if_changed): Likewise.
	* tree-ssa-tail-merge.c (replace_block_by): Likewise.
	* tree-ssa-threadupdate.c (copy_phi_args): Likewise.
	* tree-loop-distribution.c (update_phis_for_loop_copy): Likewise.
	* tree-ssa-loop-manip.c (create_iv): Likewise.
	(add_exit_phis_edge): Likewise.
	(split_loop_exit_edge): Likewise.
	(copy_phi_node_args): Likewise.
	(tree_transform_and_unroll_loop): Likewise.
	* value-prof.c (gimple_ic): Likewise.
	(gimple_stringop_fixed_value): Likewise.
	* tree-tailcall.c (add_successor_phi_arg): Likewise.
	(eliminate_tail_call): Likewise.
	(create_tailcall_accumulator): Likewise.
	(tree_optimize_tail_calls_1): Likewise.
	* tree-phinodes.c (add_phi_arg): Likewise.
	(make_phi_node): Likewise.
	(resize_phi_node): Likewise.
	(remove_phi_arg_num): Likewise.
	* omp-low.c (expand_parallel_call): Likewise.
	(expand_omp_for_static_chunk): Likewise.
	* tree-vect-loop-manip.c (slpeel_update_phis_for_duplicate_loop):
	Likewise.
	(slpeel_update_phi_nodes_for_guard1): Likewise.
	(slpeel_update_phi_nodes_for_guard2): Likewise.
	(slpeel_tree_duplicate_loop_to_edge_cfg): Likewise.
	(set_prologue_iterations): Likewise.
	(slpeel_tree_peel_loop_to_edge): Likewise.
	(vect_loop_versioning): Likewise.
	* tree-parloops.c (create_phi_for_local_result): Likewise.
	(transform_to_exit_first_loop): Likewise.
	(create_parallel_loop): Likewise.
	* ipa-split.c (split_function): Likewise.
	* tree-vect-loop.c (get_initial_def_for_induction): Likewise.
	(vect_create_epilog_for_reduction): Likewise.
	* tree-vect-data-refs.c (vect_setup_realignment): Likewise.
	* graphite-scop-detection.c (canonicalize_loop_closed_ssa): Likewise.
	* tree-ssa-phiopt.c (cond_store_replacement): Likewise.
	(cond_if_else_store_replacement_1): Likewise.
	* tree-cfgcleanup.c (remove_forwarder_block): Likewise.
	(remove_forwarder_block_with_phi): Likewise.
	* tree-ssa-pre.c (insert_into_preds_of_block): Likewise.
	* tree-predcom.c (initialize_root_vars): Likewise.
	(initialize_root_vars_lm): Likewise.
	* sese.c (sese_add_exit_phis_edge): Likewise.
	* tree-ssa-dce.c (forward_edge_to_pdom): Likewise.
	* tree-ssa.c (flush_pending_stmts): Likewise.
	(redirect_edge_var_map_add): Likewise.
	(ssa_redirect_edge): Likewise.
	* gimple-streamer-in.c (input_phi): Likewise.
	* tree-vect-stmts.c (vectorizable_load): Likewise.
	* tree-inline.c (copy_phis_for_bb): Likewise.
	* tree-ssa-phiprop.c (phiprop_insert_phi): Likewise.
	* tree-switch-conversion.c (fix_phi_nodes): Likewise.
	* tree-cfg.c (reinstall_phi_args): Likewise.
	(gimple_make_forwarder_block): Likewise.
	(add_phi_args_after_copy_edge): Likewise.
	(gimple_duplicate_sese_tail): Likewise.

2012-07-16 Sergey Melnikov <sergey.melnikov@intel.com>

	* config/i386/i386.md (stack_protect_set): Disable the pattern
	for Android since Android libc (bionic) does not provide random
	value for stack protection guard at gs:0x14. Guard value
	will be provided from external symbol (default implementation).
	(stack_protect_set_<mode>): Likewise.
	(stack_protect_test): Likewise.
	(stack_protect_test_<mode>): Likewise.

2012-07-16  Hans-Peter Nilsson  <hp@axis.com>

	* config/cris/cris-protos.h (cris_legitimate_address_p): Declare.
	* config/cris/cris.h (CONSTANT_ADDRESS_P): Define in terms of
	CONSTANT_P and cris_legitimate_address_p.
	* config/cris/cris.c (cris_legitimate_address_p): Make non-static.
	(cris_preferred_reload_class): Don't return GENERAL_REGS as
	preferred to MOF_SRP_REGS.

	* config/cris/cris.c (cris_init_libfuncs): Handle initialization
	of library functions for basic atomic compare-and-swap.
	* config/cris/cris.h (TARGET_ATOMICS_MAY_CALL_LIBFUNCS): New macro.
	* config/cris/cris.opt (munaligned-atomic-may-use-library): New option.
	* config/cris/sync.md ("atomic_fetch_<atomic_op_name><mode>")
	("cris_atomic_fetch_<atomic_op_name><mode>_1")
	("atomic_compare_and_swap<mode>")
	("cris_atomic_compare_and_swap<mode>_1"): Make conditional on
	TARGET_ATOMICS_MAY_CALL_LIBFUNCS for sizes larger than byte.
	* config/cris/cris.c (cris_print_operand) <case 'P', 'q'>: New cases.
	* config/cris/sync.md (atomic_op_op_cnstr): New code_attr.
	(atomic_op_op_pred): Ditto.
	(atomic_op_mnem_pre_op2): Renamed from atomic_op_mnem_pre; to
	reflect the change to include %2 in expansion.  All callers changed.
	(qm3): New mode_attr.
	("atomic_fetch_<atomic_op_name><mode>"): Use <atomic_op_op_pred>
	as predicate for operand 2. 
	("cris_atomic_fetch_<atomic_op_name><mode>_1"): Update FIXME.  Use
	"<atomic_op_op_pred>" "<atomic_op_op_cnstr>" for predicate and
	constraint for operand 2.
	("atomic_compare_and_swap<mode>"): Add FIXME.  Change predicate to
	nonmemory_operand for operand 3.
	("cris_atomic_compare_and_swap<mode>_1"): Change operand 3 to
	exclude memory.  Improve emitted sync code for v10 and v32.  Use
	<qm3> instead of <m> for size designator for cmp.
	("atomic_compare_and_swap<mode>"): Change predicate to
	nonmemory_operand for operand 3.  Add FIXME.
	("cris_atomic_compare_and_swap<mode>_1"): Change predicates and
	constraints for operand 3 to exclude memory.
	("atomic_fetch_<atomic_op_name><mode>")
	("atomic_compare_and_swap<mode>"): Gate expand_mem_thread_fence
	calls on result of call to need_atomic_barrier_p.

2012-07-15  Richard Sandiford  <rdsandiford@googlemail.com>

	* config/mips/mips.md (move_type): Replace mfhilo and mthilo
	with mflo and mtlo.
	(type): Split mfhilo into mfhi and mflo.  Split mthilo into mthi
	and mtlo.  Adjust move_type->type mapping.
	(may_clobber_hilo): Split mthilo into mthi and mtlo.
	(*movdi_32bit, *movdi_32bit_mips16, *movdi_64bit, *movdi_64bit_mips16)
	(*mov<mode>_internal, *mov<mode>_mips16, *movhi_internal)
	(*movhi_mips16, *movqi_internal, *movqi_mips16): Use mtlo and mflo
	instead of mthilo and mfhilo.
	(mfhi<GPR:mode>_<HILO:mode>): Use mfhi instead of mfhilo.
	(mthi<GPR:mode>_<HILO:mode>): Use mthi instead of mthilo.
	* config/mips/mips-dsp.md (mips_extr_w, mips_extr_r_w, mips_extr_rs_w)
	(mips_extr_s_h, mips_extp, mips_extpdp, mips_shilo, mips_mthlip):
	Use mflo instead of mfhilo.
	* config/mips/10000.md (r10k_arith): Split mthilo.
	(r10k_mfhi, r10k_mflo): Use mfhi and mflo directly.
	* config/mips/sb1.md (ir_sb1_mfhi, ir_sb1_mflo): Likewise.
	(ir_sb1_mthilo): Split mthilo into mthi and mtlo.
	* config/mips/20kc.md (r20kc_imthilo, r20kc_imfhilo): Split
	mthilo and mfhilo.
	* config/mips/24k.md (r24k_int_mfhilo, r24k_int_mthilo): Likewise.
	* config/mips/4130.md (vr4130_class, vr4130_mfhilo, vr4130_mthilo):
	Likewise.
	* config/mips/4k.md (r4k_int_mthilo, r4k_int_mfhilo): Likewise.
	* config/mips/5400.md (ir_vr54_hilo): Likewise.
	* config/mips/5500.md (ir_vr55_mthilo, ir_vr55_mfhilo): Likewise.
	* config/mips/5k.md (r5k_int_mthilo, r5k_int_mfhilo): Likewise.
	* config/mips/7000.md (rm7_mthilo, rm7_mfhilo): Likewise.
	* config/mips/74k.md (r74k_int_mfhilo, r74k_int_mthilo): Likewise.
	* config/mips/9000.md (rm9k_mfhilo, rm9k_mthilo): Likewise.
	* config/mips/generic.md (generic_hilo): Likewise.
	* config/mips/loongson2ef.md (ls2_alu): Likewise.
	* config/mips/loongson3a.md (ls3a_mfhilo): Likewise.
	* config/mips/octeon.md (octeon_imul_o1, octeon_imul_o2)
	(octeon_mfhilo_o1, octeon_mfhilo_o2): Likewise.
	* config/mips/sr71k.md (ir_sr70_hilo): Likewise.
	* config/mips/xlr.md (xlr_hilo): Likewise.

2012-07-14  Andrew Stubbs  <ams@codesourcery.com>
	    Sandra Loosemore  <sandra@codesourcery.com>

	* config/sh/sh.h (SH_ASM_SPEC): Add spaces between options.

2012-07-14  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.c (ix86_set_reg_reg_cost): Enable TFmode/TCmode
	for TARGET_SSE.

2012-07-14  Steven Bosscher  <steven@gcc.gnu.org>

	* toplev.c (init_asm_output): Open asm_out_file in 'w' mode.

2012-07-13  Bill Schmidt  <wschmidt@linux.ibm.com>

	PR bootstrap/53955
	* config/spu/spu.c (spu_init_cost): Mark static.
	(spu_add_stmt_cost): Likewise.
	(spu_finish_cost): Likewise.
	(spu_destroy_cost_data): Likewise.
	* config/i386/i386.c (ix86_init_cost): Mark static.
	(ix86_add_stmt_cost): Likewise.
	(ix86_finish_cost): Likewise.
	(ix86_destroy_cost_data): Likewise.
	* config/rs6000/rs6000.c (rs6000_init_cost): Mark static.
	(rs6000_add_stmt_cost): Likewise.
	(rs6000_finish_cost): Likewise.
	(rs6000_destroy_cost_data): Likewise.

2012-07-13  Steven Bosscher  <steven@gcc.gnu.org>

	* ggc.h (ggc_internal_alloc_stat, ggc_alloc_typed_stat,
	ggc_internal_cleared_alloc_stat, ggc_cleared_alloc_htab_ignore_args,
	ggc_cleared_alloc_ptr_array_two_args, ggc_splay_alloc): Add
	ATTRIBUTE_MALLOC.
	* alloc-pool.h (pool_alloc): Likewise.

	* final.c (final): Do not loop to find max_uid.

2012-07-13  Steven Bosscher  <steven@gcc.gnu.org>

	* emit-rtl.c (make_debug_insn_raw, make_jump_insn_raw): Make static.
	* rtl.h (make_debug_insn_raw, make_jump_insn_raw): Remove prototypes.

2012-07-13  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/53907
	* tree-ssa-forwprop.c (associate_pointerplus): New function.
	(ssa_forward_propagate_and_combine): Call it.

2012-07-13  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/53922
	* tree-vrp.c (value_inside_range): Change prototype to take
	min/max instead of value-range.
	(range_includes_zero_p): Likewise.  Return the result from
	value_inside_range.
	(extract_range_from_binary_expr_1): Adjust to handle dont-know
	return value from range_includes_zero_p.
	(extract_range_from_unary_expr_1): Likewise.
	(compare_range_with_value): Likewise.
	(vrp_meet_1): Likewise.

2012-07-13  Bill Schmidt  <wschmidt@linux.ibm.com>

	* doc/tm.texi: Regenerate.
	* doc/tm.texi.in (TARGET_VECTORIZE_INIT_COST): New hook.
	(TARGET_VECTORIZE_ADD_STMT_COST): Likewise.
	(TARGET_VECTORIZE_FINISH_COST): Likewise.
	(TARGET_VECTORIZE_DESTROY_COST_DATA): Likewise.
	* targhooks.c (default_init_cost): New function.
	(default_add_stmt_cost): Likewise.
	(default_finish_cost): Likewise.
	(default_destroy_cost_data): Likewise.
	* targhooks.h (default_init_cost): New decl.
	(default_add_stmt_cost): Likewise.
	(default_finish_cost): Likewise.
	(default_destroy_cost_data): Likewise.
	* target.def (init_cost): New DEFHOOK.
	(add_stmt_cost): Likewise.
	(finish_cost): Likewise.
	(destroy_cost_data): Likewise.
	* target.h (struct _stmt_vec_info): New extern decl.
	(stmt_vectype): Likewise.
	(stmt_in_inner_loop_p): Likewise.
	* tree-vectorizer.h (stmt_info_for_cost): New struct/typedef.
	(stmt_vector_for_cost): New VEC/typedef.
	(add_stmt_info_to_vec): New function.
	(struct _slp_tree): Remove cost.inside_of_loop field.
	(struct _slp_instance): Remove cost.inside_of_loop field; add
	stmt_cost_vec field.
	(SLP_INSTANCE_INSIDE_OF_LOOP_COST): Remove macro.
	(SLP_INSTANCE_STMT_COST_VEC): New accessor macro.
	(SLP_TREE_INSIDE_OF_LOOP_COST): Remove macro.
	(struct _vect_peel_extended_info): Add stmt_cost_vec field.
	(struct _loop_vec_info): Add target_cost_data field.
	(LOOP_VINFO_TARGET_COST_DATA): New accessor macro.
	(struct _bb_vec_info): Add target_cost_data field.
	(BB_VINFO_TARGET_COST_DATA): New accessor macro.
	(struct _stmt_vec_info): Remove cost.inside_of_loop field.
	(STMT_VINFO_INSIDE_OF_LOOP_COST): Remove macro.
	(stmt_vinfo_set_inside_of_loop_cost): Remove function.
	(init_cost): New function.
	(add_stmt_cost): Likewise.
	(finish_cost): Likewise.
	(destroy_cost_data): Likewise.
	(vect_model_simple_cost): Change parameter list.
	(vect_model_store_cost): Likewise.
	(vect_model_load_cost): Likewise.
	(record_stmt_cost): New extern decl.
	(vect_get_load_cost): Change parameter list.
	(vect_get_store_cost): Likewise.
	* tree-vect-loop.c (new_loop_vec_info): Call init_cost.
	(destroy_loop_vec_info): Call destroy_cost_data.
	(vect_estimate_min_profitable_iters): Remove old calculation of
	inside costs; call finish_cost instead.
	(vect_model_reduction_cost): Call add_stmt_cost instead of old
	inside-costs calculation.
	(vect_model_induction_cost): Likewise.
	* tree-vect-data-refs.c (vect_get_data_access_cost): Change to
	return a stmt_vector_for_cost; modify calls to vect_get_load_cost
	and vect_get_store_cost to obtain the value to return.
	(vect_peeling_hash_get_lowest_cost): Obtain a stmt_cost_vec from
	vect_get_data_access_cost and store it in the minimum peeling
	structure.
	(vect_peeling_hash_choose_best_peeling): Change the parameter list
	to add a (stmt_vector_for_cost *) output parameter, and set its value.
	(vect_enhance_data_refs_alignment): Ignore the new return value from
	calls to vect_get_data_access_cost; obtain stmt_cost_vec from
	vect_peeling_hash_choose_best_peeling and pass its contents to the
	target cost model.
	* tree-vect-stmts.c (stmt_vectype): New function.
	(stmt_in_inner_loop_p): Likewise.
	(record_stmt_cost): Likewise.
	(vect_model_simple_cost): Add stmt_cost_vec parameter; call
	record_stmt_cost instead of old calculation; don't call
	stmt_vinfo_set_inside_of_loop_cost.
	(vect_model_promotion_demotion_cost): Call add_stmt_cost instead of
	old calculation; don't call stmt_vinfo_set_inside_of_loop_cost.
	(vect_model_store_cost): Add stmt_cost_vec parameter; call
	record_stmt_cost instead of old calculation; add stmt_cost_vec
	parameter to vect_get_store_cost call; don't call
	stmt_vinfo_set_inside_of_loop_cost.
	(vect_get_store_cost): Add stmt_cost_vec parameter; call
	record_stmt_cost instead of old calculation.
	(vect_model_load_cost): Add stmt_cost_vec parameter; call
	record_stmt_cost instead of old calculation; add stmt_cost_vec
	parameter to vect_get_load_cost call; don't call
	stmt_vinfo_set_inside_of_loop_cost.
	(vect_get_load_cost): Add stmt_cost_vec parameter; call
	record_stmt_cost instead of old calculation.
	(vectorizable_call): Add NULL parameter to vect_model_simple_cost call.
	(vectorizable_conversion): Likewise.
	(vectorizable_assignment): Likewise.
	(vectorizable_shift): Likewise.
	(vectorizable_operation): Likewise.
	(vectorizable_store): Add NULL parameter to vect_model_store_cost call.
	(vectorizable_load): Add NULL parameter to vect_model_load_cost call.
	(new_stmt_vec_info): Don't set STMT_VINFO_INSIDE_OF_LOOP_COST.
	* config/spu/spu.c (TARGET_VECTORIZE_INIT_COST): New macro def.
	(TARGET_VECTORIZE_ADD_STMT_COST): Likewise.
	(TARGET_VECTORIZE_FINISH_COST): Likewise.
	(TARGET_VECTORIZE_DESTROY_COST_DATA): Likewise.
	(spu_init_cost): New function.
	(spu_add_stmt_cost): Likewise.
	(spu_finish_cost): Likewise.
	(spu_destroy_cost_data): Likewise.
	* config/i386/i386.c (ix86_init_cost): New function.
	(ix86_add_stmt_cost): Likewise.
	(ix86_finish_cost): Likewise.
	(ix86_destroy_cost_data): Likewise.
	(TARGET_VECTORIZE_INIT_COST): New macro def.
	(TARGET_VECTORIZE_ADD_STMT_COST): Likewise.
	(TARGET_VECTORIZE_FINISH_COST): Likewise.
	(TARGET_VECTORIZE_DESTROY_COST_DATA): Likewise.
	* config/rs6000/rs6000.c (TARGET_VECTORIZE_INIT_COST): New macro def.
	(TARGET_VECTORIZE_ADD_STMT_COST): Likewise.
	(TARGET_VECTORIZE_FINISH_COST): Likewise.
	(TARGET_VECTORIZE_DESTROY_COST_DATA): Likewise.
	(rs6000_init_cost): New function.
	(rs6000_add_stmt_cost): Likewise.
	(rs6000_finish_cost): Likewise.
	(rs6000_destroy_cost_data): Likewise.
	* tree-vect-slp.c (vect_free_slp_instance): Free stmt_cost_vec.
	(vect_create_new_slp_node): Don't set SLP_TREE_INSIDE_OF_LOOP_COST.
	(vect_get_and_check_slp_defs): Add stmt_cost_vec parameter; add
	stmt_cost_vec parameter to vect_model_store_cost and
	vect_model_simple_cost calls.
	(vect_build_slp_tree): Remove inside_cost parameter; add stmt_cost_vec
	parameter; add stmt_cost_vec parameter to vect_get_and_check_slp_defs,
	vect_model_load_cost, and recursive vect_build_slp_tree calls; prevent
	calculating cost more than once for loads; remove inside_cost
	parameter from recursive vect_build_slp_tree calls; call
	record_stmt_cost instead of old calculation.
	(vect_analyze_slp_instance): Allocate stmt_cost_vec and save it with
	the instance; free it on premature exit; remove inside_cost parameter
	from vect_build_slp_tree call; add stmt_cost_vec parameter to
	vect_build_slp_tree call; don't set SLP_INSTANCE_INSIDE_OF_LOOP_COST.
	(new_bb_vec_info): Call init_cost.
	(destroy_bb_vec_info): Call destroy_cost_data.
	(vect_bb_vectorization_profitable_p): Call add_stmt_cost for each
	statement recorded with an SLP instance; call finish_cost instead of
	the old calculation.
	(vect_update_slp_costs_according_to_vf): Record statement costs from
	SLP instances, multiplying by the appropriate number of copies; don't
	update SLP_INSTANCE_INSIDE_OF_LOOP_COST.

2012-07-13  Richard Guenther  <rguenther@suse.de>

	PR middle-end/53937
	* builtins.c (get_pointer_alignment_1): Handle constant
	pointers.

2012-07-13  Richard Sandiford  <rdsandiford@googlemail.com>
	    Steven Bosscher  <steven@gcc.gnu.org>
	    Bernd Schmidt  <bernds@codesourcery.com>

	PR rtl-optimization/53908
	* df-problems.c (can_move_insns_across): When doing
	memory-reference book-keeping, handle call insns.

2012-07-13  Richard Guenther  <rguenther@suse.de>

	* gimple.c (gimple_types_compatible_p_1): Remove redundant
	type attribute comparisons.
	(gimple_canonical_types_compatible_p): Likewise.

2012-07-12  Hans-Peter Nilsson  <hp@axis.com>

	PR rtl-optimization/53176
	* rtlanal.c (rtx_cost): Adjust default cost for X with a
	UNITS_PER_WORD factor for all X according to the size of
	its mode, not just for SUBREGs with untieable modes.
	Handle SET.  Use factor * factor for MULT, DIV, UDIV,
	MOD, UMOD.

2012-07-12  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.md (QImode and HImode cmove splitters): Merge
	QImode and HImode splitters.  Use ix86_comparison_operator.
	Explicitly match FLAGS_REG.
	(DFmode cmove splitter): Explicitly match FLAGS_REG.

2012-07-11  Steven Bosscher  <steven@gcc.gnu.org>

	* expr.h (can_move_by_pieces): Move prototype from here ...
	* tree.h (can_move_by_pieces): ... to here.
	* optabs.h (set_widening_optab_handler): Use XCNEW.
	* gimplify.c: Do not include expr.h.

	* toplev.c: Do not include dwarf2out.h.
	* config/ia64/ia64.c: Likewise.
	* config/sparc/sparc.c: Likewise.
	* config/sparc/t-sparc (sparc.o): Fix dependencies.

	* Makefile.in (toplev.o): Fix dependencies
	(c-family/c-gimplify.o): Likewise.
	(c-family/c-common.o): Likewise.

2012-07-11  Steven Bosscher  <steven@gcc.gnu.org>

	* basic-block.h (struct edge_def): Use basic_block instead of
	basic_block_def *.
	* cfgloop.h (struct loop_exit, struct loop): Likewise.
	* gengenrtl.c (type_from_format): Likewise.  Also for 'tree'
	instead of union tree_node *.
	* rtl.h (union rtunion_def, emit_insn_before_noloc,
	emit_insn_after_noloc, add_insn_before, add_insn_after,
	debug_bb_slim): Likewise.
	* tree-inline.h (struct copy_body_data): Likewise.
	* sched-rgn.c (dump_region_dot): Likewise.
	* gimple.h (struct gimple_statement_base, gimple_set_bb,
	gsi_move_to_bb_end): Likewise.
	* sched-vis.c (debug_bb_slim): Likewise.
	(debug_bb_n_slim): Likewise.
	* config/mn10300/mn10300.c (mn10300_insert_setlb_lcc): Likewise.
	(mn10300_block_contains_call):

2012-07-11  Greta Yorsh  <Greta.Yorsh@arm.com>

	PR target/53859
	* config/arm/arm.c (arm_early_load_addr_dep): Handle new
	epilogue patterns.

2012-07-11  Jonathan Wakely  <jwakely.gcc@gmail.com>

	* doc/extend.texi (Namespace Association): Alter cautionary text.

2012-07-10  Oleg Endo  <olegendo@gcc.gnu.org>

	PR target/53911
	* config/sh/sh.md: Remove displacement addresssing related splits.

2012-07-10  Xinliang David Li  <davidxl@google.com>

	* doc/invoke.texi: New option documented.
	* flag-types.h: New enum type.
	* gimplify.c (gimplify_bind_expr): Control
	clobber generation with new option.
	(gimplify_target_expr): Ditto.
	* common.opt: New option.

2012-07-10  Julian Brown  <julian@codesourcery.com>

	* config/arm/arm.md (movsi): Don't split symbol refs here.
	(define_split): New.

2012-07-10  Andreas Schwab  <schwab@linux-m68k.org>

	PR bootstrap/53913
	* config/m68k/m68k.c (m68k_epilogue_uses): New.
	* config/m68k/m68k.h (EPILOGUE_USES): Use it.
	* config/m68k/m68k-protos.h (m68k_epilogue_uses): Add prototype.

2012-07-10  Richard Henderson  <rth@redhat.com>

	* target.def (builtin_mul_widen_even, builtin_mul_widen_odd): Remove.
	* system.h (TARGET_VECTORIZE_BUILTIN_MUL_WIDEN_EVEN): Poison.
	(TARGET_VECTORIZE_BUILTIN_MUL_WIDEN_ODD): Poison.
	* config/i386/i386.c (IX86_BUILTIN_VEC_WIDEN_SMUL_ODD_V4SI): Remove.
	(IX86_BUILTIN_VEC_WIDEN_SMUL_ODD_V8SI): Remove.
	(IX86_BUILTIN_VEC_WIDEN_UMUL_ODD_V4SI): Remove.
	(IX86_BUILTIN_VEC_WIDEN_UMUL_ODD_V8SI): Remove.
	(IX86_BUILTIN_VEC_WIDEN_SMUL_EVEN_V4SI): Remove.
	(IX86_BUILTIN_VEC_WIDEN_UMUL_EVEN_V4SI): Remove.
	(IX86_BUILTIN_VEC_WIDEN_UMUL_EVEN_V8SI): Remove.
	(bdesc_args): Remove entries to match.
	(ix86_builtin_mul_widen_even, ix86_builtin_mul_widen_odd): Remove.
	(TARGET_VECTORIZE_BUILTIN_MUL_WIDEN_EVEN): Remove.
	(TARGET_VECTORIZE_BUILTIN_MUL_WIDEN_ODD): Remove.
	* config/rs6000/rs6000.c (rs6000_builtin_mul_widen_even): Remove.
	(rs6000_builtin_mul_widen_odd): Remove.
	(TARGET_VECTORIZE_BUILTIN_MUL_WIDEN_EVEN): Remove.
	(TARGET_VECTORIZE_BUILTIN_MUL_WIDEN_ODD): Remove.
	* config/spu/spu.c (spu_builtin_mul_widen_even): Remove.
	(spu_builtin_mul_widen_odd): Remove.
	(TARGET_VECTORIZE_BUILTIN_MUL_WIDEN_EVEN): Remove.
	(TARGET_VECTORIZE_BUILTIN_MUL_WIDEN_ODD): Remove.
	* doc/tm.texi.in: Don't document the removed hooks.

	* tree-vect-stmts.c (supportable_widening_operation): Expand
	WIDEN_MULT_EXPR via VEC_WIDEN_MULT_EVEN/ODD_EXPR if possible.

	* expmed.c (expmed_mult_highpart): Rename from expand_mult_highpart.
	(expmed_mult_highpart_optab): Rename from expand_mult_highpart_optab.
	* optabs.c (can_mult_highpart_p): New.
	(expand_mult_highpart): New.
	* expr.c (expand_expr_real_2) [MULT_HIGHPART_EXPR): Use it.
	* tree-vect-generic.c (expand_vector_operations_1): Don't expand
	by pieces if can_mult_highpart_p.
	(expand_vector_divmod): Use can_mult_highpart_p and always
	generate MULT_HIGHPART_EXPR.
	* tree-vect-patterns.c (vect_recog_divmod_pattern): Likewise.
	* tree-vect-stmts.c (vectorizable_operation): Likewise.

	* config/spu/spu-builtins.md (spu_mpy): Move to spu.md.
	(spu_mpyu, spu_mpyhhu, spu_mpyhh): Likewise.
	* config/spu/spu.md (vec_widen_smult_odd_v8hi): Rename from spu_mpy.
	(vec_widen_umult_odd_v8hi): Rename from spu_mpyu.
	(vec_widen_smult_even_v8hi): Rename from spu_mpyhh.
	(vec_widen_umult_even_v8hi): Rename from spu_mpyhhu.
	* config/spu/spu-builtins.def: Update pattern names to match.

	* config/rs6000/altivec.md (vec_widen_umult_even_v16qi): Rename
	from altivec_vmuleub.
	(vec_widen_smult_even_v16qi): Rename from altivec_vmulesb.
	(vec_widen_umult_even_v8hi): Rename from altivec_vmuleuh.
	(vec_widen_smult_even_v8hi): Rename from altivec_vmulesh.
	(vec_widen_umult_odd_v16qi): Rename from altivec_vmuloub.
	(vec_widen_smult_odd_v16qi): Rename from altivec_vmulosb.
	(vec_widen_umult_odd_v8hi): Rename from altivec_vmulouh.
	(vec_widen_smult_odd_v8hi): Rename from altivec_vmulosh.
	* config/rs6000/rs6000-builtin.def: Update pattern names to match.

	* config/i386/sse.md (vec_widen_umult_even_v8si): Rename from
	avx2_umulv4siv4di3.
	(vec_widen_umult_even_v4si): Rename from sse2_umulv2siv2di3.
	(vec_widen_smult_even_v8si): Rename from avx2_mulv4siv4di3.
	(mulv4si3): Remove XOP test shadowed by SSE4 test.
	* config/i386/i386.c (bdesc_args): Update pattern names.
	(ix86_expand_sse2_mulvxdi3): Likewise.
	(ix86_expand_mul_widen_evenodd): Likewise.  Remove XOP test
	shadowed by SSE4 test.

	* tree.def (VEC_WIDEN_MULT_EVEN_EXPR, VEC_WIDEN_MULT_ODD_EXPR): New.
	* cfgexpand.c (expand_debug_expr): Handle them.
	* expr.c (expand_expr_real_2): Likewise.
	* fold-const.c (fold_binary_loc): Likewise.
	* gimple-pretty-print.c (dump_binary_rhs): Likewise.
	* optabs.c (optab_for_tree_code): Likewise.
	* tree-cfg.c (verify_gimple_assign_binary): Likewise.
	* tree-inline.c (estimate_operator_cost): Likewise.
	* tree-pretty-print.c (dump_generic_node): Likewise.
	* tree.c (commutative_tree_code): Likewise.
	* tree-vect-generic.c (expand_vector_operations_1): Likewise.
	Handle type change before looking up optab.
	* optabs.h (OTI_vec_widen_umult_even, OTI_vec_widen_umult_odd): New.
	(OTI_vec_widen_smult_even, OTI_vec_widen_smult_odd): New.
	(vec_widen_umult_even_optab, vec_widen_umult_odd_optab): New.
	(vec_widen_smult_even_optab, vec_widen_smult_odd_optab): New.
	* genopinit.c (optabs): Initialize them.
	* doc/md.texi: Document them.

2012-07-10  Dehao Chen  <dehao@google.com>

	* tree.h (phi_arg_d): New field.
	* tree-flow-inline.h (gimple_phi_arg_block): New function.
	(gimple_phi_arg_block_from_edge): New function.
	(gimple_phi_arg_set_block): New function.
	(gimple_phi_arg_has_block): New function.
	(redirect_edge_var_map_block): New function.
	* tree-flow.h (_edge_var_map): New field.
	* tree-ssa-live.c (remove_unused_locals): Mark phi_arg's block as used.
	* tree-eh.c (cleanup_empty_eh_merge_phis): Add block debug info for
	redirect_edge_var_map_add.
	* tree-outof-ssa.c (_elim_graph): New field.
	(insert_partition_copy_on_edge): New parameter.
	(insert_value_copy_on_edge): New parameter.
	(insert_rtx_to_part_on_edge): New parameter.
	(insert_part_to_rtx_on_edge): New parameter.
	(elim_graph_add_edge): New parameter.
	(elim_graph_remove_succ_edge): New parameter.
	(FOR_EACH_ELIM_GRAPH_SUCC): New parameter.
	(FOR_EACH_ELIM_GRAPH_PRED): New parameter.
	(new_elim_graph): Add block debug info.
	(clear_elim_graph): Likewise.
	(delete_elim_graph): Likewise.
	(elim_graph_add_node): Likewise.
	(elim_graph_add_edge): Likewise.
	(elim_graph_remove_succ_edge): Likewise.
	(eliminate_build): Likewise.
	(elim_forward): Likewise.
	(elim_unvisited_predecessor): Likewise.
	(elim_backward): Likewise.
	(elim_create): Likewise.
	(eliminate_phi): Likewise.
	(insert_backedge_copies): Likewise.
	* tree-into-ssa.c (insert_phi_nodes_for): Add block debug info for
	add_phi_arg.
	(rewrite_add_phi_arguments): Likewise.
	* tree-ssa-loop-im.c (execute_sm_if_changed): Likewise.
	* tree-ssa-tail-merge.c (replace_block_by): Likewise.
	* tree-ssa-threadupdate.c (copy_phi_args): Likewise.
	* tree-loop-distribution.c (update_phis_for_loop_copy): Likewise.
	* tree-ssa-loop-manip.c (create_iv): Likewise.
	(add_exit_phis_edge): Likewise.
	(split_loop_exit_edge): Likewise.
	(copy_phi_node_args): Likewise.
	(tree_transform_and_unroll_loop): Likewise.
	* value-prof.c (gimple_ic): Likewise.
	(gimple_stringop_fixed_value): Likewise.
	* tree-tailcall.c (add_successor_phi_arg): Likewise.
	(eliminate_tail_call): Likewise.
	(create_tailcall_accumulator): Likewise.
	(tree_optimize_tail_calls_1): Likewise.
	* tree-phinodes.c (add_phi_arg): Likewise.
	(make_phi_node): Likewise.
	(resize_phi_node): Likewise.
	(remove_phi_arg_num): Likewise.
	* omp-low.c (expand_parallel_call): Likewise.
	(expand_omp_for_static_chunk): Likewise.
	* tree-vect-loop-manip.c (slpeel_update_phis_for_duplicate_loop):
	Likewise.
	(slpeel_update_phi_nodes_for_guard1): Likewise.
	(slpeel_update_phi_nodes_for_guard2): Likewise.
	(slpeel_tree_duplicate_loop_to_edge_cfg): Likewise.
	(set_prologue_iterations): Likewise.
	(slpeel_tree_peel_loop_to_edge): Likewise.
	(vect_loop_versioning): Likewise.
	* tree-parloops.c (create_phi_for_local_result): Likewise.
	(transform_to_exit_first_loop): Likewise.
	(create_parallel_loop): Likewise.
	* ipa-split.c (split_function): Likewise.
	* tree-vect-loop.c (get_initial_def_for_induction): Likewise.
	(vect_create_epilog_for_reduction): Likewise.
	* tree-vect-data-refs.c (vect_setup_realignment): Likewise.
	* graphite-scop-detection.c (canonicalize_loop_closed_ssa): Likewise.
	* tree-ssa-phiopt.c (cond_store_replacement): Likewise.
	(cond_if_else_store_replacement_1): Likewise.
	* tree-cfgcleanup.c (remove_forwarder_block): Likewise.
	(remove_forwarder_block_with_phi): Likewise.
	* tree-ssa-pre.c (insert_into_preds_of_block): Likewise.
	* tree-predcom.c (initialize_root_vars): Likewise.
	(initialize_root_vars_lm): Likewise.
	* sese.c (sese_add_exit_phis_edge): Likewise.
	* tree-ssa-dce.c (forward_edge_to_pdom): Likewise.
	* tree-ssa.c (flush_pending_stmts): Likewise.
	(redirect_edge_var_map_add): Likewise.
	(ssa_redirect_edge): Likewise.
	* gimple-streamer-in.c (input_phi): Likewise.
	* tree-vect-stmts.c (vectorizable_load): Likewise.
	* tree-inline.c (copy_phis_for_bb): Likewise.
	* tree-ssa-phiprop.c (phiprop_insert_phi): Likewise.
	* tree-switch-conversion.c (fix_phi_nodes): Likewise.
	* tree-cfg.c (reinstall_phi_args): Likewise.
	(gimple_make_forwarder_block): Likewise.
	(add_phi_args_after_copy_edge): Likewise.
	(gimple_duplicate_sese_tail): Likewise.

2012-07-09  Oleg Endo  <olegendo@gcc.gnu.org>

	PR target/53886
	* config/sh/sh.c (sequence_insn_p): New function.
	(find_barrier, sh_insn_length_adjustment): Use it.

2012-07-09  Iain Sandoe  <iain@codesourcery.com>

	PR target/53283
	* config/i386/i386.c (ix86_fold_builtin): Call SUBTARGET_FOLD_BUILTIN
	if defined.
	* config/darwin.h: Rename TARGET_FOLD_BUILTIN to
	SUBTARGET_FOLD_BUILTIN.
	* config/rs6000/darwin.h: Map TARGET_FOLD_BUILTIN onto
	SUBTARGET_FOLD_BUILTIN.

2012-07-09  Iain Sandoe  <iain@codesourcery.com>

	* config/darwin.h (SUBTARGET_C_COMMON_OVERRIDE_OPTIONS): Move NeXT
	runtime exceptions model setting from here ...
	* config/darwin.c (darwin_override_options): ... to here.

2012-07-09  Steven Bosscher  <steven@gcc.gnu.org>

	PR tree-optimization/53887
	* tree-cfg.c (group_case_labels_stmt): Make non-static.
	* tree-flow.h (group_case_labels_stmt): Add prototype.
	* tree-switch-conversion.c (process_switch): Use group_case_labels_stmt
	to pre-process every switch.

2012-07-09  Jason Merrill  <jason@redhat.com>

	PR c++/53882
	* tree.c (type_contains_placeholder_1): Handle NULLPTR_TYPE.
	(type_hash_eq): Likewise.

2012-07-09  Tom de Vries  <tom@codesourcery.com>
	    Richard Guenther  <rguenther@suse.de>

	* tree-ssa-ccp.c (optimize_unreachable): New function.
	(execute_fold_all_builtins): Use optimize_unreachable to optimize
	BUILT_IN_UNREACHABLE.  Don't optimize after BUILT_IN_UNREACHABLE.

2012-07-09  Richard Guenther  <rguenther@suse.de>

	PR bootstrap/53898
	* graphite-optimize-isl.c: Make sure CU is not empty.

2012-07-09  Steven Bosscher  <steven@gcc.gnu.org>

	* gensupport.c (init_rtx_reader_args_cb): Start counting code
	generating patterns from 1 to free up 0 for CODE_FOR_nothing.
	* gencodes.c (main): Give CODE_FOR_nothing the value 0.  Add
	the LAST_INSN_CODE marker at the end.
	* genoutput.c (nothing): New static struct data.
	(idata): Initialize to &nothing.
	(idata_end): Initialize to &nothing.next.
	(init_insn_for_nothing): New function to create dummy 'nothing' insn.
	(main): Use it.
	* genpeep.c (insn_code_number): Remove global variable.
	(gen_peephole): Take it as an argument instead.
	(main): Take insn_code_number from read_md_rtx.
	* optabs.h: Revert r161809:
	(optab_handlers): Change type of insn_code back to insn_code.
	(optab_handler, widening_optab_handler, set_optab_handler,
	set_widening_optab_handler, convert_optab_handler,
	set_convert_optab_handler, direct_optab_handler,
	set_direct_optab_handler): Remove int casts.
	Revert to treating the insn_code field as "insn_code".

2012-07-08  Oleg Endo  <olegendo@gcc.gnu.org>

	* config/sh/sh.md (*return_i): Move trap_exit attribute check to ...
	* config/sh/sh.c (sh_cfun_trap_exit_p): ... this new function.
	* config/sh/sh-protos.h: Declare it.

2012-07-08  Steven Bosscher  <steven@gcc.gnu.org>

	* mcf.c: Do not include tm.h, tree.h, and langhooks.h.
	(dump_fixup_graph): Use current_function_name.
	(adjust_cfg_counts): Likewise.
	* ira-conflicts.c: Do not include tree.h.
	(ira_build_conflicts): Use REG_USERVAR_P instead of DECL_ARTIFICIAL.

2012-07-08  Oleg Endo  <olegendo@gcc.gnu.org>

	PR target/51244
	* config/sh/sh.md (*branch_true_eq, *branch_false_ne, nott): New insns.

2012-07-08  Steven Bosscher  <steven@gcc.gnu.org>

	* basic-block.h: Re-group most prototypes per file.
	(struct edge_list): Remove num_blocks field.
	(dump_bb_info): Adjust prototypes.
	(dump_reg_info): Move prototype to regs.h.
	* function.h: Do not include tree.h.
	Include vec.h, vecir.h, input.h and machmode.h to compensate.
	(function_name): New prototype.
	* gimple.h: Include tree.h to compensate for basic-block.h change.
	* langhooks.h: Note that tree.h is only necessary for enum tree_code.
	* regs.h (dump_reg_info): Prototype here.
	* regset.h: Adjust file reference in comment.
	(debug_regset): Remove prototype.
	* rtl.h: Include flags.h for flag_var_tracking_assignments.
	(MAY_HAVE_DEBUG_INSNS): Define as flag_var_tracking_assignments
	instead of no-longer-available tree.h's MAY_HAVE_DEBUG_STMTS.
	(dump_reg_info, dump_flow_info): Remove prototypes.
	* bb-reorder.c (set_edge_can_fallthru_flag): Move from cfganal.c
	to here, the only user.  Make static.
	(reorder_basic_blocks): Call dump_reg_info before dump_flow_info.
	* cfg.c: Do not include tm.h, tree.h, rtl.h, hard-reg-set.h, regs.h,
	flags.h, function.h, except.h, diagnostic-core.h, tm_p.h, timevar.h,
	tree-pass.h, cfgloop.h, and tree-flow.h.
	Include basic-block.h, the first header I'd expect to be included.
	(reg_obstack): Move to df-core.c.
	(free_edge): Remove bogus ATTRIBUTE_UNUSED.
	(remove_edge_raw): Do not call tree-ssa's redirect_edge_var_map_clear.
	(redirect_edge_succ_nodup): Move to cfghooks.c.
	(dump_regset, debug_regset): Move to df-core.c.
	(dump_bb_info): Move to cfgrtl.c.
	(dump_reg_info): Move to regstat.c.
	(dump_flow_info): Move to cfgrtl.c.
	(debug_flow_info): Likewise.
	(dump_edge_info): Do not look at cfun, a CFG without cfun is nonsense.
	* cfganal.c: Do not include tm.h, rtl.h, obstack.h, hard-reg-set.h,
	insn-config.h, recog.h, diagnostic-core.h, tm_p.h, and cfgloop.h.
	(flow_active_insn_p, forwarder_block_p, can_fallthru,
	could_fall_through): Move to cfgrtl.c.
	(set_edge_can_fallthru_flag): Moved to bb-reorder.c.
	(create_edge_list): Do not set edge_list's removed num_blocks.
	(print_edge_list): Look at n_basic_blocks instead of num_blocks.
	(flow_nodes_print): Remove.
	(flow_edge_list_print): Remove.
	(inverted_post_order_compute): Use FOR_ALL_BB.
	*cfgrtl.c (dump_flow_info): Moved from cfg.c.
	Do not call dump_reg_info.
	(debug_flow_info): Moved from cfg.c
	(dump_bb_info): Moved from cfg.c.  Take 'verbose' argument
	to avoid looking at TDF_* flags from tree-pass.h.
	(flow_active_insn_p, forwarder_block_p, can_fallthru,
	could_fall_through): Moved from cfganal.c.
	(print_rtl_with_bb): Adjust dump_bb_info calls.
	* cfghooks.c (redirect_edge_succ_nodup): Moved from cfg.c.
	(remove_edge): Call redirect_edge_var_map_clear if IR_GIMPLE.
	(cfgcleanup.c): Look at MAY_HAVE_DEBUG_INSNS, not MAY_HAVE_DEBUG_STMTS.
	* cselib.c: Include tree.h with a FIXME.
	* df-core.c (reg_obstack): Moved from cfg.c.
	(dump_regset): Likewise.
	(debug_regset): Likewise.  Make a DEBUG_FUNCTION.
	* final.c (compute_alignments): Call dump_reg_info before
	dump_flow_info.
	* function.c (function_name): New function.
	(current_function_name): Use it.
	* ifcvt.c (rest_of_handle_if_conversion): Call dump_reg_info before
	dump_flow_info.
	* ira-conflicts.c: Include tree.h with a note.
	* regstat.c (dump_reg_info): Moved here from cfg.c.
	* loop-init.c: Include regs.h instead of hard-reg-set.h.
	(rtl_loop_init): Call dump_reg_info before dump_flow_info.
	(rtl_loop_done): Likewise.
	* mcf.c: Include tree.h before langhooks.h.
	* predict.c (maybe_hot_count_p): Assert we have cfun.
	(probably_never_executed_bb_p): Likewise.
	* profile.c (compute_branch_probabilities): Use gimple_dump_cfg
	instead of dump_flow_info.
	* sched-deps.c: Include tree.h with a FIXME.
	(call_may_noreturn_p): Add FIXME note why this function has to
	look at function decls instead of function decl flags.
	* sched-vis.c: Include tree.h with a FIXME.
	(print_rtl_slim): Adjust dump_bb_info uses.
	* statistics.c (statistics_fini_pass_2): Use current_function_name
	to avoid including tree.h.
	(statistics_counter_event): Use function_name for the same reason.
	(statistics_histogram_event): Likewise.
	* tracer.c (tracer): Remove bogus gcc_assert.  Use brief_dump_cfg
	instead of dump_flow_info.
	* var-tracking.c (variable_tracking_main_1): Call dump_reg_info
	before dump_flow_info.
	* doc/cfg.texi: Update CFG documentation.
	* Makefile.in (RTL_H): Depend on FLAGS_H.
	(GIMPLE_H): Depend on TREE_H.
	(FUNCTION_H): Depend on VEC_H, vecir.h, INPUT_H and MACHMODE_H,
	but no longer on TREE_H.
	(C_COMMON_H): Depend on TREE_H.
	(cselib.o, cse.o, cfganal.o, loop-init.o, ira-conflicts.o,
	sched-deps.o, sched-vis.o): Fixup dependencies.

2012-07-08  Steven Bosscher  <steven@gcc.gnu.org>

	* alias.h: Do not include coretypes.h in header files.
	* cppbuiltin.h: Likewise.
	* double-int.h: Likewise.
	* gimple-fold.h: Likewise.
	* flags.h: Likewise.
	* tree-ssa-alias.h: Likewise.
	* gengtype.h (obstack_chunk_alloc, obstack_chunk_free,
	OBSTACK_CHUNK_SIZE): Define here to avoid dependency on coretypes.h.
	* Makefile.in (RTL_BASE_H): Depend on coretypes.h.
	(TREE_H): Likewise.
	(ALIAS_H): Do not depend on coretypes.h.
	(FLAGS_H): Likewise.
	(realmpfr.o): Depend on coretypes.h.

2012-07-08  Steven Bosscher  <steven@gcc.gnu.org>

	* Makefile.in (gengtype-lex.o, gengtype-parse.o, gengtype-state.o,
	gengtype.o): Add -DGENERATOR_FILE manually for host gengtype objects.

2012-07-07  Richard Earnshaw  <rearnsha@arm.com>

	* arm.h (TARGET_CPU_CPP_BUILTINS): Remove Maverick support.
	(TARGET_FPA): Delete definition.
	(TARGET_MAVERICK): Likewise.
	(TARGET_FPA_EMU2): Likewise.
	(arm_fp_model): Remove FPA and Maverick models.
	(arm_arch_cirrus): Delete declaration.
	(FLOAT_WORDS_BIG_ENDIAN): Delete definition.
	(FIXED_REGISTERS): Remove FPA and Maverick support.  Reorganize.
	(CALL_USED_REGISTERS): Likewise.
	(FIRST_FPA_REGNUM, LAST_FPA_REGNUM): Delete definition.
	(FIRST_VFP_REGNUM): Renumbered.
	(D7_VFP_REGNUM): Chain definition.
	(LAST_LO_VFP_REGNUM): Likewise.
	(FIRST_HI_VFP_REGNUM): Likewise.
	(LAST_HI_VFP_REGNUM): Likewise.
	(FIRST_IWMMXT_GR_REGNUM): Likewise.
	(LAST_IWMMXT_GR_REGNUM): Likewise.
	(FIRST_IWMMXT_REGNUM): Likewise.
	(LAST_IWMMXT_REGNUM): Likewise.
	(FRAME_POINTER_REGNUM): Renumbered.
	(ARG_POINTER_REGNUM): Renumbered.
	(FIRST_PSEUDO_REGISTER): Remove FPA and Maverick registers.
	(FIRST_CIRRUS_FP_REGNUM, LAST_CIRRUS_FP_REGNUM): Delete definitions.
	(HARD_REGNO_REGNUM): Remove FPA support.
	(REG_ALLOC_ORDER): Remove FPA and Maverick registers.  Reorganize.
	(reg_class): Likewise.
	(REG_CLASS_NAMES): Likewise.
	(REG_CLASS_CONTENTS): Likewise.
	(CANNOT_CHANGE_MODE_CLASS): Never true.  Update comment.
	(SECONDARY_INPUT_RELOAD_CLASS): Remove Maverick support.
	(CLASS_MAX_NREGS): Remove FPA and Maverick support.
	* aout.h (REGISTER_NAMES): Remove FPA and Maverick registers.
	Reorganize.  Use AAPCS preferred names.
	(ADDITIONAL_REGISTER_NAMES): Remove aliases for Maverick.  Update
	comments.
	(OVERLAPPING_REGISTER_NAMES): Update register numbering.
	* arm.c (FL_CIRRUS): Delete definition.
	(arm_arch_cirrus): Delete variable.
	(arm_float_words_big_endian): Delete function.
	(cirrus_memory_offset): Delete function.
	(output_mov_long_double_fpa_from_arm): Delete function.
	(output_mov_long_double_arm_from_fpa): Delete function.
	(output_mov_double_fpa_from_arm): Delete function.
	(output_mov_double_arm_from_fpa): Delete function.
	(emit_sfm): Delete function.
	(maybe_get_arm_condition_code): Update comment.
	(arm_file_start): Always use softvfp for softfloat systems.
	(thumb_core_reg_alloc_order): Adjust for updated register allocation.
	(arm_option_override): Remove FPA and Maverick support.  Always
	default to vfp as the fallback FPU format.
	(use_return_insn): Remove FPA support.
	(arm_get_frame_offsets): Likewise.
	(arm_save_coproc_regs): Likewise.
	(arm_canonicalize_comparison): Remove Maverick support.
	(arm_select_cc_mode): Likewise.
	(arm_gen_compare_reg): Likewise.
	(arm_print_operand): Likewise.
	(arm_libcall_value_1): Remove FPA and Maverick support.
	(arm_function_value_regno_p): Likewise.
	(arm_apply_result_size): Likewise.
	(arm_legitimate_index_p): Likewise.
	(thumb2_legitimate_index_p): Likewise.
	(legitimize_reload_address): Likewise.
	(arm_register_move_cost): Likewise.
	(arm_hard_regno_mode_ok): Likewise.
	(arm_regno_class): Likewise.
	(arm_dbx_register_number): Likewise.
	(arm_emit_unwind_sequence): Likewise.
	(arm_conditional_register_usage): Likewise.
	* arm-protos.h (neg_const_double_rtx_ok_for_fpa): Remove declaration.
	(cirrus_memory_offset): Likewise.
	(output_move_long_double_fpa_from_arm): Likewise.
	(output_move_long_double_arm_from_fpa): Likewise.
	(output_move_double_fpa_from_arm): Likewise.
	(output_move_double_arm_from_fpa): Likewise.
	(arm_float_words_big_endian): Likewise.
	* arm.md (CC_REGNUM): Renumbered.
	(VFPCC_REGNUM): Moved here.  Renumbered.
	(FPA_F0_REGNUM, FPA_F7_REGNUM): Delete.
	(attr fpu): Remove FPA and Maverick support.
	* vfp.md (VFPCC_REGNUM): Delete.  Moved to arm.md.
	* arm-cores.def (ep9312): Remove Maverick support.
	* arm-arches.def (ep9312): Delete architecture.
	* arm-tables.opt: Regenerated.

	* arm/linux-elf.h (FPUTYPE_DEFAULT): Set to vfp.

2012-07-07  Steven Bosscher  <steven@gcc.gnu.org>

	PR tree-optimization/53881
	* tree-switch-conversion.c (emit_case_bit_tests): Do not rely on
	comparing labels to establish uniqueness of a switch case target,
	use the CFG instead.

2012-07-07  Ulrich Weigand  <ulrich.weigand@linaro.org>

	* combine.c (force_to_mode) [LSHIFTRT]: Avoid undefined behaviour
	due to negative shift amount.

2012-07-07  Hans-Peter Nilsson  <hp@axis.com>

	Fix configure test for "stack protector support in target C library".
	* configure.ac (test_prefix, test_exec_prefix): Move setting from
	inside sysroot handling to before and outside it.
	* configure: Regenerate.

2012-07-06  Kai Tietz  <ktietz@redhat.com>

	PR bootstrap/52947
	* config/i386/mingw32.h (NATIVE_SYSTEM_HEADER_DIR): Define it always
	as "/mingw/include".

2012-07-06  Alexandre Oliva  <aoliva@redhat.com>

	PR debug/53820
	* var-tracking.c (vt_add_function_parameter): Convert
	internal_arg_pointer into arg_pointer-based address even
	without DRAP.

2012-07-06  Alexandre Oilva  <aoliva@redhat.com>

	PR rtl-optimization/53827
	PR debug/53671
	PR debug/49888
	* alias.c (memrefs_conflict_p): Adjust offset and size by the
	same amount for alignment ANDs.

2012-07-06  Tom de Vries  <tom@codesourcery.com>

	PR tree-optimization/51879
	* tree-ssa-sccvn.c (copy_reference_ops_from_call)
	(visit_reference_op_call): Handle case that lhs is not an SSA_NAME.
	(visit_use): Also call visit_reference_op_call for calls with a vdef.

2012-07-06  Tom de Vries  <tom@codesourcery.com>

	PR tree-optimization/52009
	* tree-ssa-tail-merge.c (gimple_equal_p): For GIMPLE_ASSIGN, compare
	value numbers of gimple_vdef.
	* tree-ssa-sccvn.h (vn_reference_insert): Add vdef parameter to
	prototype.
	* tree-ssa-sccvn.c (copy_reference_ops_from_ref): Handle MODIFY_EXPR.
	(vn_reference_insert): Add and handle vdef parameter.
	(visit_reference_op_load): Add argument to vn_reference_insert call.
	(visit_reference_op_store): Find value number of vdef of store.  Insert
	value number of vdef of store.

2012-07-06  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.md (simple lea to add peephole): Also transform
	RTXes where second PLUS operand matches output.

2012-07-06  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.c (construct_plt_address): Make static.
	* config/i386/i386-protos.h (construct_plt_address): Remove.

2012-07-06  Nick Clifton  <nickc@redhat.com>

	* config/mn10300/mn10300.c (mn10300_encode_section_info): Call
	default_encode_section_info.

2012-07-06  Uros Bizjak  <ubizjak@gmail.com>

	PR target/53853
	* config/i386/i386.c (x86_output_mi_thunk): For CM_LARGE_PIC model,
	emit PIC sequence for fnaddr symbol reference in advance.

2012-07-06  Eric Botcazou  <ebotcazou@adacore.com>

	Revert
	2012-06-14  Eric Botcazou  <ebotcazou@adacore.com>

	* dwarf2out.c (function_possibly_abstracted_p): New static function.
	(gen_subprogram_die): Use it function_possibly_abstracted_p in lieu of
	cgraph_function_possibly_inlined_p.
	(gen_inlined_subroutine_die): Return if the origin is to be ignored.
	(process_scope_var): Do not emit concrete instances of abstracted
	nested functions from here.
	(gen_decl_die): Emit the abstract instance if the function is possibly
	abstracted and not only possibly inlined.
	(dwarf2out_finish): Find the first non-abstract parent instance and
	attach concrete instances on the limbo list to it.

2012-07-05  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>
	    Julian Brown  <julian@codesourcery.com>

	PR target/48941
	PR target/51980
	* config/arm/neon-gen.ml (return_by_ptr): Delete.
	(print_function): Handle empty strings.
	(return): Delete use of return_by_ptr.
	(mask_shape_for_shuffle): New function.
	(mask_elems): Likewise.
	(shuffle_fn): Likewise.
	(params): Simplify and remove use of return_by_ptr.
	(get_shuffle): New function.
	(print_variant): Update.
	* config/arm/neon.ml (rev_elems): New function.
	(permute_range): Likewise.
	(zip_range): Likewise.
	(uzip_range): Likewise.
	(trn_range): Likewise.
	(zip_elems): Likewise.
	(uzip_elems): Likewise.
	(trn_elems): Likewise.
	(features): New enumeration Use_shuffle. Delete ReturnPtr.
	(pf_su_8_16): New.
	(suf_32): New.
	(ops): Update entries for Vrev64, Vrev32, Vrev16, Vtr, Vzip, Vuzp.
	* config/arm/arm_neon.h: Regenerate.

2012-07-05  Richard Guenther  <rguenther@suse.de>

	* tree-pretty-print.c (dump_generic_node): Properly test
	the result of exact_log2.

2012-07-05  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>

	* config/s390/s390-protos.h (s390_expand_movmem)
	(s390_expand_cmpmem): Add return value.
	* config/s390/s390.c (s390_expand_movmem, s390_expand_cmpmem):
	Return FALSE to use the library function in some cases.
	* config/s390/s390.md (movmem, cmpmem): Evaluate return value of C
	helper functions.

2012-07-05  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>

	* config.gcc: Enable ifunc attribute by default on s390 and s390x.

2012-07-05  Steven Bosscher  <steven@gcc.gnu.org>

	* expr.c (try_casesi): Remove bogus ATTRIBUTE_UNUSED markers.
	* stmt.c (dump_case_nodes): New.
	(expand_case): Split out code generation parts into new functions.
	(expand_switch_as_decision_tree_p): Split out from expand_case.
	(emit_case_decision_tree): Likewise.
	(emit_case_dispatch_table): Likewise.

2012-07-05  Matthew Gretton-Dann  <matthew.gretton-dann@arm.com>

	* config/arm/iterators.md (SDF): New mode iterator.
	(V_if_elem): Add support for SF and DF modes.
	(V_reg): Likewise.
	(F_constraint): New mode iterator attribute.
	(F_fma_type): Likewise.
	config/arm/vfp.md (fma<SDF:mode>4): New pattern.
	(*fmsub<SDF:mode>4): Likewise.
	(*fmnsub<SDF:mode>4): Likewise.
	(*fmnadd<SDF:mode>4): Likewise.

2012-07-04  Uros Bizjak  <ubizjak@gmail.com>

	* expmed.c (expand_mult): Initialize coeff and is_neg.

2012-07-04  Oleg Endo  <olegendo@gcc.gnu.org>

	* config/sh/predicates.md (zero_extend_operand): New predicate.
	* config/sh/sh.md (zero_extendhisi2): Simplify by using new
	zero_extend_operand predicate.
	(zero_extendqisi2): Likewise.

2012-07-04  Uros Bizjak  <ubizjak@gmail.com>

	PR middle-end/53321
	* ipa.c (symtab_remove_unreachable_nodes): Partially revert r187375
	to not call cgraph_propagate_frequency if something was changed.

2012-07-04  Richard Guenther  <rguenther@suse.de>

	PR middle-end/53433
	* gimple-fold.c (get_base_constructor): Do not return an
	error_mark_node DECL_INITIAL.

2012-07-04  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/53844
	* tree-ssa-dse.c (dse_possible_dead_store_p): Properly handle
	the loop virtual PHI.

2012-07-04  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/53849
	* tree-cfg.c (move_stmt_op): Only call add_referenced_var
	for duplicated locals.  Use add_referenced_var_1 to avoid
	pushing/popping cfun.

2012-07-04  Kai Tietz  <ktietz@redhat.com>

	* config/i386/winnt.c (i386_pe_reloc_rw_mask): New function.
	* config/i386/i386-protos.h (i386_pe_reloc_rw_mask): Add
	prototype.
	* config/i386/cygming.h (TARGET_ASM_RELOC_RW_MASK): Define
	as i386_pe_reloc_rw_mask.

2012-07-04  Richard Guenther  <rguenther@suse.de>

	* tree.c (find_decls_types_r): Handle TYPE_CONTEXT the same
	as in free_lang_data_in_type.

2012-07-04  Tobias Grosser <tobias@grosser.es>
	    Michael Matz  <matz@suse.de>

	* Makefile.in (OBJS): Add graphite-optimize-isl.o.
	(graphite-optimize-isl.o): Add dependencies.
	* common.opt (floop-nest-optimize): New flag.
	* doc/invoke.texi (floop-nest-optimize): Document.
	* graphite-dependences.c (compute_deps): Export.
	* graphite-poly.h (compute_deps): Declare.
	* graphite-optimize-isl.c: New file.
	* graphite-poly.c (apply_poly_transforms): Run the loop
	nest optimizer.
	* tree-ssa-loop.c (gate_graphite_transforms): Enable graphite
	if -floop-nest-optimize is enabled.

2012-07-03  Oleg Endo  <olegendo@gcc.gnu.org>

	* config/sh/predicates.md (logical_and_operand): New predicate.
	* config/sh/constraints.md (Jmb, Jmw): New constraints.
	* config/sh/sh.md (andsi3): Move expander above insns.  Add handling
	of 0xFFFF constant.  Use logical_and_operand predicate and
	satisfies_constraint_Jmb, satisfies_constraint_Jmw.
	(*andsi3_compact): Make it an insn_and_split.  Use
	logical_and_operand predicate.  Add Jmb,Jmw alternatives.

2012-07-03  Jason Merrill  <jason@redhat.com>

	PR c++/53826
	* tree.c (build_zero_cst): Handle NULLPTR_TYPE.

2012-07-03  Nick Clifton  <nickc@redhat.com>

	* config/mep/mep.c (mep_reorg_regmove): Use
	next_nonnote_non_debug_insn to advance to the next insn.  Do not
	expect delete_insn to return an rtx.

2012-07-03  Richard Guenther  <rguenther@suse.de>

	* doc/install.texi (CLooG): Clarify how CLooG needs to be
	configured and that it needs to be built against ISL 0.10.

2012-07-03  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.c (ix86_option_override_internal): Fix wrong
	code model string in the error message.

2012-07-03  Uros Bizjak  <ubizjak@gmail.com>

	PR target/53811
	* config/i386/i386.c (x86_output_mi_thunk): Check if fnaddr satisfies
	sibcall_insn_operand.  Move it to a temporary register if not.

2012-07-03  Andreas Schwab  <schwab@linux-m68k.org>

	PR target/28896
	* config/m68k/m68k.c (m68k_option_override): Reset stack_limit_rtx
	if !TARGET_68020.

2012-07-03  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/xmmintrin.h (_mm_sfence): Use __builtin_ia32_pause.

2012-07-03  Roland McGrath  <mcgrathr@google.com>

	* configure.ac (HAVE_AS_IX86_REP_LOCK_PREFIX): Also require that the
	assembler accept 'rep bsf ...', 'rep bsr ...', 'rep ret' and 'rep nop'.
	* configure: Regenerated.
	* config/i386/i386.md (simple_return_internal_long): Use %;
	(ctz<mode>2): Likewise.
	(*pause): Likewise.

2012-07-02  Oleg Endo  <olegendo@gcc.gnu.org>

	PR target/51244
	* config/sh/predicates.md (t_reg_operand, negt_reg_operand): New
	predicates.
	* config/sh/sh-protos.h (get_t_reg_rtx): New prototype.
	* config/sh/sh.c (get_t_reg_rtx): New function.  Use it when invoking
	gen_branch_true and gen_branch_false.
	* config/sh/sh.md: Use get_t_reg_rtx when invoking gen_branch_true and
	gen_branch_false.
	(branch_true, branch_false): Use t_reg_operand predicate.
	(*branch_true, *branch_false): Delete.
	(movt): Use t_reg_operand predicate.
	(*negnegt): Use negt_reg_operand predicate and fold little and big
	endian variants.
	(*movtt): Use t_reg_operand and fold little and big endian variants.
	(*movt_qi): Delete.

2012-07-02  Steven Bosscher  <steven@gcc.gnu.org>

	* stmt.c (emit_case_bit_tests): Remove.
	(expand_case): Remove expand_switch_using_bit_tests_p code.
	* tree-switch-conversion.c (hoist_edge_and_branch_if_true): New.
	(MAX_CASE_BIT_TESTS): Moved from stmt.c to here.
	(lshift_cheap_p): Likewise.
	(expand_switch_using_bit_tests_p): Likewise.
	(struct case_bit_test): Likewise.
	(case_bit_test_cmp): Likewise.
	(emit_case_bit_tests): New implementation for GIMPLE.
	(gen_inbound_check): Do not release post-dominator info here.
	(process_switch): Reorder code.  Expand as bit tests if it
	looks like a win.
	(do_switchconv): Release post-dominator info here if something changed.
	(struct gimple_opt_pass): Verify more.
	* tree.h (expand_switch_using_bit_tests_p): Remove prototype.

2012-07-02  Martin Jambor  <mjambor@suse.cz>

	PR middle-end/38474
	* ipa-prop.c (compute_known_type_jump_func): Put BINFO check before a
	dynamic type change check.

2012-07-02  Richard Guenther  <rguenther@suse.de>
	    Michael Matz  <matz@suse.de>
	    Tobias Grosser <tobias@grosser.es>
	    Sebastian Pop <sebpop@gmail.com>

	* Makefile.in: Remove PPL flags in favor of ISL ones.
	(BACKENDLIBS): Remove PPL libs.
	(INCLUDES): Remove PPL includes in favor of ISL ones.
	(graphite-clast-to-gimple.o): Remove graphite-dependences.h and
	graphite-cloog-compat.h dependencies.
	(graphite-dependences.o): Likewise.
	(graphite-poly.o): Likewise.
	* configure.ac: Declare ISL vars instead of PPL ones.
	* configure: Regenerated.
	* doc/install.texi: Replace PPL requirement documentation with ISL one.
	* graphite-blocking.c: Remove PPL code, add ISL equivalent.
	* graphite-clast-to-gimple.c: Likewise.
	* graphite-dependences.c: Likewise.
	* graphite-interchange.c: Likewise.
	* graphite-poly.h: Likewise.
	* graphite-poly.c: Likewise.
	* graphite-sese-to-poly.c: Likewise.
	* graphite.c: Likewise.
	* graphite-scop-detection.c: Re-arrange includes.
	* graphite-cloog-util.c: Remove.
	* graphite-cloog-util.h: Likewise.
	* graphite-ppl.h: Likewise.
	* graphite-ppl.c: Likewise.
	* graphite-dependences.h: Likewise.

2012-07-02  Richard Guenther  <rguenther@suse.de>

	Merge from graphite branch
	2011-07-21  Tobias Grosser  <tobias@grosser.es>

	* Makefile.in (graphite-clast-to-gimple.o, graphite-cloog-util.o):
	Remove graphite-cloog-util.h.
	* graphite-clast-to-gimple.c (gcc_type_for_iv_of_clast_loop,
	build_iv_mapping, translate_clast_user, translate_clast,
	free_scattering, initialize_cloog_names, build_cloog_prog,
	create_params_index): Do not use old compatibility functions.
	(clast_name_to_index, set_cloog_options): Remove code for legacy cloog.
	* graphite-cloog-util.c (openscop_print_cloog_matrix): Do not use old
	compatibility functions.
	(new_Cloog_Scattering_from_ppl_Polyhedron): Remove code for legacy
	cloog.
	* graphite-cloog-util.h: Remove include of graphite-cloog-util.h.
	* graphite.c (graphite.c): Do not call outdated cloog_initialize() and
	cloog_finalize().
	* graphite-cloog-compat.h: Remove.

	2011-08-09  Tobias Grosser <tobias@grosser.es>

	* graphite-clast-to-gimple.c (new_clast_name_index): Store a copy
	of the string, no just a reference.
	(clast_name_index): Add a new field, that specifies if we need to free
	the name.
	(free_clast_name_index): If necessary, free the name string.
	(clast_name_index_elt_info): Calculate the hash based on the string
	content, not the memory location it is stored in.
	(clast_name_to_level): Specify that we do not need to free the name.
	(clast_name_to_index): Dito.
	(clast_name_to_lb_ub): Dito.
	(eq_clast_name_indexes): Compare the strings, not their base pointers.
	(free_scattering): Removed.
	(initialize_cloog_names): Renamed to add_names_to_union_domain().
	(add_names_to_union_domain): Changed to work on a union_domain,
	instead of a CloogNames structure.
	(build_cloog_prog): Removed.
	(build_cloog_union_domain): New.
	(generate_cloog_input): New.
	(scop_to_clast): Use CloogInput instead of CloogProgram.
	(print_generated_program): Adapt to new scop_to_clast() and do not
	print the CloogProgram any more.
	(create_params_index): Removed, functionality integrated in
	add_names_to_union_domain().
	(gloog): Adapt to new scop_to_clast().
	* graphite-clast-to-gimple.h (scop_to_clast): Remove.

	2012-01-11  Tobias Grosser <tobias@grosser.es>

	* graphite-clast-to-gimple.c (clast_name_to_index,
	clast_name_to_lb_ub, clast_name_to_gcc): Change types.
	(clast_to_gcc_expression): Add clast_expr_name as a new
	case. Do not assume a clast_expr_term points always to a
	clast_expr_name.
	(type_for_clast_term): Do not assume a clast_expr_term points always to
	a clast_expr_name.
	(type_for_clast_name): New.
	(type_for_clast_expr): Add clast_expr_name as a new case.

	2011-08-03  Sebastian Pop <sebpop@gmail.com>

	* graphite-cloog-util.c (new_Cloog_Domain_from_ppl_Polyhedron,
	new_Cloog_Scattering_from_ppl_Polyhedron,
	new_Cloog_Domain_from_ppl_Pointset_Powerset): Remove ATTRIBUTE_UNUSED.

2012-07-02  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/53645
	* tree-vect-generic.c (expand_vector_divmod): Use TYPE_MODE (type)
	instead of TYPE_MODE (wider_type) as can_vec_perm_p argument.

2012-07-01  Wei Guozhi  <carrot@google.com>

	PR target/53447
	* config/arm/arm-protos.h (const_ok_for_dimode_op): New prototype.
	* config/arm/arm.c (const_ok_for_dimode_op): New function.
	* config/arm/constraints.md (Dd): New constraint.
	* config/arm/predicates.md (arm_adddi_operand): New predicate.
	* config/arm/arm.md (adddi3): Extend it to handle constants.
	(arm_adddi3): Likewise.
	(addsi3_carryin_<optab>): Extend it to handle sbc case.
	(addsi3_carryin_alt2_<optab>): Likewise.
	* config/arm/neon.md (adddi3_neon): Extend it to handle constants.

2012-06-30  Nathan Sidwell  <nathan@acm.org>

	* coverage.c (bbg_file_stamp): New.
	(read_counts_file): Merge incoming stamp with bbg_file_stamp.
	(build_info): Write bbg_file_stamp.
	(coverage_init): Initialize bbg_file_stamp.  Read counts file
	before writing graph header.
	(coverage_finish): Don't unlink the data file if we can generate a
	unique file stamp.
	* tree.h (crc32_unsigned): Declare.
	* tree.c (crc32_unsigned_bits): New, broken out of ...
	(crc32_byte): ... here.  Use it.
	(crc32_unsigned): New.

2012-06-29  Cary Coutant  <ccoutant@google.com>

	* dwarf2out.c (add_pubname_string): Don't check for want_pubnames.
	(gen_subprogram_die): Don't add pubname if want_pubnames is false.
	(gen_variable_die): Likewise.
	(gen_namespace_die): Likewise.

2012-06-29  Eric Botcazou  <ebotcazou@adacore.com>

	* tree-eh.c (lower_try_finally_switch): Really put the location of the
	last statement of the finally block onto the switch.

2012-06-29  H.J. Lu  <hongjiu.lu@intel.com>

	PR target/53539
	* config/i386/gnu-user64.h (WCHAR_TYPE): Use "int" only for
	TARGET_LP64.

2012-06-29  Sterling Augustine  <saugustine@google.com>

	* dwarf2out.c (add_pubname): Add comment.
	(add_pubtype): Fix indentation.
	(gen_enumeration_type_die): Likewise.

2012-06-29  Jakub Jelinek  <jakub@redhat.com>

	* tree-vect-generic.c (expand_vector_divmod): For even/odd
	widening multiply, put even always as first argument to VEC_PERM_EXPR.

2012-06-29  Richard Henderson  <rth@redhat.com>

	* tree-vect-generic.c: Include target.h.
	(expand_vector_divmod): Use builtin_mul_widen_even/odd if supported.
	* Makefile.in (tree-vect-generic.o): Update.

2012-06-29  Steven Bosscher  <steven@gcc.gnu.org>

	* configure.ac: Remove special gtfiles case for C.
	* configure: Regenerate.
	* Makefile.in: Remove C front-end hooks and build hooks that
	will be picked up from c/Make-lang.in now.
	Add tree-mudflap to C_COMMON_OBJS.
	* gengtype.c (files_rules): Adjust gt-files for c/c-decl.c.
	* config/vms/vms.c: Look for c-tree.h in c/.
	* doc/gty.texi: Remove reference to c-config-lang.in.
	* doc/sourcebuild.texi: Document the c/ subdirectory.

2012-06-29  Steven Bosscher  <steven@gcc.gnu.org>

	* system.h (CASE_USE_BIT_TESTS): Poison.
	* stmt.c (CASE_USE_BIT_TESTS): Fold away into its only user ...
	(expand_switch_using_bit_tests_p): ...here.
	* doc/tm.texi.in (CASE_USE_BIT_TESTS): Remove documentation.
	* doc/tm.texi (CASE_USE_BIT_TESTS): Regenerate.

2012-06-29  Steven Bosscher  <steven@gcc.gnu.org>

	* system.h (IFCVT_EXTRA_FIELDS): Poison.
	(IFCVT_INIT_EXTRA_FIELDS): Poison.
	* basic-block.h (struct ce_if_block): Remove IFCVT_EXTRA_FIELDS.
	* ifcvt.c (find_if_header): Use IFCVT_MACHDEP_INIT instead of
	IFCVT_INIT_EXTRA_FIELDS.
	* gengtype-parse.c (struct_field_seq): Remove obsolete comment.
	* config/frv/frv.h (IFCVT_INIT_EXTRA_FIELDS): Rename to
	IFCVT_MACHDEP_INIT.
	* config/frv/frv.c (frv_ifcvt_init_extra_fields): Rename to
	frv_ifcvt_machdep_init.
	* doc/tm.texi.in (IFCVT_INIT_EXTRA_FIELDS, IFCVT_EXTRA_FIELDS):
	Remove documentation.
	(IFCVT_MACHDEP_INIT): Document.
	* doc/tm.texi: Regenerate.

2012-06-29  Nick Clifton  <nickc@redhat.com>

	* config/lm32/lm32.c (lm32_compute_frame_size): Fix typo.

2012-06-29  Jakub Jelinek  <jakub@redhat.com>

	* tree-vect-stmts.c (vectorizable_operation): Check both
	VEC_WIDEN_MULT_LO_EXPR and VEC_WIDEN_MULT_HI_EXPR optabs.
	Verify that operand[0]'s mode is TYPE_MODE (wide_vectype).

2012-06-28  Richard Henderson  <rth@redhat.com>

	* doc/generic.texi (MULT_HIGHPART_EXPR): Document it.

2012-06-28  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/51581
	* tree-vect-stmts.c (permute_vec_elements): Add forward decl.
	(vectorizable_operation): Handle vectorization of MULT_HIGHPART_EXPR
	also using VEC_WIDEN_MULT_*_EXPR or builtin_mul_widen_* plus
	VEC_PERM_EXPR if vector MULT_HIGHPART_EXPR isn't supported.
	* tree-vect-patterns.c (vect_recog_divmod_pattern): Use
	MULT_HIGHPART_EXPR instead of VEC_WIDEN_MULT_*_EXPR and shifts.

	PR tree-optimization/53645
	* tree-vect-generic.c (expand_vector_divmod): Use MULT_HIGHPART_EXPR
	instead of VEC_WIDEN_MULT_{HI,LO}_EXPR followed by VEC_PERM_EXPR
	if possible.

2012-06-28  Georg-Johann Lay  <avr@gjlay.de>

	PR 53595
	* config/avr/avr.c (avr_hard_regno_call_part_clobbered): New.
	* config/avr/avr-protos.h (avr_hard_regno_call_part_clobbered): New.
	* config/avr/avr.h (HARD_REGNO_CALL_PART_CLOBBERED): Forward to
	avr_hard_regno_call_part_clobbered.

2012-06-28  Richard Guenther  <rguenther@suse.de>

	PR middle-end/53790
	* expr.c (expand_expr_real_1): Verify if the type is complete
	before inspecting its size.

2012-06-28  Andreas Schwab  <schwab@linux-m68k.org>

	* doc/include/gpl.texi: Remove.
	* doc/sourcebuild.texi (Texinfo Manuals): Don't mention gpl.texi.

2012-06-28  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/53645
	* tree-vect-generic.c (add_rshift): New function.
	(expand_vector_divmod): New function.
	(expand_vector_operation): Use it for vector integer
	TRUNC_{DIV,MOD}_EXPR by VECTOR_CST.
	* tree-vect-patterns.c (vect_recog_divmod_pattern): Replace
	unused lguup variable with dummy_int.

2012-06-28  OLivier Hainque  <hainque@adacore.com>

	* expr.c (convert_move): Latch mem integer inputs into a
	register before expanding a multi-instructions sequence.

2012-06-28  Alexandre Oliva  <aoliva@redhat.com>
	    Uros Bizjak  <ubizjak@gmail.com>
	    Jakub Jelinek  <jakub@redhat.com>

	PR debug/53706
	PR debug/47624
	* var-tracking.c (vt_emit_notes): Release loc_exp_dep_pool...
	(vt_finalize): ... here instead, if needed.

2012-06-28  Alexandre Oliva  <aoliva@redhat.com>

	PR debug/53740
	PR debug/52983
	PR debug/48866
	* dce.c (word_dce_process_block): Check whether inserting debug
	temps are needed even for needed insns.
	(dce_process_block): Likewise.
	* df-problems.c (dead_debug_add): Add comment about multi-regs.
	(dead_debug_insert_temp): Likewise.  Don't subreg when we're
	setting fewer regs than a multi-reg requires.

2012-06-27  Richard Henderson  <rth@redhat.com>

	* config/alpha/alpha.c (alpha_dimode_u): New.
	(alpha_init_builtins): Initialize it, and use it.
	(alpha_fold_builtin_cmpbge): Use alpha_dimode_u.
	(alpha_fold_builtin_zapnot, alpha_fold_builtin_insxx): Likewise.
	(alpha_fold_vector_minmax, alpha_fold_builtin_perr): Likewise.
	(alpha_fold_builtin_pklb, alpha_fold_builtin_pkwb): Likewise.
	(alpha_fold_builtin_unpkbl, alpha_fold_builtin_unpkbw): Likewise.
	(alpha_fold_builtin_cttz, alpha_fold_builtin_ctlz): Likewise.
	(alpha_fold_builtin_ctpop): Likewise.
	(alpha_fold_builtin_umulh): Remove.
	(alpha_fold_builtin): Use MULT_HIGHPART_EXPR for UMULH; fix
	typo in MAX_ARGS check.

2012-06-27  Richard Henderson  <rth@redhat.com>

	* tree.def (MULT_HIGHPART_EXPR): New.
	* cfgexpand.c (expand_debug_expr): Ignore it.
	* expr.c (expand_expr_real_2): Handle it.
	* fold-const.c (int_const_binop_1): Likewise.
	* optabs.c (optab_for_tree_code): Likewise.
	* tree-cfg.c (verify_gimple_assign_binary): Likewise.
	* tree-inline.c (estimate_operator_cost): Likewise.
	* tree-pretty-print.c (dump_generic_node): Likewise.
	(op_code_prio, op_symbol_code): Likewise.
	* tree.c (commutative_tree_code): Likewise.  Also handle
	WIDEN_MULT_EXPR, VEC_WIDEN_MULT_HI_EXPR, VEC_WIDEN_MULT_LO_EXPR.

2012-06-27  Richard Henderson  <rth@redhat.com>

	PR target/53749
	* config/i386/i386.c (ix86_rtx_costs): Fix typo vs UNITS_PER_WORD
	in 2012-06-23 change.  Adjust two other DImode tests as well.

2012-06-27  Nick Clifton  <nickc@redhat.com>

	* config/rx/rx.md (comparesi3_extend): Remove = modifier from
	input operand.

2012-06-27  Richard Guenther  <rguenther@suse.de>

	PR middle-end/53676
	* tree-chrec.c (chrec_convert_1): Represent truncation to
	a type with undefined overflow as truncation to an unsigned
	type converted to the type with undefined overflow.
	* tree-scalar-evolution.c (interpret_rhs_expr): For computing
	the scalar evolution of a truncated widened operation avoid
	looking at the non-existing evolution of the widened operation
	result.

2012-06-27  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/53774
	* tree-ssa-reassoc.c (get_rank): All default defs have
	precomputed rank.
	(init_reassoc): Precompute rank for all SSA default defs.

2012-06-27  Nick Clifton  <nickc@redhat.com>

	* config/rx/rx.md (simple_return): Use the simple_return rtx.

2012-06-26  Richard Henderson  <rth@redhat.com>

	* config/i386/i386.c (ix86_rtx_costs): Use standard_sse_constant_p
	and don't fall thru from standard_80387_constant_p to the memory
	fallback.

2012-06-26  Richard Henderson  <rth@redhat.com>

	* config/i386/i386.c (bdesc_args): Update.  Change
	IX86_BUILTIN_VEC_WIDEN_SMUL_ODD_V4SI to OPTION_MASK_ISA_SSE2.
	(IX86_BUILTIN_VEC_WIDEN_SMUL_EVEN_V4SI): New.
	(ix86_builtin_mul_widen_even): Use it.
	(ix86_builtin_mul_widen_odd): Relax SMUL_ODD from sse4 to sse2.
	(ix86_expand_mul_widen_evenodd): Handle signed for sse2.
	* config/i386/sse.md (vec_widen_<s>mult_hi_<V124_AVX2>): Allow
	for all SSE2.
	(vec_widen_<s>mult_lo_<V124_AVX2>): Likewise.
	(vec_widen_<s>mult_odd_<VI4_AVX2>): Likewise.  Relax from V124_AVX2.
	(vec_widen_smult_even_v4si): New.

2012-06-26  Richard Henderson  <rth@redhat.com>

	* config/i386/sse.md (mul<VI8_AVX2>3): Change from insn_and_split
	to expander; move guts to ...
	* config/i386/i386.c (ix86_expand_sse2_mulvxdi3): ... here.  Add
	highparts before shifting up.
	* config/i386/i386-protos.h: Update.

2012-06-26  Steven Bosscher  <steven@gcc.gnu.org>

	* system.h (USE_COMMON_FOR_ONE_ONLY): Poison.
	* defaults.h (USE_COMMON_FOR_ONE_ONLY): Do not provide default.
	* config/darwin.h (USE_COMMON_FOR_ONE_ONLY): Do not define.

2012-06-26  Alexandre Oliva  <aoliva@redhat.com>

	* var-tracking.c (vt_add_function_parameter): Use a preserved
	VALUE for the MEM address of an incoming parameter.

2012-06-26  Sterling Augustine <saugustine@google.com>

	* dwarf2out.c (output_pubnames): Add check for DW_TAG_enumerator.
	(prune_unused_types): Likewise.

2012-06-26  Steven Bosscher  <steven@gcc.gnu.org>

	* system.h (UNALIGNED_SHORT_ASM_OP, UNALIGNED_INT_ASM_OP,
	UNALIGNED_LONG_ASM_OP, UNALIGNED_DOUBLE_INT_ASM_OP): Poison.
	* vmsdbgout.c (UNALIGNED_SHORT_ASM_OP, UNALIGNED_INT_ASM_OP,
	UNALIGNED_LONG_ASM_OP, UNALIGNED_DOUBLE_INT_ASM_OP): Rename to
	VMS_UNALIGNED_SHORT_ASM_OP, VMS_UNALIGNED_INT_ASM_OP,
	VMS_UNALIGNED_LONG_ASM_OP, and VMS_UNALIGNED_DOUBLE_INT_ASM_OP.
	* config/microblaze/microblaze.h (UNALIGNED_SHORT_ASM_OP,
	UNALIGNED_INT_ASM_OP, UNALIGNED_DOUBLE_INT_ASM_OP): Do not define.
	* doc/tm.texi.in: Remove UNALIGNED_INT_ASM_OP reference from the
	documentation.
	* doc/tm.texi: Regenerate.
	* doc/cpp.texi: Make example for #error generic.
	* config/frv/frv.h: Fix example text to match tm.texi.

2012-06-26  Bill Schmidt  <wschmidt@linux.ibm.com>

	* tree-pass.h (pass_strength_reduction): New decl.
	* tree-ssa-loop-ivopts.c (initialize_costs): Make non-static.
	(finalize_costs): Likewise.
	* timevar.def (TV_TREE_SLSR): New timevar.
	* gimple-ssa-strength-reduction.c: New.
	* tree-flow.h (initialize_costs): New decl.
	(finalize_costs): Likewise.
	* Makefile.in (tree-ssa-strength-reduction.o): New dependencies.
	* passes.c (init_optimization_passes): Add pass_strength_reduction.

2012-06-26  Matt Turner  <mattst88@gmail.com>

	* doc/extend.texi (__builtin_arm_tinsrb): Add missing second parameter.
	(__builtin_arm_tinsrh): Likewise.
	(__builtin_arm_tinsrw): Likewise.
	(__builtin_arm_wsadb): Add missing v2si parameter.
	(__builtin_arm_wsadh): Likewise.
	(__builtin_arm_getwcx): Delete.
	(__builtin_arm_setwcx): Delete.
	(__builtin_arm_getwcgr0): Add.
	(__builtin_arm_getwcgr1): Add.
	(__builtin_arm_getwcgr2): Add.
	(__builtin_arm_getwcgr3): Add.
	(__builtin_arm_setwcgr0): Add.
	(__builtin_arm_setwcgr1): Add.
	(__builtin_arm_setwcgr2): Add.
	(__builtin_arm_setwcgr3): Add.

2012-06-26  Richard Guenther  <rguenther@suse.de>

	Revert
	2012-06-21  Richard Guenther  <rguenther@suse.de>

	* tree-inline.c (estimate_num_insns): Estimate call cost for
	tailcalls properly.

2012-06-26  Steven Bosscher  <steven@gcc.gnu.org>

	PR other/33190
	* doc/tm.texi.in: Document LOGICAL_OP_NON_SHORT_CIRCUIT.
	* doc/tm.texi: Regenerate.

2012-06-26  Steven Bosscher  <steven@gcc.gnu.org>

	PR other/33190
	* config/mips/mips.h: Do not define ALL_COP_ADDITIONAL_REGISTER_NAMES.
	* config/frv/frv.h: Do not define REVERSE_CONDEXEC_PREDICATES_P.
	* doc/tm.texi.in: Remove documentation for unused target macros
	ALL_COP_ADDITIONAL_REGISTER_NAMES, DBX_OUTPUT_LBRAC, DBX_OUTPUT_NFUN,
	DBX_OUTPUT_RBRAC, RANGE_TEST_NON_SHORT_CIRCUIT, REAL_VALUE_TRUNCATE,
	REVERSE_CONDEXEC_PREDICATES_P, TARGET_ALIGN_ANON_BITFIELDS, and
	TARGET_NARROW_VOLATILE_BITFIELDS.
	Document that MD_HANDLE_UNWABI is a macro in libgcc.
	* doc/tm.texi: Regenerate.
	* system.h: Poison target macros
	ALL_COP_ADDITIONAL_REGISTER_NAMES, DBX_OUTPUT_LBRAC, DBX_OUTPUT_NFUN,
	DBX_OUTPUT_RBRAC, RANGE_TEST_NON_SHORT_CIRCUIT, REAL_VALUE_TRUNCATE,
	REVERSE_CONDEXEC_PREDICATES_P, TARGET_ALIGN_ANON_BITFIELDS, and
	TARGET_NARROW_VOLATILE_BITFIELDS

2012-06-26  Jan Hubicka  <jh@suse.cz>

	PR lto/53572
	* cgraph.h (varpool_can_remove_if_no_refs): Fix handling of
	used symbols.

2012-06-26  Dehao Chen  <dehao@google.com>

	* tree-inline.c: (expand_call_inline): Ensure that lexical block's
	source location is consistant with the call stmt.

2012-06-26  Ulrich Weigand  <ulrich.weigand@linaro.org>

	PR tree-optimization/53729
	PR tree-optimization/53636
	* tree-vect-slp.c (vect_slp_analyze_bb_1): Delay call to
	vect_verify_datarefs_alignment until after statements have
	been marked as relevant/irrelevant.
	* tree-vect-data-refs.c (vect_verify_datarefs_alignment):
	Skip irrelevant statements.
	(vect_enhance_data_refs_alignment): Use STMT_VINFO_RELEVANT_P
	instead of STMT_VINFO_RELEVANT.
	(vect_get_data_access_cost): Do not check for supportable
	alignment before calling vect_get_load_cost/vect_get_store_cost.
	* tree-vect-stmts.c (vect_get_store_cost): Do not abort when
	handling unsupported alignment.
	(vect_get_load_cost): Likewise.

2012-06-25  Steven Bosscher  <steven@gcc.gnu.org>

	* config/rl78/rl78.h: Do not undefine DONT_USE_BUILTIN_SETJMP.
	Do not define JMP_BUF_SIZE.

2012-06-26  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/53748
	* tree-ssa-phiopt.c (conditional_replacement): Only optimize
	if arg0/arg1 have integral or pointer types.

2012-06-25  Richard Henderson  <rth@redhat.com>

	* config/i386/sse.md (sse2_sse4_1): Remove code attr.
	(<s>dot_prodv4si, <s>dot_prodv8si): Remove
	(sdot_prodv4si): New; handle only XOP.

2012-06-25  Richard Henderson  <rth@redhat.com>

	* config/i386/i386-builtin-types.def (V4UDI, V8USI): New.
	(V2UDI_FUNC_V4USI_V4USI): New.
	(V4UDI_FUNC_V8USI_V8USI): New.
	* config/i386/i386.c (ix86_expand_args_builtin): Handle them.
	(IX86_BUILTIN_VEC_WIDEN_SMUL_ODD_V4SI): New.
	(IX86_BUILTIN_VEC_WIDEN_SMUL_ODD_V8SI): New.
	(IX86_BUILTIN_VEC_WIDEN_UMUL_ODD_V4SI): New.
	(IX86_BUILTIN_VEC_WIDEN_UMUL_ODD_V8SI): New.
	(IX86_BUILTIN_VEC_WIDEN_UMUL_EVEN_V4SI): New.
	(IX86_BUILTIN_VEC_WIDEN_UMUL_EVEN_V8SI): New.
	(bdesc_args): Add them.
	(ix86_builtin_mul_widen_even, ix86_builtin_mul_widen_odd): New.
	(TARGET_VECTORIZE_BUILTIN_MUL_WIDEN_EVEN): New.
	(TARGET_VECTORIZE_BUILTIN_MUL_WIDEN_ODD): New.
	(ix86_expand_mul_widen_evenodd): Use xop_pmacsdqh.
	* config/i386/sse.md (vec_widen_<s>mult_odd_<V124_AVX2>): New.

2012-06-25  Richard Henderson  <rth@redhat.com>

	* config/i386.sse.md (mul<VI4_AVX2>3): Use xop_pmacsdd.

2012-06-25  Richard Henderson  <rth@redhat.com>

	* config/i386/i386.c (ix86_rtx_costs) [MULT]: Only apply XOP cost
	to V16QImode.
	(ix86_expand_vec_interleave): New.
	(ix86_expand_mul_widen_evenodd): New.
	(ix86_expand_mul_widen_hilo): New.
	(ix86_expand_sse2_mulv4si3): Use ix86_expand_mul_widen_evenodd.
	* config/i386/i386.md (u_bool) New code attr.
	* config/i386/predicates.md
	(nonimmediate_or_const_vector_operand): Remove.
	* config/i386/sse.md (mul<VI4_AVX2>3): Don't use it; don't test
	both AVX and SSE4_1.
	(vec_widen<s>mult_hi_<VI2_AVX2>): Remove.
	(vec_widen<s>mult_lo_<VI2_AVX2>): Remove.
	(vec_widen<s>mult_hi_v8si): Remove.
	(vec_widen<s>mult_lo_v8si): Remove.
	(vec_widen_smult_hi_v4si): Remove.
	(vec_widen_smult_lo_v4si): Remove.
	(vec_widen_umult_hi_v4si): Remove.
	(vec_widen_umult_lo_v4si): Remove.
	(vec_widen_<s>mult_hi_<VI124_AVX2>): New.
	(vec_widen_<s>mult_lo_<VI124_AVX2>): New.
	* config/i386/i386-protos.h: Update.

2012-06-25  Christophe Lyon  <christophe.lyon@st.com>

	* config/arm/neon.md (UNSPEC_VLD1_DUP): Remove.
	(neon_vld1_dup): Restrict to VQ operands.
	(neon_vld1_dupv2di): New, fixes vld1q_dup_s64.

2012-06-25  Matthew Gretton-Dann  <matthew.gretton-dann@arm.com>
	    James Greenhalgh  <james.greenhalgh@arm.com>

	* config/arm/arm.h (TARGET_CPU_CPP_BUILTINS): Add new built-ins.
	(TARGET_FMA): New macro.
	(TARGET_ARM_QBIT, TARGET_ARM_SAT): Likewise.
	(TARGET_ARM_ARCH): Likewise.
	(TARGET_ARM_ARCH_ISA_THUMB): Likewise.
	(TARGET_V6M, TARGET_V7M): Likewise.
	(TARGET_ARM_ARCH_PROFILE): Likewise.
	(TARGET_ARM_FEATURE_LDREX): Likewise.
	(TARGET_ARM_FP, TARGET_NEON_FP): Likewise.
	(ARM_MIN_ENUM_SIZE): Likewise.
	* config/arm/arm.c (arm_file_start): Refactor appropriately.
	(base_architecture): New enumeration.
	(arm_base_arch): New global variable.
	(processors): Add field base_arch.
	(ARM_ARCH, ARM_CORE): Adjust accordingly.
	(arm_option_override): Add initialization of arm_base_arch.
	* doc/cpp.texi (system-specific predefined macros.): Change.

2012-06-25  Jakub Jelinek  <jakub@redhat.com>

	PR target/53759
	* config/i386/sse.md (sse_loadlps): Use x m x constraints instead
	of x x x in the vmovlps load alternative.

2012-06-25  Richard Sandiford  <rdsandiford@googlemail.com>

	PR debug/53740
	* df.h (dead_debug_add): Remove third argument.
	* df-problems.c (dead_debug_add): Likewise.  Use the REGNO of the
	REG that we want to replace instead.
	(dead_debug_insert_temp): Use the REGNO of the reg that we want
	to replace instead of DF_REF_REGNO.  Require there to always be
	at least one such use.  Check for cases where the same location
	has more than df_ref associated with it.
	(df_note_bb_compute): Remove third dead_debug_add argument.
	* dce.c (word_dce_process_block): Likewise.

2012-06-25  Steven Bosscher  <steven@gcc.gnu.org>

	* config/v850/v850.c: Remove redundant extern declarations for
	last_assemble_variable_decl and size_directive_output.

	* doc/tm.texi.in: Document JMP_BUF_SIZE.
	* doc/tm.texi: Regenerate.
	* config/sparc/sparc.h (JMP_BUF_SIZE): Do not define.
	* config/pa/pa.h (JMP_BUF_SIZE): Likewise.
	* config/stormy16/stormy16.h: Likewise.

	* config/picochip/picochip.c: Do not define DONT_USE_BUILTIN_SETJMP.

	* doc/sourcebuild.texi: Add missing subdirectories.

2012-06-25  Tristan Gingold  <gingold@adacore.com>

	* config/i386/i386.h: Fix typo.

2012-06-25  Tristan Gingold  <gingold@adacore.com>

	* config/i386/winnt.c (i386_pe_seh_end_prologue): Move code to ...
	(seh_cfa_adjust_cfa): ... that function.
	(seh_emit_stackalloc): Do not emit out of range values.
	* config/i386/i386.md: Delete unused UNSPEC_REG_SAVE,
	UNSPEC_DEF_CFA constants.
	* config/i386/i386.h (SEH_MAX_FRAME_SIZE): Define.
	* config/i386/i386.c (ix86_frame_pointer_required): Required
	for very large frames on SEH target.
	(ix86_compute_frame_layout): Save area is before frame pointer
	on SEH target.  Handle very large frames.
	(ix86_expand_prologue): Likewise.

2012-06-24  Steven Bosscher  <steven@gcc.gnu.org>

	* output.h: (current_function_is_leaf,
	current_function_sp_is_unchanging,
	current_function_uses_only_leaf_regs): Remove.
	* function.c (current_function_is_leaf,
	current_function_sp_is_unchanging,
	current_function_uses_only_leaf_regs): Remove.
	(rest_of_handle_check_leaf_regs): Set crtl->uses_only_leaf_regs
	instead of current_function_uses_only_leaf_regs.
	* function.h (struct rtl_data): New fields sp_is_unchanging,
	is_leaf, uses_only_leaf_regs.
	* resource.c (init_resource_info): Replace current_function_is_leaf,
	current_function_sp_is_unchanging, and
	current_function_uses_only_leaf_regs with new crtl fields.
	* sdbout.c (sdbout_symbol): Likewise.
	* df-core.c (rest_of_handle_df_initialize): Likewise.
	* ira.c (ira): Likewise.
	* final.c (final_start_function): Likewise.
	* reorg.c (fill_simple_delay_slots): Likewise.
	* regrename.c (check_new_reg_p): Likewise.
	* stack-ptr-mod.c (notice_stack_pointer_modification_1): Likewise.
	(notice_stack_pointer_modification): Likewise.
	* dbxout.c (dbxout_symbol): Likewise.
	(dbxout_parms): Likewise.
	* sel-sched.c (init_regs_for_mode): Likewise.
	* dwarf2out.c (dbx_reg_number): Likewise.
	(multiple_reg_loc_descriptor): Likewise.
	* config/i386/i386.c (ix86_frame_pointer_required): Likewise.
	(gen_pop): Likewise.
	(ix86_select_alt_pic_regnum): Likewise.
	(ix86_compute_frame_layout): Likewise.
	(ix86_finalize_stack_realign_flags): Likewise.
	(ix86_expand_epilogue): Likewise.
	* config/rs6000/rs6000.c (rs6000_stack_info): Likewise.
	* config/h8300/h8300.c (byte_reg): Likewise.
	* config/c6x/c6x.c (must_reload_pic_reg_p): Likewise.
	(c6x_save_reg): Likewise.
	(c6x_compute_frame_layout): Likewise.
	* config/pa/pa.c (pa_compute_frame_size): Likewise.
	(pa_output_function_prologue): Likewise.
	* config/stormy16/stormy16.c (struct xstormy16_stack_layout): Likewise.
	* config/sparc/sparc.md (attr "leaf_function"): Likewise.
	* config/sparc/sparc.c (sparc_initial_elimination_offset): Likewise.
	(sparc_expand_prologue): Likewise.
	(sparc_flat_expand_prologue): Likewise.
	(sparc_asm_function_prologue): Likewise.
	(sparc_output_mi_thunk): Likewise.
	(sparc_frame_pointer_required): Likewise.
	* config/epiphany/epiphany.c (epiphany_compute_function_type):
	Likewise.
	(epiphany_compute_frame_size): Likewise.
	* config/lm32/lm32.c (lm32_compute_frame_size): Likewise.
	* config/cris/cris.c (cris_md_asm_clobbers): Likewise.
	(cris_frame_pointer_required): Likewise.
	* config/tilepro/tilepro.c (emit_sp_adjust): Likewise.
	(tilepro_current_function_is_leaf): Likewise.
	* config/arm/arm.c (arm_compute_save_reg0_reg12_mask): Likewise.
	* config/pdp11/pdp11.c (pdp11_expand_epilogue): Likewise.
	* config/ia64/ia64.c (find_gr_spill): Likewise.
	(ia64_compute_frame_size): Likewise.
	(ia64_can_eliminate): Likewise.
	(ia64_initial_elimination_offset): Likewise.
	* config/m68k/m68k.c (m68k_save_reg): Likewise.
	(m68k_expand_epilogue): Likewise.
	* config/rx/rx.c (rx_get_stack_layout): Likewise.
	* config/tilegx/tilegx.c (tilegx_current_function_is_leaf): Likewise.
	* config/picochip/picochip.c (picochip_can_eliminate_link_sp_save):
	Likewise.
	(picochip_output_frame_debug): Likewise.
	* config/sh/sh.c (sh_media_register_for_return): Likewise.
	(sh_allocate_initial_value): Likewise.
	(sh_output_mi_thunk): Likewise.
	* config/microblaze/microblaze.c (microblaze_must_save_register):
	Likewise.
	(compute_frame_size): Likewise.
	(microblaze_initial_elimination_offset): Likewise.
	(microblaze_expand_prologue): Likewise.
	(microblaze_expand_epilogue): Likewise.
	* config/frv/frv.c (frv_expand_epilogue): Likewise.
	(frv_frame_pointer_required): Likewise.
	* config/spu/spu.c (get_pic_reg): Likewise.
	(direct_return): Likewise.
	(spu_expand_prologue): Likewise.
	(spu_expand_epilogue): Likewise.
	(spu_initial_elimination_offset): Likewise.
	* config/mips/mips.c (mips_global_pointer): Likewise.
	(mips_cfun_might_clobber_call_saved_reg_p): Likewise.
	(mips_compute_frame_info): Likewise.
	* config/mep/mep.c (mep_interrupt_saved_reg): Likewise.
	(mep_reload_pointer): Likewise.
	* config/rl78/rl78.c (need_to_save): Likewise.
	* config/cr16/cr16.c (cr16_compute_save_regs): Likewise.
	* config/score/score.c (score_compute_frame_size): Likewise.
	(score_function_prologue): Likewise.
	* config/bfin/bfin.c (must_save_p): Likewise.
	(expand_prologue_reg_save): Likewise.
	(expand_epilogue_reg_restore): Likewise.
	(bfin_frame_pointer_required): Likewise.
	(n_regs_saved_by_prologue): Likewise.
	(add_to_reg): Likewise.
	(expand_interrupt_handler_prologue): Likewise.
	(expand_interrupt_handler_epilogue): Likewise.
	(bfin_expand_prologue): Likewise.
	* config/avr/avr.c (avr_regs_to_save): Likewise.
	(avr_prologue_setup_frame): Likewise.
	(expand_epilogue): Likewise.
	* config/s390/s390.c (s390_regs_ever_clobbered): Likewise.
	(s390_register_info): Likewise.
	(s390_frame_info): Likewise.
	(s390_init_frame_layout): Likewise.
	(s390_emit_prologue): Likewise.


2012-06-24  Steven Bosscher  <steven@gcc.gnu.org>

	* system.h: Poison ASM_BYTE_OP and ASM_OUTPUT_BYTE.
	* vmsdbgout: Do not undefine it if defined.
	Rename local ASM_BYTE_OP definition to VMS_ASM_BYTE_OP.
	* config/microblaze/microblaze/h: Do no define ASM_BYTE_OP.
	* config/mep/mep.h: Do not define ASM_OUTPUT_BYTE.

2012-06-24  Richard Sandiford  <rdsandiford@googlemail.com>

	* config/mips/mips.c (mips_process_sync_loop): Add missing enum cast.

2012-06-23  Richard Henderson  <rth@redhat.com>

	PR target/53749
	* config/i386/i386.c (ix86_rtx_costs): Add reasonable costs for
	V*QImode shifts and multiply.
	(ix86_expand_vecop_qihi): Support shifts.
	* config/i386/i386.md (any_shift): New code iterator.
	* config/i386/sse.md (ashlv16qi3): Merge ...
	(<any_shiftrt>v16qi3): ... into ...
	(<any_shift><VI1_AVX2>3): ... here.  Use ix86_expand_vecop_qihi
	to support SSE and AVX.

	* config/i386/i386.c (ix86_expand_sse_unpack): Split operands[]
	parameter into src and dest.
	* config/i386/sse.md (vec_unpacku_hi_<V124_AVX2>): Update call.
	(vec_unpacks_hi_<V124_AVX2>): Likewise.
	(vec_unpacku_lo_<V124_AVX2>): Likewise.
	(vec_unpacks_lo_<V124_AVX2>): Likewise.
	* config/i386/i386-protos.h: Update.

	* config/i386/sse.md (mul<VI1_AVX2>3): Change from insn_and_split to
	pure expander; move expansion code ...
	* config/i386/i386.c (ix86_expand_vecop_qihi): ... here.  New function.
	* config/i386/i386-protos.h: Update.

2012-06-22  Edmar Wienskoski  <edmar@freescale.com>

	* config/rs6000/rs6000.md (define_attr "type"): New type popcnt.
	(popcntb<mode>2): Add attribute type popcnt.
	(popcntd<mode>2): Ditto.
	* config/rs6000/power4.md (define_insn_reservation): Add type popcnt.
	* config/rs6000/power5.md (define_insn_reservation): Ditto.
	* config/rs6000/power7.md (define_insn_reservation): Ditto.
	* config/rs6000/476.md (define_insn_reservation): Ditto.
	* config/rs6000/power6.md (define_insn_reservation): New
	reservation for popcnt instructions.

2012-06-22  H.J. Lu  <hongjiu.lu@intel.com>

	* doc/invoke.texi: Update -mpreferred-stack-boundary=3 warning.

2012-06-22  H.J. Lu  <hongjiu.lu@intel.com>

	PR target/53383
	* doc/invoke.texi: Add a warning for -mpreferred-stack-boundary=3.

	* config/i386/i386.c (ix86_option_override_internal): Allow
	-mpreferred-stack-boundary=3 for 64-bit if SSE is disabled.

	* config/i386/i386.h (MIN_STACK_BOUNDARY): Set to 64 for 64-bit
	if SSE is disabled.

2012-06-22  Bill Schmidt  <wschmidt@linux.ibm.com>

	* double-int.c (double_int_multiple_of): New function.
	* double-int.h (double_int_multiple_of): New decl.
	* tree-ssa-loop-ivopts.c (add_cost, zero_cost): Remove undefs.
	(mbc_entry_hash): New forward decl.
	(mbc_entry_eq): Likewise.
	(zero_cost): Change to no_cost.
	(mult_costs): New static var.
	(cost_tables_exist): Likewise.
	(initialize_costs): New function.
	(finalize_costs): Likewise.
	(tree_ssa_iv_optimize_init): Call initialize_costs.
	(add_cost): Change to add_regs_cost; distinguish costs by speed.
	(multiply_regs_cost): New function.
	(add_const_cost): Likewise.
	(extend_or_trunc_reg_cost): Likewise.
	(negate_reg_cost): Likewise.
	(multiply_by_cost): Change to multiply_by_const_cost; distinguish
	costs by speed.
	(get_address_cost): Change add_cost to add_regs_cost; change
	multiply_by_cost to multiply_by_const_cost.
	(force_expr_to_var_cost): Change zero_cost to no_cost; change
	add_cost to add_regs_cost; change multiply_by_cost to
	multiply_by_const_cost.
	(split_cost): Change zero_cost to no_cost.
	(ptr_difference_cost): Likewise.
	(difference_cost): Change zero_cost to no_cost; change multiply_by_cost
	to multiply_by_const_cost.
	(get_computation_cost_at): Change add_cost to add_regs_cost; change
	multiply_by_cost to multiply_by_const_cost.
	(determine_use_iv_cost_generic): Change zero_cost to no_cost.
	(determine_iv_cost): Change add_cost to add_regs_cost.
	(iv_ca_new): Change zero_cost to no_cost.
	(tree_ssa_iv_optimize_finalize): Call finalize_costs.
	* tree-ssa-address.c (most_expensive_mult_to_index): Change
	multiply_by_cost to multiply_by_const_cost.
	* tree-flow.h (multiply_by_cost): Change to multiply_by_const_cost.
	(add_regs_cost): New decl.
	(multiply_regs_cost): Likewise.
	(add_const_cost): Likewise.
	(extend_or_trunc_reg_cost): Likewise.
	(negate_reg_cost): Likewise.

2012-06-22  Richard Guenther  <rguenther@suse.de>

	Merge from graphite branch
	2011-08-10  Sebastian Pop <sebpop@gmail.com>

	* graphite-sese-to-poly.c (build_scop_drs): Fix memory leak.

	2012-01-13  Tobias Grosser  <tobias@grosser.es>

	* tree-flow.h (parallelized_function_p): Declare.
	* tree-parloops.c (parallelized_function_p): Export.
	* graphite.c (graphite_transform_loops): Do not run graphite on
	already parallel functions.

2012-06-22  Alan Modra  <amodra@gmail.com>

	* config/rs6000/rs6000.c (rs6000_pre_atomic_barrier): Pass in and
	return mem.  Convert to indirect addressing if not indirect or
	indexed.  Adjust all callers.

2012-06-22  Richard Guenther  <rguenther@suse.de>

	* gcov-iov.c: Include bconfig.h and system.h.

2012-06-22  Andreas Schwab  <schwab@linux-m68k.org>

	* doc/include/texinfo.tex: Update to version 2012-06-05.14.

2012-06-22  Richard Guenther  <rguenther@suse.de>

	PR gcov-profile/53744
	* gcov-iov.c (main): Treat "" and "prerelease" the same.

2012-06-22  Eric Botcazou  <ebotcazou@adacore.com>

	PR debug/53704
	* dwarf2out.c (gen_compile_unit_die): Use DW_LANG_Fortran90 as language
	for GNU Fortran if in strict DWARF2 mode.

2012-06-22  Eric Botcazou  <ebotcazou@adacore.com>

	* tree-ssa-live.c (remove_unused_scope_block_p): Remove again
	DECL_IGNORED_P non-reg vars even if they are used.

2012-06-21  Alexandre Oliva  <aoliva@redhat.com>

	PR debug/53671
	PR debug/49888
	* var-tracking.c (vt_get_canonicalize_base): New.
	(vt_canonicalize_addr, vt_stack_offset_p): New.
	(vt_canon_true_dep): New.
	(drop_overlapping_mem_locs): Use vt_canon_true_dep.
	(clobber_overlaping_mems): Use vt_canonicalize_addr.

2012-06-21  Alexandre Oliva  <aoliva@redhat.com>

	PR debug/53671
	PR debug/49888
	* var-tracking.c (vt_initialize): Record initial offset between
	arg pointer and stack pointer.

2012-06-21  Alexandre Oliva  <aoliva@redhat.com>

	PR debug/53671
	PR debug/49888
	* var-tracking.c (vt_init_cfa_base): Drop redundant recording of
	CFA base.

2012-06-21  Alexandre Oliva  <aoliva@redhat.com>

	PR debug/53671
	PR debug/49888
	* alias.c (memrefs_conflict_p): Improve handling of AND for alignment.

2012-06-21  Alexandre Oliva  <aoliva@redhat.com>

	* ddg.c (build_intra_loop_deps): Discard deps of nondebug on debug.

2012-06-21  Alexandre Oliva  <aoliva@redhat.com>

	PR debug/53682
	* cselib.c (promote_debug_loc): Don't crash on NULL argument.

2012-06-21  Meador Inge  <meadori@codesourcery.com>

	PR c/53702
	* c-decl.c (c_push_function_context): Restore the behavior to reuse
	the language function allocated for -Wunused-local-typedefs.
	(c_pop_function_context): If necessary, clear the language function
	created in c_push_function_context.  Always clear out the
	x_cur_stmt_list field of the restored language function.

2012-06-21  Sterling Augustine  <saugustine@google.com>
	    Cary Coutant  <ccoutant@google.com>

	* dwarf2out.c (is_cu_die, is_namespace_die, is_class_die,
	add_AT_pubnames, add_enumerator_pubname, want_pubnames): New functions.
	(comdat_type_struct): New field 'skeleton_die'.
	(breakout_comdat_types): Update it.
	(add_pubname): Rework logic.  Call is_class_die, is_cu_die and
	is_namespace_die.  Fix minor style violation.  Call want_pubnames.
	(add_pubname_string): Call want_pubnames.
	(add_pubtype): Rework logic for calculating type name.  Call
	is_namespace_die.  Call want_pubnames.
	(output_pubnames): Move conditional logic deciding when to produce the
	section from dwarf2out_finish.  Use new skeleton_die field.
	(base_type_die): Call add_pubtype.
	(gen_enumeration_type_die): Unconditionally call add_pubtype.
	(gen_subprogram_die): Adjust calls to add_pubname.
	(gen_namespace_die): Call add_pubname_string.
	(dwarf2out_finish): Call add_AT_pubnames; Move logic on when to
	produce pubnames and pubtypes sections to output_pubnames.
	* common.opt (-gpubnames): New option.
	* doc/invoke.texi: Document it.

2012-06-21  Steven Bosscher  <steven@gcc.gnu.org>

	* config/m32c/m32c-pragma.c: Remove unnecessary includes.

2012-06-21  Michael Matz  <matz@suse.de>

	PR middle-end/53688
	* builtins.c (get_memory_rtx): Always build an all-aliasing MEM_REF
	with correct size.

2012-06-21  Richard Guenther  <rguenther@suse.de>

	* tree-inline.c (estimate_num_insns): Estimate call cost for
	tailcalls properly.

2012-06-20  Rüdiger Sonderfeld  <ruediger@c-plusplus.de>

	* tree.h (DECL_SOURCE_COLUMN): New accessor.

2012-06-20  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.md (SINCOS): New int iterator.
	(sincos): New int attribute.
	(*<sincos>xf2_i387): Macroize insn from *{sin,cos}xf2_i387 using
	SINCOS int iterator.
	(*<sincos>_extend<mode>xf2_i387): Macroize insn from
	*{sin,cos}_extend<mode>xf2_i387 using SINCOS int iterator.

2012-06-20  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.md (RDFSGSBASE): New int iterator.
	(WRFSGSBASE): Ditto.
	(fsgs): New int attribute.
	(rd<fsgs>base<mode>): Macroize insn from rd<fsgs>base<mode> using
	RDFSGSBASE int iterator.
	(wr<fsgs>base<mode>): Macroize insn from wr<fsgs>base<mode> using
	WRFSGSBASE int iterator.

2012-06-20  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.md (<rounding_insn><mode>2): Macroize expander
	from {floor,ceil,btrunc}<mode>2 using FIST_ROUNDING int iterator.
	(l<rounding_insn><MODEF:mode><SWI48:mode>2): Macroize expander
	from l{floor,ceil}<MODEF:mode><SWI48:mode>2 using FIST_ROUNDING
	int iterator.

2012-06-20  Steven Bosscher  <steven@gcc.gnu.org>

	* system.h: Poison ASM_OUTPUT_IDENT and IDENT_ASM_OP.

2012-06-20  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/30318
	* tree-vrp.c (range_int_cst_p): Do not reject overflowed
	constants here.
	(range_int_cst_singleton_p): But explicitely here.
	(zero_nonzero_bits_from_vr): And here.
	(extract_range_from_binary_expr_1): Re-implement PLUS_EXPR
	to cover all cases we can perform arbitrary precision
	arithmetic with double-ints.
	(intersect_ranges): Handle adjacent anti-ranges.

2012-06-20  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.md (rounding_insn): New int attribute.
	(<rounding_insn>xf2): Macroize insn from
	{floor,ceil,btrunc}xf2 using FRNDINT_ROUNDING int iterator.
	(l<rounding_insn>xf<mode>2): Rename from l<rounding>xf<mode>2.

2012-06-20  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.md (IEEE_MAXMIN): New int iterator.
	(ieee_maxmin): New int attribute.
	(*ieee_s<ieee_maxmin><mode>3): Macroize insn from
	*ieee_s{max,min}<mode>3 using IEEE_MAXMIN int iterator.

2012-06-20  Steven Bosscher  <steven@gcc.gnu.org>

	* config/arm/arm.h (EMIT_EABI_ATTRIBUTE): Remove.
	* config/arm/arm.c: Do not include c-pragma.h.
	(arm_emit_eabi_attribute): New function based on EMIT_EABI_ATTRIBUTE.
	(arm_file_start): Replace uses of EMIT_EABI_ATTRIBUTE with calls
	to arm_emit_eabi_attribute.
	* arm-c.c: Do not include output.h.
	(arm_output_c_attributes): Replace use of EMIT_EABI_ATTRIBUTE with a
	call to arm_emit_eabi_attribute.
	* config/arm/arm-protos.h (arm_emit_eabi_attribute): Prototype it.

2012-06-20  Richard Guenther  <rguenther@suse.de>

	* tree-vect-data-refs.c (vect_can_force_dr_alignment_p):
	Allow adjusting alignment of user-aligned decls again.

2012-06-20  Steven Bosscher  <steven@gcc.gnu.org>

	* config/rl78/rl78-c.c: Remove unnecessary includes.

2012-06-20  Steven Bosscher  <steven@gcc.gnu.org>

	* config/cris/cris.c: Include cgraph.h.
	(cris_option_override): Do not set non-existing flag_no_gcc_ident.

2012-06-19  Maxim Kuvyrkov  <maxim@codesourcery.com>

	* emit-rtl.c (need_atomic_barrier_p): New function.
	* emit-rtl.h (need_atomic_barrier_p): Declare it.
	* config/alpha/alpha.c (alpha_{pre,post}_atomic_barrier): Use it.
	* config/arm/arm.c (arm_{pre,post}_atomic_barrier): Use it.
	* config/tilegx/tilegx.c (tile_{pre,post}_atomic_barrier): Use it.
	* config/mips/mips.c (mips_{pre,post}_atomic_barrier_p): Remove.
	(mips_process_sync_loop): Use generic version instead.

2012-06-19  Maxim Kuvyrkov  <maxim@codesourcery.com>

	* config/mips/mips.c (mips_process_sync_loop): Emit cmp result only if
	it is used.

2012-06-19  Tom de Vries  <vries@codesourcery.com>
	    Maxim Kuvyrkov  <maxim@codesourcery.com>

	* config/mips/constraints.md (ZR): New constraint.
	* config/mips/predicates.md (mem_noofs_operand): New predicate.
	* config/mips/mips.c (mips_print_operand): Handle new print modifier.
	* config/mips/mips.h (TARGET_XLP): Define.
	(TARGET_SYNC_AFTER_SC): Update.
	(ISA_HAS_SWAP, ISA_HAS_LDADD): Define.
	* config/mips/sync.md (atomic_exchange, atomic_fetch_add): Use
	XLP-specific swap and ldadd patterns.
	(atomic_exchange_swap, atomic_fetch_add_ldadd): New patterns.

2012-06-19  Tom de Vries  <vries@codesourcery.com>
	    Maxim Kuvyrkov  <maxim@codesourcery.com>

	* config/mips/mips.c (mips_emit_pre_atomic_barrier_p,)
	(mips_emit_post_atomic_barrier_p): New static functions.
	(mips_process_sync_loop): Use them.  Emit sync memory barriers in
	accordance with memory model semantics.  Add return of CMP result for
	compare_and_swap.
	* config/mips/mips.md: Update comment.
	(sync_cmp): New attribute.
	(sync_memmodel): New attribute replacing sync_release_barrier.
	* config/mips/sync.md (UNSPEC_ATOMIC_COMPARE_AND_SWAP,)
	(UNSPEC_ATOMIC_EXCHANGE, UNSPEC_ATOMIC_FETCH_OP): New constants.
	(sync_lock_test_and_set, test_and_set_12): Update.
	(atomic_compare_and_swap, atomic_exchange, atomic_exchange_llsc,)
	(atomic_fetch_add, atomic_fetch_add_llsc): New patterns.

2012-06-19  Joseph Myers  <joseph@codesourcery.com>

	* config/rs6000/spe.md (*mov_si<mode>_e500_subreg0): Rename to
	mov_si<mode>_e500_subreg0.
	(*mov_si<mode>_e500_subreg0_elf_low)
	(*mov_si<mode>_e500_subreg4_elf_low): New patterns.

2012-06-19  Richard Henderson  <rth@redhat.com>

	* config/alpha/alpha.c: Include params.h.
	(alpha_option_override): Initialize PARAM_L1_CACHE_LINE_SIZE,
	PARAM_L1_CACHE_SIZE, PARAM_L2_CACHE_SIZE for the cpu tuning.

2012-06-19  Steven Bosscher  <steven@gcc.gnu.org>

	* doc/tm.texi.in (TARGET_OBJC_DECLARE_UNRESOLVED_CLASS_REFERENCE,
	TARGET_OBJC_DECLARE_CLASS_DEFINITION): Add @hooks.
	(ASM_DECLARE_CLASS_REFERENCE, ASM_DECLARE_UNRESOLVED_REFERENCE):
	Remove.
	* doc/tm.texi: Regenerate.
	* config/darwin.h (ASM_OUTPUT_LABELREF): Remove special case for
	.objc_class_name_*.
	* config/darwin-c.c: Include target.h.
	(darwin_objc_declare_unresolved_class_reference): New function.
	(darwin_objc_declare_class_definition): New function.
	(TARGET_OBJC_DECLARE_UNRESOLVED_CLASS_REFERENCE): Define.
	(TARGET_OBJC_DECLARE_CLASS_DEFINITION): Define.

2012-06-19  Steven Bosscher  <steven@gcc.gnu.org>

	* target.def (output_ident): New hook.
	* targhooks.h (default_asm_output_ident_directive): Add prototype.
	* varasm.c (assemble_asm): Only prefix a tab if the string does not
	already start with one.
	(default_asm_output_ident_directive): New function to emit
	.ident as a top-level asm node while parsing, or directly to
	asm_out_file after parsing.
	* toplev.c (compile_file): Print a GCC .ident with
	targetm.asm_out.output_ident.
	* doc/tm.texi.in (ASM_OUTPUT_IDENT): Remove documentation for macro.
	(TARGET_ASM_OUTPUT_IDENT): Add @hook for this.
	* doc/tm.texi: Update.

	* config/elfos.h (ASM_OUTPUT_IDENT, IDENT_ASM_OP): Remove.
	(TARGET_ASM_OUTPUT_IDENT): Define.
	* config/i386/djgpp.h (IDENT_ASM_OP): Remove.
	* config/i386/gas.h (ASM_OUTPUT_IDENT): Remove.
	* config/arm/aout.h (ASM_OUTPUT_IDENT): Remove.
	* config/sparc/sparc.h (IDENT_ASM_OP): Remove.
	(TARGET_ASM_OUTPUT_IDENT): Define.
	* config/picochip/picochip.h (IDENT_ASM_OP): Remove.
	(TARGET_ASM_OUTPUT_IDENT): Define.

	* config/cris/cris-protos.h (cris_asm_output_ident): Add prototype.
	* config/cris/cris.c (cris_asm_output_ident): New function.
	* config/cris/cris.h (ASM_OUTPUT_IDENT, IDENT_ASM_OP): Remove.

	* config/microblaze/microblaze-protos.h (microblaze_asm_output_ident):
	Add prototype.
	* config/microblaze/microblaze.c: Include cgraph.h for add_asm_node.
	(microblaze_asm_output_ident): Rewrite to work similar to
	default_asm_output_ident_directive for front-end .idents.
	* config/microblaze/microblaze.h (ASM_OUTPUT_IDENT): Remove.
	(TARGET_ASM_OUTPUT_IDENT): Define.

	* config/mips/mips.h (ASM_OUTPUT_IDENT): Remove.
	* config/mips/sde.h (IDENT_ASM_OP, ASM_OUTPUT_IDENT): Remove.

	* config/rx/rx.c: Include cgraph.h for add_asm_node.
	(rx_asm_output_ident): New function, similar to
	default_asm_output_ident_directive, but handle AS100 syntax also, so
	that #ident also works for rx in AS100 syntax.
	(TARGET_ASM_OUTPUT_IDENT): Define.
	* config/rx/rx.h (IDENT_ASM_OP): Remove.

	* Makefile.in: Fix dependencies for c-family/c-lex.o.

2012-06-19  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.md (FIST_ROUNDING): New int iterator.
	(rounding): Handle UNSPEC_FIST_{FLOOR,CEIL}.
	(ROUNDING): Ditto.
	(*fist<mode>2_<rounding>_1): Macroize insn from
	*fist<mode>2_{floor,ceil}_1 using FIST_ROUNDING int iterator.
	(fistdi2_<rounding>): Macroize insn from
	fistdi2_{floor,ceil} using FIST_ROUNDING int iterator.
	(fistdi2_<rounding>_with_temp and splitters): Macroize insn and
	corresponding splitters from fistdi2_{floor,ceil} and corresponding
	splitters using FIST_ROUNDING int iterator.
	(fist<mode>2_<rounding>): Macroize insn from
	fist<mode>2_{floor,ceil} using FIST_ROUNDING int iterator.
	(fist<mode>2_<rounding>_with_temp and splitters): Macroize insn and
	corresponding splitters from fist<mode>2_{floor,ceil} and corresponding
	splitters using FIST_ROUNDING int iterator.
	(l<rounding>xf<mode>2): Macroize expander from l{floor,ceil}xf<mode>2
	using FIST_ROUNDING int iterator.

2012-06-19  Richard Henderson  <rth@redhat.com>

	* config/i386/i386-protos.h (ix86_expand_sse2_mulv4si3): Declare.
	* config/i386/i386.c (ix86_expand_sse2_mulv4si3): New.
	* config/i386/predicates.md (nonimmediate_or_const_vector_operand): New.
	* config/i386/sse.md (sse2_mulv4si3): Delete.
	(mul<VI4_AVX2>3): Use ix86_expand_sse2_mulv4si3 and
	nonimmediate_or_const_vector_operand.

2012-06-19  Richard Henderson  <rth@redhat.com>

	* expmed.c (struct init_expmed_rtl): Split ...
	(init_expmed_one_mode): ... out of ...
	(init_expmed): ... here.  Initialize integer vector modes also.
	(synth_mult): Handle integer vector modes.
	(choose_mult_variant): Likewise.
	(expand_mult_const): Likewise.
	(expand_mult): Likewise.
	* machmode.h (GET_MODE_UNIT_BITSIZE): New.

2012-06-19  Richard Henderson  <rth@redhat.com>

	* config/i386/i386.c (ix86_rtx_costs): Handle CONST_VECTOR, and
	integral vector modes.

2012-06-19  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.md (FRNDINT_ROUNDING): New int iterator.
	(rounding): New int attribute.
	(ROUNDING): Ditto.
	(frndintxf2_<rounding>): Macroize insn from
	frndintxf2_{floor,ceil,trunc} using FRNDINT_ROUNDING int iterator.
	(frndintxf2_<rounding>_i387): Macroize insn from
	frndintxf2_{floor,ceil,trunc}_i387 using FRNDINT_ROUNDING int iterator.

2012-06-19  Richard Guenther  <rguenther@suse.de>

	* tree-vrp.c (union_ranges): New function.
	(vrp_meet_1): Use union_ranges.
	(vrp_meet): Dump what we union and call vrp_meet_1.

2012-06-19  Richard Earnshaw  <rearnsha@arm.com>

	* arm.md (enum unspec): Delete UNSPEC_SIN and UNSPEC_COS.
	(attr type): Remove fmul, ffmul, farith, ffarith, float_em
	f_fpa_load, f_fpa_store, f_mem_r, r_mem_f.
	(attr write_conflict, attr core_cycles): Update.
	* arm-generic.md (r_mem_f_wbuf): Delete reservation.

2012-06-19  Richard Guenther  <rguenther@suse.de>

	* tree-vrp.c (intersect_ranges): Handle more cases.
	(vrp_intersect_ranges): Dump what we intersect and call ...
	(vrp_intersect_ranges_1): ... this.

2012-06-19  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/53708
	* tree-vect-data-refs.c (vect_can_force_dr_alignment_p): Preserve
	user-supplied alignment and alignment of decls with the used
	attribute.

2012-06-18  Lawrence Crowl  <crowl@google.com>

	* timevar.def (TV_PHASE_GENERATE): Rename to TV_PHASE_LATE_ASM.
	(TV_PHASE_CGRAPH): Rename to TV_PHASE_OPT_GEN.
	(TV_PHASE_STREAM_IN): New.
	(TV_PHASE_STREAM_OUT): New.
	* timevar.c (validate_phases): New.
	(timevar_print): Call validate_phases.
	* c-decl.c (c_write_global_declarations): Rename use of TV_PHASE_CGRAPH
	to TV_PHASE_OPT_GEN.
	* langhooks.c (write_global_declarations): Rename use of
	TV_PHASE_CGRAPH to TV_PHASE_OPT_GEN.  Use TV_PHASE_DBGINFO instead of
	TV_PHASE_CHECK_DBGINFO.
	* toplev.c (compile_file): Rename use of TV_PHASE_GENERATE to
	TV_PHASE_LATE_ASM.  Move start of TV_PHASE_LATE_ASM to after call to
	lang_hooks.decls.final_write_globals.

2012-06-18  David Edelshn  <dje.gcc@gmail.com>

	* config/rs6000/aix52.h (TARGET_EXTRA_BUILTINS): Define as 0.

2012-06-18  Uros Bizjak  <ubizjak@gmail.com>

	PR target/53712
	* config/i386/sse.md (*sse4_2_pcmpestr_unaligned): New.
	(*sse4_2_pcmpistr_unaligned): New.

2012-06-18  Ian Bolton  <ian.bolton@arm.com>
	    Sameera Deshpande  <sameera.deshpande@arm.com>
	    Greta Yorsh  <greta.yorsh@arm.com>

	* config/arm/arm-protos.h (arm_output_epilogue): Remove.
	* config/arm/arm.c (print_multi_reg): Remove.
	(vfp_output_fldmd): Likewise.
	(arm_output_epilogue): Likewise.
	* config/arm/arm.md (epilogue_insns): Update condition and code.

2012-06-18  Ian Bolton  <ian.bolton@arm.com>
	    Sameera Deshpande  <sameera.deshpande@arm.com>
	    Greta Yorsh  <greta.yorsh@arm.com>

	* config/arm/arm-protos.h (thumb2_expand_return): New declaration.
	* config/arm/arm.c (thumb2_expand_return): New function.
	* config/arm/arm.md (return): Update condition and code.

2012-06-18  Ian Bolton  <ian.bolton@arm.com>
	    Sameera Deshpande  <sameera.deshpande@arm.com>
	    Greta Yorsh  <greta.yorsh@arm.com>

	* config/arm/arm-protos.h (output_return_instruction): New parameter
	and int to bool change of parameter types.
	* config/arm/arm.c (output_return_instruction): Likewise.
	* config/arm/arm.md (arm_simple_return): New pattern.
	(arm_return, cond_return, cond_return_inverted): Add new arguments.
	* config/arm/thumb2.md (thumb2_return): Update condition and code.

2012-06-18  Ian Bolton  <ian.bolton@arm.com>
	    Sameera Deshpande  <sameera.deshpande@arm.com>
	    Greta Yorsh  <greta.yorsh@arm.com>

	* config/arm/arm-protos.h (arm_expand_epilogue): New declaration.
	* config/arm/arm.c (arm_expand_epilogue): New function.
	* config/arm/arm.md (epilogue): Update condition and code.
	(sibcall_epilogue): Likewise.

2012-06-18  Ian Bolton  <ian.bolton@arm.com>
	    Sameera Deshpande  <sameera.deshpande@arm.com>
	    Greta Yorsh  <greta.yorsh@arm.com>

	* config/arm/arm.c (arm_expand_epilogue_apcs_frame): New function.
	* config/arm/arm.md (arm_addsi3) Add an alternative.

2012-06-18  Ian Bolton  <ian.bolton@arm.com>
	    Sameera Deshpande  <sameera.deshpande@arm.com>
	    Greta Yorsh  <greta.yorsh@arm.com>

	* config/arm/arm.md (vfp_pop_multiple_with_writeback) New define_insn.
	* config/arm/predicates.md (pop_multiple_fp) New special predicate.
	* config/arm/arm.c (arm_emit_vfp_multi_reg_pop): New function.

2012-06-18  Ian Bolton  <ian.bolton@arm.com>
	    Sameera Deshpande  <sameera.deshpande@arm.com>
	    Greta Yorsh  <greta.yorsh@arm.com>

	* config/arm/arm.md (load_multiple_with_writeback) New define_insn.
	(load_multiple, pop_multiple_with_writeback_and_return) Likewise.
	(pop_multiple_with_return, ldr_with_return) Likewise.
	* config/arm/predicates.md (pop_multiple_return) New special predicate.
	* config/arm/arm-protos.h (arm_output_multireg_pop) New declaration.
	* config/arm/arm.c (arm_output_multireg_pop) New function.
	(arm_emit_multi_reg_pop): New function.

2012-06-18  Greta Yorsh  <Greta.Yorsh@arm.com>

	* config/arm/arm.c (ldm_stm_operation_p): Require SP
	as base register for loads if SP is in the register list.

2012-06-18  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/53693
	* tree-vect-patterns.c (vect_operation_fits_smaller_type):
	Reject operands with more than one use.

2012-06-18  Bill Schmidt  <wschmidt@linux.ibm.com>

	PR tree-optimization/53703
	* tree-ssa-phiopt.c (hoist_adjacent_loads): Skip virtual phis;
	correctly set bb_for_def[12].

2012-06-18  Steven Bosscher  <steven@gcc.gnu.org>

	* config/vax/vax.h (VMS_TARGET): Remove.

2012-06-18  Richard Guenther  <rguenther@suse.de>

	* tree-vrp.c (extract_range_from_assert): Split out range
	intersecting code.
	(intersect_ranges): New function.
	(vrp_intersect_ranges): Likewise.

2012-06-18  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>

	* config/s390/s390.c (s390_gimplify_va_arg): Revert change from
	r187965.

2012-06-18  Tejas Belagod  <tejas.belagod@arm.com>

	* doc/md.texi: Document int iterators.
	* read-rtl.c (ints): New iterator group.
	(find_int): Int iterator group callback.
	(apply_int_iterator): Likewise.
	(apply_iterators): Traverse int iterator table and add all the used
	iterators to list.
	(initialize_iterators): Initialize data structures and callbacks for
	int iterators.
	(read_rtx): Parse and read mappings for int iterators.
	(read_rtx_code): Record int iterator usage.

2012-06-18  Richard Sandiford  <rdsandiford@googlemail.com>

	PR middle-end/53698
	* expr.c (expand_expr_addr_expr_1): Convert to tmode before
	performing an addition.

2012-06-17  Steven Bosscher  <steven@gcc.gnu.org>

	* output.h (split_double): Move prototype to rtl.h.
	(constructor_static_from_elts_p): Move prototype to tree.c.
	* rtl.h (split_double): Moved here from output.h.
	* tree.h (constructor_static_from_elts_p): Moved here from output.h.
	* final.c (split_double): Move from here ...
	* rtlanal.c (split_double): ... to here.
	* expr.c: Do not include output.h.

2012-06-17  Steven Bosscher  <steven@gcc.gnu.org>

	* cfglayout.h: Remove.
	* cfglayout.c: Remove.
	* function.h (struct function): Remove x_last_location field.
	* function.c: Do not include cfglayout.h.
	(expand_function_start): Do not call no-op force_next_line_note.
	(expand_function_end): Likewise.
	* cfgrtl.c: Do not include cfglayout.h.  Include gt-cfgrtl.h.
	(unlink_insn_chain): Moved here from cfglayout.c.
	(skip_insns_after_block, label_for_bb, record_effective_endpoints,
	into_cfg_layout_mode, outof_cfg_layout_mode,
	pass_into_cfg_layout_mode, pass_outof_cfg_layout_mode,
	relink_block_chain, fixup_reorder_chain, verify_insn_chain,
	fixup_fallthru_exit_predecessor, force_one_exit_fallthru,
	cfg_layout_can_duplicate_bb_p, duplicate_insn_chain,
	cfg_layout_duplicate_bb, cfg_layout_initialize, break_superblocks,
	cfg_layout_finalize): Likewise.
	(rtl_can_remove_branch_p): Likewise.
	* rtl.h (insn_scope): Move prototype from cfglayout.h here.
	(duplicate_insn_chain): Likewise.
	(force_next_line_note): Remove prototype.
	* emit-rtl.c: Do not include tree-flow.h, egad.  Include vecprim.h.
	(last_location): Remove #define to emit.x_last_location.
	(force_next_line_note): Remove no-op function.
	(init_emit): Don't set x_last_location.
	(block_locators_locs, block_locators_blocks, locations_locators_locs,
	locations_locators_vals, prologue_locator, epilogue_locator,
	curr_location, last_location, curr_block, last_block, curr_rtl_loc):
	Move POD to here from cfglayout.c.
	(insn_locators_alloc, insn_locators_finalize, insn_locators_free,
	set_curr_insn_source_location, get_curr_insn_source_location,
	set_curr_insn_block, get_curr_insn_block, curr_insn_locator,
	locator_scope, insn_scope, locator_location, locator_line, insn_line,
	locator_file, insn_file, locator_eq): Move to here from cfglayout.c.
	* cfghooks.h: Remove double-include protection.
	(can_copy_bbs_p, copy_bbs): Move prototypes from cfglayout.h to here.
	* cfghooks.c (can_copy_bbs_p, copy_bbs): Move to here from cfglayout.c.
	* final.c: Do not include cfglayout.h.
	(choose_inner_scope, change_scope): Move to here from cfglayout.c.
	(reemit_insn_block_notes): Likewise.  Make static.
	* tree-flow.h (tree_could_trap_p, operation_could_trap_helper_p,
	operation_could_trap_p, tree_could_throw_p): Move from here...
	* tree.h: ... to here.
	* gengtype.c (open_base_files): Remove cfglayout.h from the list.
	* profile.c: Do not include cfghooks.h.
	* cfgloopmanip.c: Do not include cfglayout.h and cfghooks.h.
	* modulo-sched.c: Likewise.
	* loop-unswitch.c: Do not include cfglayout.h.
	* sched-ebb.c: Likewise.
	* tracer.c: Likewise.
	* ddg.c: Likewise.
	* tree-vect-loop-manip.c: Likewise.
	* loop-init.c: Likewise.
	* dwarf2out.c: Likewise.
	* hw-doloop.c: Likewise.
	* loop-unroll.c: Likewise.
	* cfgcleanup.c: Likewise.
	* bb-reorder.c: Likewise.
	* sched-rgn.c: Likewise.
	* tree-cfg.c: Likewise.
	* config/alpha/alpha.c: Likewise.
	* config/spu/spu.c: Likewise.
	* config/sparc/sparc.c: Likewise.
	* config/sh/sh.c: Likewise.
	* config/c6x/c6x.c: Likewise.
	* config/ia64/ia64.c: Likewise.
	* config/rs6000/rs6000.c: Likewise.
	* config/score/score.c: Likewise.
	* config/mips/mips.c: Likewise.
	* config/bfin/bfin.c: Likewise.
	* Makefile.in (CFGAYOUT_H): Remove, and fixup users.
	* config/rs6000/t-rs6000 (rs6000.o): Do not depend on cfglayout.h.
	* config/spu/t-spu-elf (spu.o: $): Likewise.
	* config/sparc/t-sparc (sparc.o): Do not depend on CFGLAYOUT_H.

2012-06-17  Steven Bosscher  <steven@gcc.gnu.org>

	* cfgloop.h: Do not include rtl.h.
	(enum iv_extend_code): New.
	(struct rtx_iv): Use iv_extend_code instead of rtx_code.
	* Makefile.in (CFGLOOP_H): Do not depend on RTL_H.
	* loop-iv.c (iv_extend_to_rtx_code): New function to translate
	an IV_EXTEND_CODE to an RTX_CODE.
	(dump_iv_info): Update for rtx_iv field type change.
	(iv_constant): Likewise.
	(iv_subreg): Likewise.
	(iv_extend): Likewise.
	(iv_neg): Likewise.
	(iv_add): Likewise.
	(iv_mult): Likewise.
	(iv_shift): Likewise.
	(get_biv_step_1): Likewise.
	(get_biv_step): Likewise.
	(iv_analyze_biv): Likewise.
	(get_iv_value): Likewise.
	(shorten_into_mode): Likewise.
	(canonicalize_iv_subregs): Likewise.
	* sese.c (sese_build_liveouts): Use MAY_HAVE_DEBUG_STMTS instead
	of MAY_HAVE_DEBUG_INSNS.
	* tree-ssa-loop-ivopts.c: Include recog.h after expr.h.
	* tree-ssa-loop-prefetch.c: Likewise.

2012-06-17  Steven Bosscher  <steven@gcc.gnu.org>

	* expmed.c (ceil_log2): Move from here...
	* hwint.c: ... to here for older GCCs...
	* hwint.h: ... and here for newer GCCs.
	* rtl.h (ceil_log2): Remove prototype.

	* tree-phinodes.c: Do not include rtl.h.
	* Makefile.in (tree-phinodes.o): Do not depend on RTL_H.

2012-06-17  Steven Bosscher  <steven@gcc.gnu.org>

	* config/cris/cris.h (TARGET_ELF): Remove.
	(FORCE_EH_FRAME_INFO_IN_DATA_SECTION): Remove.
	(CRIS_ASM_OUTPUT_ALIGNED_DECL_COMMON): Simpify using TARGET_ELF==1.
	(LOCAL_LABEL_PREFIX): Likewise.
	* config/cris/cris.c (cris_target_asm_named_section): Remove.
	(cris_option_override): Simpify using TARGET_ELF==1.
	(cris_file_start): Likewise.
	* config/cris/cris-protos.h (cris_target_asm_named_section): Remove.

2012-06-17  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/sse.md (vcvtph2ps): Fix vec_select selector.

2012-06-16  Eric Botcazou  <ebotcazou@adacore.com>

	PR middle-end/53590
	* tree-inline.c (initialize_cfun): Copy can_delete_dead_exceptions.

2012-06-15  Easwaran Raman  <eraman@google.com>

	* passes.c (init_optimization_passes): Remove pass_call_cdce
	from its current position and insert after pass_dce.

2012-06-15  Walter Lee  <walt@tilera.com>

	* config/tilegx/sync.md (atomic_fetch_<fetchop_name><mode>): Fix typo.

2012-06-15  Richard Earnshaw  <rearnsha@arm.com>

	* arm.c (note_invalid_constants): Don't return a result.
	(arm_memory_load_p): Delete function.
	(arm_const_double_rtx): Delete iterator variable i;
	(fp_immediate_constant): Likewise.
	(fp_const_from_val): Likewise.

	* arm.c (arm_init_iwmmxt_builtins): Delete void_ftype_void.

2012-06-15  Marc Glisse  <marc.glisse@inria.fr>

	PR c++/51033
	* c-typeck.c (c_build_vec_perm_expr): Move to c-family/c-common.c.
	* c-tree.h (c_build_vec_perm_expr): Move to c-family/c-common.h.

2012-06-15  Georg-Johann Lay  <avr@gjlay.de>

	* config/avr/avr.c (avr_default_expand_builtin): New function.
	(avr_expand_builtin): Use it.
	(avr_expand_unop_builtin): Remove.
	(avr_expand_binop_builtin): Remove.
	(avr_expand_triop_builtin): Remove.

2012-06-15  Michael Matz  <matz@suse.de>

	PR middle-end/38474
	* cfgexpand.c (add_alias_set_conflicts): Remove.
	(expand_used_vars): Don't call it.
	(aggregate_contains_union_type): Remove.
	* function.c (n_temp_slots_in_use): New static data.
	(make_slot_available, assign_stack_temp_for_type): Update it.
	(init_temp_slots): Zero it.
	(remove_unused_temp_slot_addresses): Use it for quicker removal.
	(remove_unused_temp_slot_addresses_1): Use htab_clear_slot.

2012-06-15  Michael Matz  <matz@suse.de>

	* gimplify.c (gimplify_compound_literal_expr): Take gimple_test_f
	argument, don't emit assign statement if value is directly usable.
	(gimplify_expr): Adjust.

2012-06-15  Michael Matz  <matz@suse.de>

	* gimplify.c (gimplify_modify_expr): Fold generated statements.
	* gimple-fold.c (can_refer_decl_in_current_unit_p): Check flag_ltrans.

2012-06-15  Richard Guenther  <rguenther@suse.de>

	* tree-vrp.c (set_and_canonicalize_value_range): Use canonical
	predicates to set VR_UNDEFINED and VR_VARYING.  Drop a case
	we assert for in set_value_range to VR_VARYING.

2012-06-15  Richard Earnshaw  <rearnsha@arm.com>

	* arm.md (addsf3, adddf3): Use s_register_operand.
	(subsf3, subdf3): Likewise.
	(mulsf3, muldf3): Likewise.
	(difsf3, divdf3): Likewise.
	(movsfcc, movdfcc): Likewise.
	* predicates.md (f_register_operand): Delete.
	(arm_float_rhs_operand): Delete.
	(arm_float_add_operand): Delete.
	(arm_float_compare_operand): Use s_register_operand when
	there's no VFP.
	(cirrus_register_operand): Delete.
	(cirrus_fp_register): Delete.
	(cirrus_shift_const): Delete.
	(cmpdi_operand): Remove Maverick support.
	* constraints.md (f, v, H): Delete constraints.
	(G): Update documentation.
	* arm.c (fp_consts_inited): Convert to bool.
	(strings_fp): Delete.
	(values_fp): Delete.
	(value_fp0): New variable.
	(init_fp_table): Simplify logic.
	(arm_const_double_rtx): Likewise.
	(fp_immediate_constant): Likewise.
	(fp_const_from_val): Likewise.
	(neg_const_double_rtx_ok_for_fpa): Delete.
	* doc/md.texi (ARM constraints): Update documentation.

2012-06-15  Ulrich Weigand  <ulrich.weigand@linaro.org>

	PR tree-optimization/53636
	* tree-vect-data-refs.c (vect_compute_data_ref_alignment): Verify
	stride when doing basic-block vectorization.

2012-06-15  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>

	* tree-vect-generic.c (lower_vec_perm): Propagate vector constants
	into VEC_PERM_EXPR.

2012-06-15  Jakub Jelinek  <jakub@redhat.com>

	* tree-vect-patterns.c (vect_pattern_recog): Don't unnecessarily
	allocate and free bbs array for the SLP case.

	PR tree-optimization/51581
	* expr.h (choose_multiplier): New prototype.
	* expmed.c (choose_multiplier): No longer static.
	Change multiplier_ptr from rtx * to UHWI *.
	(expand_divmod): Adjust callers.
	* tree-vect-patterns.c (vect_recog_sdivmod_pow2_pattern): Renamed to...
	(vect_recog_divmod_pattern): ... this.  Pass bb_vinfo as last
	argument to new_stmt_vec_info.  Attempt to optimize also divisions
	by non-pow2 constants if integer vector division isn't supported.
	* tree-vect-stmts.c (vect_analyze_stmt): If node != NULL,
	don't look at pattern stmts and sequences.

2012-06-15  Eric Botcazou  <ebotcazou@adacore.com>

	PR middle-end/53590
	* common.opt (-fdelete-dead-exceptions): New switch.
	* doc/invoke.texi (Code Gen Options): Document it.
	* cse.c (count_reg_usage) <CALL_INSN>: Use !insn_nothrow_p in lieu of
	insn_could_throw_p predicate.  Do not skip an insn that could throw
	if dead exceptions can be deleted.
	(insn_live_p): Likewise, do not return true in that case.
	* dce.c (can_alter_cfg): New flag.
	(deletable_insn_p): Do not return false for an insn that can throw if
	the CFG can be altered and dead exceptions can be deleted.
	(init_dce): Set can_alter_cfg to false for fast DCE, true otherwise.
	* dse.c (scan_insn): Use !insn_nothrow_p in lieu of insn_could_throw_
	predicate. Do not preserve an insn that could throw if dead exceptions
	can be deleted.
	* function.h (struct function): Add can_delete_dead_exceptions flag.
	* function.c (allocate_struct_function): Set it.
	* lto-streamer-in.c (input_struct_function_base): Stream it.
	* lto-streamer-out.c (input_struct_function_base): Likewise.
	* tree-ssa-dce.c (mark_stmt_if_obviously_necessary): Do not mark a
	statement that could throw as necessary if dead exceptions can be
	deleted.

2012-06-14  Maxim Kuvyrkov  <maxim@codesourcery.com>

	* config/tilegx/sync.md (atomic_fetch_sub<mode>): Fix typo.

2012-06-14  Oleg Endo  <olegendo@gcc.gnu.org>

	PR target/53568
	* config/sh/sh.md: Add peephole for swapbsi2.
	(*swapbisi2_and_shl8, *swapbhisi2): New insns and splits.

2012-06-14  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.md (*zero_extendsidi2): Remove x,x alternative.
	(*zero_extendsidi2_rex64): Ditto.  Remove isa attribute.

2012-06-14  Jakub Jelinek  <jakub@redhat.com>

	PR target/53639
	* config/i386/i386.md (*anddi_1 into *andsi_1_zext splitter): New.

2012-06-14  Richard Earnshaw  <rearnsha@arm.com>

	* arm.c (arm_cirrus_insn_p): Delete.
	(cirrus_reorg): Delete.
	(arm_reorg): Don't call cirrus_reorg.
	(arm_final_prescan_insn_p): Don't check for cirrus insns.
	* arm.md (define_attr "type"): Remove mav_farith and mav_dmult.
	(adddi3, subdi3): Remove Maverick support.
	(arm_adddi3): Likewise.
	(adddi_sesidi_di, adddi_zesidi_di): Likewise.
	(addsf3, adddf3): Likewise.
	(subsf3, subdf3): Likewise.
	(mulsf3, muldf3): Likewise.
	(ashldi3, ashrdi3, lshrdi3): Likewise.
	(floatsisf2, floatsidf2): Likewise.
	(fix_truncsfsi2, fix_truncdfsi2): Likewise.
	(arm_movdi, thumb1_movdi_insn): Likewise.
	(arm_cmpdi_insn): Likewise.
	(cirrus_cmpsf, cirrus_cmpdf, cirrus_cmpdi): Likewise.
	(cirrus.md): Don't include.
	* cirrus.md: Delete file.
	* t-arm (MD_INCLUDES): Remove cirrus.md.

2012-06-14  Eric Botcazou  <ebotcazou@adacore.com>

	* dwarf2out.c (function_possibly_abstracted_p): New static function.
	(gen_subprogram_die): Use it function_possibly_abstracted_p in lieu of
	cgraph_function_possibly_inlined_p.
	(gen_inlined_subroutine_die): Return if the origin is to be ignored.
	(process_scope_var): Do not emit concrete instances of abstracted
	nested functions from here.
	(gen_decl_die): Emit the abstract instance if the function is possibly
	abstracted and not only possibly inlined.
	(dwarf2out_finish): Find the first non-abstract parent instance and
	attach concrete instances on the limbo list to it.

2012-06-14  Richard Earnshaw  <rearnsha@arm.com>

	* arm.md (divsf3, divdf3): Remove FPA support.
	(negsf2, negdf2): Likewise.
	(sqrtsf2, sqrtdf2): Likewise.
	(movdfcc): Likewise.
	(modsf3, moddf3, movxf): Delete.
	(push_fp_multi): Delete.
	(fpa.md): Don't include it.
	* fpa.md: Delete file.
	* t-arm (MD_INCLUDES): Remove fpa.md.

2012-06-14  Bill Schmidt  <wschmidt@linux.ibm.com>

	* tree-vectorizer.h (vect_get_stmt_cost): Move from tree-vect-stmts.c.
	(cost_for_stmt): Remove decl.
	(vect_get_single_scalar_iteration_cost): Correct typo in name.
	* tree-vect-loop.c (vect_get_cost): Remove.
	(vect_get_single_scalar_iteration_cost): Correct typo in name; use
	vect_get_stmt_cost rather than vect_get_cost.
	(vect_get_known_peeling_cost): Use vect_get_stmt_cost rather than
	vect_get_cost.
	(vect_estimate_min_profitable_iters): Correct typo in call to
	vect_get_single_scalar_iteration_cost; use vect_get_stmt_cost rather
	than vect_get_cost.
	(vect_model_reduction_cost): Use vect_get_stmt_cost rather than
	vect_get_cost.
	(vect_model_induction_cost): Likewise.
	* tree-vect-data-refs.c (vect_peeling_hash_get_lowest_cost): Correct
	typo in call to vect_get_single_scalar_iteration_cost.
	* tree-vect-stmts.c (vect_get_stmt_cost): Move to tree-vectorizer.h.
	(cost_for_stmt): Remove unnecessary function.
	* Makefile.in (TREE_VECTORIZER_H): Update dependencies.

2012-06-14  Richard Earnshaw  <rearnsha@arm.com>

	* arm.opt (mfp=2, mfp=3, mfpe, mfpe=2, mfpe=3): Delete options.
	* arm-fpus.def (fpa, fpe2, fpe3, maverick): Delete FPU types.
	* arm-tables.opt: Regenerated.
	* doc/invoke.texi: Remove references to deleted options.

2012-06-14  Sandeep Kumar Singh  <Sandeep.Singh2@kpitcummins.com>

	* config/h8300/genmova.sh: Modified to add offset bits of
	mova/Sz assembly instruction for memory access.
	* config/h8300/h8300.c: Likewise.
	* config/h8300/mova.md: Likewise.

2012-06-12  Christian Bruel  <christian.bruel@st.com>

	PR target/53621
	* config/sh/sh.c (sh_option_override): Don't force
	 flag_omit_frame_pointer and maccumulate_outgoing_args.
	* config/sh/sh.opt (maccumulate-outgoing-args): Init as Var.

2012-06-14  Richard Guenther  <rguenther@suse.de>

	* tree-vrp.c (VR_INITIALIZER): New define.
	(ranges_from_anti_range): New function.
	(extract_range_from_binary_expr_1): Decompose operations on
	VR_ANTI_RANGEs to operations on VR_RANGE.
	(extract_range_from_unary_expr_1): Likewise.
	(extract_range_from_binary_expr_1, extract_range_from_binary_expr,
	extract_range_from_unary_expr_1, extract_range_from_unary_expr,
	extract_range_from_cond_expr, adjust_range_with_scev,
	vrp_visit_assignment_or_call, vrp_visit_phi_node,
	simplify_bit_ops_using_ranges): Use VR_INITIALIZER.

2012-06-13  Richard Henderson  <rth@redhat.com>

	* hwint.h (HOST_WIDEST_INT_C): New.
	(HOST_WIDE_INT_C): New.
	(HOST_WIDE_INT_1): Use it.
	* config/alpha/alpha.c (alpha_trampoline_init): Use it.

2012-06-13  Alexandre Oliva  <aoliva@redhat.com>

	PR debug/49888
	* var-tracking.c: Include alias.h.
	(overlapping_mems): New struct.
	(drop_overlapping_mem_locs): New.
	(clobber_overlapping_mems): New.
	(var_mem_delete_and_set, var_mem_delete): Call it.
	(val_bind): Likewise, but only if modified.
	(compute_bb_dataflow, emit_notes_in_bb): Call it on MEMs.
	* Makefile.in (var-tracking.o): Depend in $(ALIAS_H).

2012-06-13  Alexandre Oliva  <aoliva@redhat.com>

	PR debug/47624
	* var-tracking.c (loc_exp_dep_pool): New.
	(vt_emit_notes): Create and release the pool.
	(compute_bb_dataflow): Use value-based locations in MO_VAL_SET.
	(emit_notes_in_bb): Likewise.
	(loc_exp_dep_insert): Deal with NOT_ONEPART vars.
	(notify_dependents_of_changed_value): Likewise.
	(notify_dependents_of_resolved_value): Check that NOT_ONEPART
	variables don't have a VAR_LOC_DEP_LST.
	(emit_note_insn_var_location): Expand NOT_ONEPART locs that are
	VALUEs or MEMs of VALUEs.

2012-06-13  Alexandre Oliva  <aoliva@redhat.com>

	PR debug/52983
	PR debug/48866
	* dce.c (word_dce_process_block): Insert debug temps only if the
	insn is not marked.
	(dce_process_block): Likewise, and if debug.used is not empty,
	and only after iterating over all DEFs that might mark the insn.

2012-06-13  Alexandre Oliva  <aoliva@redhat.com>

	* common.opt (ftree-coalesce-inlined-vars): New.
	(ftree-coalesce-vars): New.
	* doc/invoke.texi: Document them.
	* tree-ssa-copyrename.c (copy_rename_partition_coalesce):
	Implement them.

2012-06-13  Richard Sandiford  <rdsandiford@googlemail.com>

	* read-rtl.c (mapping): Remove index field.  Add current_value field.
	Define heap vectors.
	(iterator_group): Fix long line.  Remove num_builtins field and
	uses_iterator fields.  Make apply_iterator take a void * parameter.
	(iterator_use, atttribute_use): New structures.
	(iterator_traverse_data, BELLWETHER_CODE, bellwether_codes): Delete.
	(current_iterators, iterator_uses, attribute_uses): New variables.
	(uses_mode_iterator_p, uses_code_iterator_p): Delete.
	(apply_mode_iterator, apply_code_iterator): Take a void * parameter.
	(map_attr_string, apply_iterator_to_string): Remove iterator
	and value parameters.  Look through all current iterator values
	for a matching attribute.
	(mode_attr_index, apply_mode_maps): Delete.
	(apply_iterator_to_rtx): Replace with...
	(copy_rtx_for_iterators): ...this new function.
	(uses_iterator_p, apply_iterator_traverse): Delete.
	(apply_attribute_uses, add_current_iterators, apply_iterators): New
	functions.
	(add_mapping): Remove index field.  Set current_value field.
	(initialize_iterators): Don't set num_builtins and uses_iterator_p
	fields.
	(find_iterator): Delete.
	(record_iterator_use, record_attribute_use): New functions.
	(record_potential_iterator_use): New function.
	(check_code_iterator): Remove handling of bellwether codes.
	(read_rtx): Remove mode maps.  Truncate iterator and attribute uses.
	(read_rtx_code, read_nested_rtx, read_rtx_variadic): Remove mode_maps
	parameter.  Use the first code iterator value instead of the
	bellwether_codes array.  Use record_potential_iterator_use for modes.

2012-06-13  Oleg Endo  <olegendo@gcc.gnu.org>

	PR target/53568
	* config/sh/sh.md (bswapsi2): New expander.
	(swapbsi2): New insn.

2012-06-13  H.J. Lu  <hongjiu.lu@intel.com>

	PR target/53647
	* config/i386/i386.c (ix86_tune_cost): New variable.
	(ix86_option_override_internal): Set ix86_tune_cost.  Use
	ix86_tune_cost for simultaneous_prefetches, prefetch_block,
	l1_cache_size and l2_cache_size.

2012-06-13  Richard Guenther  <rguenther@suse.de>

	* tree-vrp.c (vrp_meet): Properly meet equivalent ranges.
	Handle meeting two VR_RANGE to an VR_ANTI_RANGE.  Implement
	all possible meetings of VR_RANGE with VR_ANTI_RANGE and
	VR_ANTI_RANGE with VR_ANTI_RANGE.

2012-06-13  Richard Earnshaw  <rearnsha@arm.com>

	* config.gcc (unsupported): Move obsoleted FPA-based configurations
	here from ...
	(obsolete): ... here.
	(arm*-*-freebsd*): Remove.
	(arm*-*-linux*): Only accept EABI variants.  Simplify logic.
	(arm*-*-uclinux*): Likewise.
	(arm*-*-ecos-elf): Remove.
	(arm*-*-rtems*): Remove.
	(arm*-*-elf): Remove.
	(arm*-wince-pe*): Remove.
	(arm, --with-fpu): Remove support for fpa and Maverick variants.
	* arm/ecos-elf.h: Delete.
	* arm/t-strongarm-elf: Delete.
	* arm/rtems-elf.h: Delete.
	* arm/wince-pe.h: Delete.
	* arm/pe.c: Delete.
	* arm/pe.h: Delete.
	* arm/t-wince-pe: Delete.

2012-06-13  Bill Schmidt  <wschmidt@linux.ibm.com>

	PR tree-optimization/53647
	* tree-ssa-phiopt.c (gate_hoist_loads): Skip transformation for
	targets with no defined cache line size.

2012-06-13  Bill Schmidt  <wschmidt@linux.ibm.com>

	* targhooks.c (default_builtin_vectorized_conversion): Handle
	vec_construct, using vectype to base cost on subparts.
	* target.h (enum vect_cost_for_stmt): Add vec_construct.
	* tree-vect-stmts.c (vect_model_load_cost): Use vec_construct
	instead of scalar_to-vec.
	* config/spu/spu.c (spu_builtin_vectorization_cost): Handle
	vec_construct in same way as default for now.
	* config/i386/i386.c (ix86_builtin_vectorization_cost): Likewise.
	* config/rs6000/rs6000.c (rs6000_builtin_vectorization_cost):
	Handle vec_construct, including special case for 32-bit loads.

2012-06-13  Xinyu Qi <xyqi@marvell.com>

	* config/arm/arm.c (FL_IWMMXT2): New define.
	(arm_arch_iwmmxt2): New variable.
	(arm_option_override): Enable use of iWMMXt with VFP.
	Disable use of iWMMXt with NEON. Disable use of iWMMXt under
	Thumb mode. Set arm_arch_iwmmxt2.
	(arm_expand_binop_builtin): Accept VOIDmode op.
	(enum arm_builtins): Revise built-in fcode.
	(IWMMXT2_BUILTIN): New define.
	(IWMMXT2_BUILTIN2): Likewise.
	(iwmmx2_mbuiltin): Likewise.
	(builtin_description bdesc_2arg): Revise built in declaration.
	(builtin_description bdesc_1arg): Likewise.
	(arm_init_iwmmxt_builtins): Revise built in initialization.
	(arm_expand_builtin): Revise built in expansion.
	(arm_output_iwmmxt_shift_immediate): New function.
	(arm_output_iwmmxt_tinsr): Likewise.
	* config/arm/arm-protos.h (arm_output_iwmmxt_shift_immediate): Declare.
	(arm_output_iwmmxt_tinsr): Likewise.
	* config/arm/iwmmxt.md (WCGR0, WCGR1, WCGR2, WCGR3): New constant.
	(iwmmxt_psadbw, iwmmxt_walign, iwmmxt_tmrc, iwmmxt_tmcr): Delete.
	(rorv4hi3, rorv2si3, rordi3): Likewise.
	(rorv4hi3_di, rorv2si3_di, rordi3_di): Likewise.
	(ashrv4hi3_di, ashrv2si3_di, ashrdi3_di): Likewise.
	(lshrv4hi3_di, lshrv2si3_di, lshrdi3_di): Likewise.
	(ashlv4hi3_di, ashlv2si3_di, ashldi3_di): Likewise.
	(iwmmxt_tbcstqi, iwmmxt_tbcsthi, iwmmxt_tbcstsi): Likewise
	(*iwmmxt_clrv8qi, *iwmmxt_clrv4hi, *iwmmxt_clrv2si): Likewise.
	(tbcstv8qi, tbcstv4hi, tbsctv2si): New pattern.
	(iwmmxt_clrv8qi, iwmmxt_clrv4hi, iwmmxt_clrv2si): Likewise.
	(*and<mode>3_iwmmxt, *ior<mode>3_iwmmxt, *xor<mode>3_iwmmxt): Likewise.
	(ror<mode>3, ror<mode>3_di): Likewise.
	(ashr<mode>3_di, lshr<mode>3_di, ashl<mode>3_di): Likewise.
	(ashli<mode>3_iwmmxt, iwmmxt_waligni, iwmmxt_walignr): Likewise.
	(iwmmxt_walignr0, iwmmxt_walignr1): Likewise.
	(iwmmxt_walignr2, iwmmxt_walignr3): Likewise.
	(iwmmxt_setwcgr0, iwmmxt_setwcgr1): Likewise.
	(iwmmxt_setwcgr2, iwmmxt_setwcgr3): Likewise.
	(iwmmxt_getwcgr0, iwmmxt_getwcgr1): Likewise.
	(iwmmxt_getwcgr2, iwmmxt_getwcgr3): Likewise.
	(All instruction patterns): Add wtype attribute.
	(*iwmmxt_arm_movdi, *iwmmxt_movsi_insn): iWMMXt coexist with vfp.
	(iwmmxt_uavgrndv8qi3, iwmmxt_uavgrndv4hi3): Revise the pattern.
	(iwmmxt_uavgv8qi3, iwmmxt_uavgv4hi3): Likewise.
	(ashr<mode>3_iwmmxt, ashl<mode>3_iwmmxt, lshr<mode>3_iwmmxt): Likewise.
	(iwmmxt_tinsrb, iwmmxt_tinsrh, iwmmxt_tinsrw):Likewise.
	(eqv8qi3, eqv4hi3, eqv2si3, gtuv8qi3): Likewise.
	(gtuv4hi3, gtuv2si3, gtv8qi3, gtv4hi3, gtv2si3): Likewise.
	(iwmmxt_wunpckihh, iwmmxt_wunpckihw, iwmmxt_wunpckilh): Likewise.
	(iwmmxt_wunpckilw, iwmmxt_wunpckehub, iwmmxt_wunpckehuh): Likewise.
	(iwmmxt_wunpckehuw, iwmmxt_wunpckehsb, iwmmxt_wunpckehsh): Likewise.
	(iwmmxt_wunpckehsw, iwmmxt_wunpckelub, iwmmxt_wunpckeluh): Likewise.
	(iwmmxt_wunpckeluw, iwmmxt_wunpckelsb, iwmmxt_wunpckelsh): Likewise.
	(iwmmxt_wunpckelsw, iwmmxt_wmadds, iwmmxt_wmaddu): Likewise.
	(iwmmxt_wsadb, iwmmxt_wsadh, iwmmxt_wsadbz, iwmmxt_wsadhz): Likewise.
	(iwmmxt2.md): Include.
	* config/arm/arm.h (TARGET_CPU_CPP_BUILTINS): Define __IWMMXT2__.
	(TARGET_IWMMXT2): New define.
	(TARGET_REALLY_IWMMXT2): Likewise.
	(arm_arch_iwmmxt2): Declare.
	* config/arm/mmintrin.h: Use __IWMMXT__ to enable iWMMXt intrinsics.
	Use __IWMMXT2__ to enable iWMMXt2 intrinsics.
	Use C name-mangling for intrinsics.
	(__v8qi): Redefine.
	(_mm_cvtsi32_si64, _mm_andnot_si64, _mm_sad_pu8): Revise.
	(_mm_sad_pu16, _mm_align_si64, _mm_setwcx, _mm_getwcx): Likewise.
	(_m_from_int): Likewise.
	(_mm_sada_pu8, _mm_sada_pu16): New intrinsic.
	(_mm_alignr0_si64, _mm_alignr1_si64, _mm_alignr2_si64): Likewise.
	(_mm_alignr3_si64, _mm_tandcb, _mm_tandch, _mm_tandcw): Likewise.
	(_mm_textrcb, _mm_textrch, _mm_textrcw, _mm_torcb): Likewise.
	(_mm_torch, _mm_torcw, _mm_tbcst_pi8, _mm_tbcst_pi16): Likewise.
	(_mm_tbcst_pi32): Likewise.
	(_mm_abs_pi8, _mm_abs_pi16, _mm_abs_pi32): New iWMMXt2 intrinsic.
	(_mm_addsubhx_pi16, _mm_absdiff_pu8, _mm_absdiff_pu16): Likewise.
	(_mm_absdiff_pu32, _mm_addc_pu16, _mm_addc_pu32): Likewise.
	(_mm_avg4_pu8, _mm_avg4r_pu8, _mm_maddx_pi16, _mm_maddx_pu16): Likewise.
	(_mm_msub_pi16, _mm_msub_pu16, _mm_mulhi_pi32): Likewise.
	(_mm_mulhi_pu32, _mm_mulhir_pi16, _mm_mulhir_pi32): Likewise.
	(_mm_mulhir_pu16, _mm_mulhir_pu32, _mm_mullo_pi32): Likewise.
	(_mm_qmulm_pi16, _mm_qmulm_pi32, _mm_qmulmr_pi16): Likewise.
	(_mm_qmulmr_pi32, _mm_subaddhx_pi16, _mm_addbhusl_pu8): Likewise.
	(_mm_addbhusm_pu8, _mm_qmiabb_pi32, _mm_qmiabbn_pi32): Likewise.
	(_mm_qmiabt_pi32, _mm_qmiabtn_pi32, _mm_qmiatb_pi32): Likewise.
	(_mm_qmiatbn_pi32, _mm_qmiatt_pi32, _mm_qmiattn_pi32): Likewise.
	(_mm_wmiabb_si64, _mm_wmiabbn_si64, _mm_wmiabt_si64): Likewise.
	(_mm_wmiabtn_si64, _mm_wmiatb_si64, _mm_wmiatbn_si64): Likewise.
	(_mm_wmiatt_si64, _mm_wmiattn_si64, _mm_wmiawbb_si64): Likewise.
	(_mm_wmiawbbn_si64, _mm_wmiawbt_si64, _mm_wmiawbtn_si64): Likewise.
	(_mm_wmiawtb_si64, _mm_wmiawtbn_si64, _mm_wmiawtt_si64): Likewise.
	(_mm_wmiawttn_si64, _mm_merge_si64): Likewise.
	(_mm_torvscb, _mm_torvsch, _mm_torvscw): Likewise.
	(_m_to_int): New define.
	* config/arm/arm-cores.def (iwmmxt2): Add FL_IWMMXT2.
	* config/arm/arm-arches.def (iwmmxt2): Likewise.
	* config/arm/t-arm (MD_INCLUDES): Add marvell-f-iwmmxt.md and
	iwmmxt2.md.
	* config/arm/arm.md (marvell-f-iwmmxt.md): Include.
	(arch): Add "iwmmxt2".
	(arch_enabled): Handle "iwmmxt2".
	(wtype): New attribute.
	(UNSPEC_WMADDS, UNSPEC_WMADDU): Delete.
	(UNSPEC_WALIGNI): New unspec.
	* config/arm/predicates.md (imm_or_reg_operand): New predicate.
	* config/arm/iterators.md (VMMX2): New mode_iterator.
	* config/arm/marvell-f-iwmmxt.md: New file.
	* config/arm/iwmmxt2.md: New file.

2012-06-12  Jakub Jelinek  <jakub@redhat.com>

	PR c/53532
	PR c/51034
	PR c/53196
	* c-decl.c (build_compound_literal): Call c_incomplete_type_error
	if type isn't complete.

2012-06-12  Uros Bizjak  <ubizjak@gmail.com>

	* config/ia64/sync.md (fetchop_name): Change ior attribute to "or".

2012-06-12  Richard Henderson  <rth@redhat.com>

	* config/rs6000/sync.md (atomic_load, atomic_store): Use INT1 mode
	iterator instead of INT.

2012-06-12  Bill Schmidt  <wschmidt@linux.ibm.com>

	* opts.c: Add -fhoist-adjacent-loads to -O2 and above.
	* tree-ssa-phiopt.c (tree_ssa_phiopt_worker): Add argument to forward
	declaration.
	(hoist_adjacent_loads, gate_hoist_loads): New forward declarations.
	(tree_ssa_phiopt): Call gate_hoist_loads.
	(tree_ssa_cs_elim): Add parm to tree_ssa_phiopt_worker call.
	(tree_ssa_phiopt_worker): Add do_hoist_loads to formal arg list; call
	hoist_adjacent_loads.
	(local_mem_dependence): New function.
	(hoist_adjacent_loads): Likewise.
	(gate_hoist_loads): Likewise.
	* common.opt (fhoist-adjacent-loads): New switch.
	* Makefile.in (tree-ssa-phiopt.o): Added dependencies.

2012-06-12  Michael Matz  <matz@suse.de>

	* alias.c (nonoverlapping_component_refs_p): Take two rtx arguments.
	(nonoverlapping_memrefs_p): Don't call it here ...
	(true_dependence_1): ... but here.

2012-06-12  Richard Guenther  <rguenther@suse.de>

	* emit-rtl.c (set_mem_attributes_minus_bitpos): Remove dead code.
	* alias.c (ao_ref_from_mem): MEM_EXPR is conservative, MEM_OFFSET
	and MEM_SIZE only refines it.  Reflect that and be less conservative
	if either of the latter is not known.

2012-06-12  Jakub Jelinek  <jakub@redhat.com>

	PR rtl-optimization/53589
	* cfgrtl.c (force_nonfallthru_and_redirect): Do asm_goto_edge
	discovery even when e->dest != target.  If any LABEL_REF points
	to e->dest label, redirect it to target's label.

2012-06-12  Chung-Lin Tang  <cltang@codesourcery.com>

	* config/sh/sh.c (output_stack_adjust): Remove !epilogue_p
	condition for generating REG_FRAME_RELATED_EXPR note.
	(pop): Add code for generating REG_CFA_RESTORE,
	REG_CFA_ADJUST_CFA notes. Set RTX_FRAME_RELATED_P to 1.
	(sh_expand_epilogue): Use frame_insn() for FP to SP move.
	Set 'frame_p' of calls to output_stack_adjust() to 'true'.

2012-06-11  Richard Henderson  <rth@redhat.com>

	* config/alpha/alpha.c (HWI_HEX2): Add missing shift.
	* vmsdbgout.c (VMS_EPOCH_OFFSET): Add LL suffix.

	* config/alpha/alpha.c (alpha_trampoline_init): Split large constants.

2012-06-12  Hans-Peter Nilsson  <hp@axis.com>

	* doc/tm.texi.in (Addressing Modes) <TARGET_LEGITIMIZE_ADDRESS>:
	Mention that this hook needs to be defined for native TLS.
	* doc/tm.texi: Regenerate.

2012-06-11  Mike Stump  <mikestump@comcast.net>

	* emit-rtl.c (init_emit_once): Iterate through the
	MODE_PARTIAL_INT modes with MIN_MODE_PARTIAL_INT and
	MAX_MODE_PARTIAL_INT, as GET_MODE_WIDER_MODE doesn't step through
	all the MIN_MODE_PARTIAL_INT modes anymore.

2012-06-12  Maxim Kuvyrkov  <maxim@codesourcery.com>

	* gcc/config/mips/mips-tables.opt (xlp): Fix merge typo.

2012-06-11  Roland McGrath  <mcgrathr@google.com>

	* dwarf2out.c (const_ok_for_output_1): Detect a TLS UNSPEC using
	SYMBOL_REF_TLS_MODEL rather than DECL_THREAD_LOCAL_P, in case it's
	not a VAR_DECL.  Also don't limit it to UNSPECs with exactly one
	operand.

2012-06-11  Oleg Endo  <olegendo@gcc.gnu.org>

	PR target/53511
	* config/sh/sh.md (fmasf4): New expander.
	(*macsf3): Rename to fmasf4_i.  Adapt to fma pattern.
	(mac_media): Rename to fmasf4_media.  Adapt to fma pattern.
	* config/sh/sh.opt (mfused-madd): Remove.
	* config/sh/sh.c (sh_option_override): Remove mfused-madd handling.
	(builtin_description bdesc): Remove __builtin_sh_media_FMAC_S.
	* config.gcc (sh[123456789lbe]*-*-* | sh-*-*): Add fused-madd.opt
	as extra options.
	* doc/invoke.texi (SH Options): Update mfused-madd and mno-fused-madd
	descriptions.

2012-06-11  Richard Henderson  <rth@redhat.com>

	* dwarf2cfi.c (scan_trace): Handle annulled branch-taken delay slots.

2012-06-11  Richard Guenther  <rguenther@suse.de>

	PR middle-end/53470
	* tree.c (free_lang_data_in_type): Do not clear TYPE_CONTEXT but
	replace it with the first non-BLOCK context.

2012-06-11  Richard Guenther  <rguenther@suse.de>

	* alias.c (aliases_everything_p): Remove.
	(DIFFERENT_ALIAS_SETS_P): Likewise.
	(true_dependence_1): Use mems_in_disjoint_alias_sets_p directly.
	Do not use aliases_everything_p or special-case ANDs.  Do not
	special-case BLKmode moves.
	(may_alias_p): Likewise.  Handle BLKmode similar like everywhere
	- for SCATCH only.

2012-06-09  Hans-Peter Nilsson  <hp@axis.com>

	Fix CRIS build errors with --enable-build-with-cxx.
	* config/cris/cris.c (cris_emit_trap_for_misalignment): Rename
	variable "and" to "andop".
	* config/cris/sync.md ("atomic_fetch_<atomic_op_name><mode>"): Use
	temporary variable for memory model, passing C++-type-correct
	parameter type to expand_mem_thread_fence.
	("atomic_compare_and_swap<mode>"): Ditto.

2012-06-09  Richard Henderson  <rth@redhat.com>

	PR c++/53602
	* cfgcleanup.c (execute_jump): Rename from rest_of_handle_jump2.
	(pass_jump): Rename from pass_jump2.
	(execute_jump2, pass_jump2): New.
	* combine-stack-adj.c (rest_of_handle_stack_adjustments): Don't
	perform cfg cleanup here.  Move the test of PUSH_ROUNDING
	and ACCUMULATE_OUTGOING_ARGS test...
	(gate_handle_stack_adjustments): ... here.
	* passes.c (init_optimization_passes): Update for pass_jump2 rename.
	Place new pass_jump2 after pass_stack_adjustments.
	* tree-pass.h (pass_jump): Declare.

2012-06-09  Kenneth Zadeck <zadeck@naturalbridge.com>

	* simplify-rtx.c (simplify_const_binary_operation): Fixed shift
	count trucation.

2012-06-08  Richard Henderson  <rth@redhat.com>

	PR c++/53602
	* combine-stack-adj.c (force_move_args_size_note): Add ARGS_SIZE
	note to a clobber insn when no other insn is available.

2012-06-08  Georg-Johann Lay  <avr@gjlay.de>

	* config/avr/avr.c (avr_case_values_threshold): Return 7.

2012-06-07  Andreas Schwab  <schwab@linux-m68k.org>

	* genhooks.c (main): Set progname.
	(emit_documentation): Remove variable found_start, always bail out
	when a place is missing.
	* doc/tm.texi.in (C++ ABI): Add @hook TARGET_CXX_DECL_MANGLING_CONTEXT.

2012-06-07  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/53580
	* omp-low.c (scan_omp): Change first argument to gimple_seq *,
	call walk_gimple_seq_mod instead of walk_gimple_seq.
	(scan_sharing_clauses, scan_omp_parallel, scan_omp_task,
	scan_omp_for, scan_omp_sections, scan_omp_single,
	execute_lower_omp): Adjust callers.
	(scan_omp_1_stmt): Likewise.  If check_omp_nesting_restrictions
	returns false, replace stmt with GIMPLE_NOP.
	(check_omp_nesting_restrictions): Instead of issuing warnings,
	issue errors and return false if any errors were reported.

2012-06-06  Steven Bosscher  <steven@gcc.gnu.org>

	* doc/invoke.texi (fconserve-space): Remove documentation.

2012-06-06  Edmar Wienskoski  <edmar@freescale.com>

	* config/rs6000/rs6000-tables.opt: Regenerated.

2012-06-06  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/53081
	* tree-data-ref.h (adjacent_store_dr_p): Rename to ...
	(adjacent_dr_p): ... this and make it work for reads, too.
	* tree-loop-distribution.c (enum partition_kind): Add PKIND_MEMCPY.
	(struct partition_s): Change main_stmt to main_dr, add
	secondary_dr member.
	(build_size_arg_loc): Change to date data-reference and not
	gimplify here.
	(build_addr_arg_loc): New function split out from ...
	(generate_memset_builtin): ... here.  Use it and simplify.
	(generate_memcpy_builtin): New function.
	(generate_code_for_partition): Adjust.
	(classify_partition): Streamline pattern detection.  Detect memcpy.
	(ldist_gen): Adjust.
	(tree_loop_distribution): Adjust seed statements for memcpy
	recognition.

2012-06-06  Matt Turner  <mattst88@gmail.com>

	* config/arm/mmintrin.h (_mm_empty): New.
	(_m_empty): New.

2012-06-06  Richard Sandiford  <r.sandiford@uk.ibm.com>

	* doc/invoke.texi (sched-pressure-algorithm): Document new --param.
	* common.opt (fsched-pressure-algorithm=): Remove.
	* flag-types.h (sched_pressure_algorithm): Move to...
	* sched-int.h (sched_pressure_algorithm): ...here.
	* params.def (sched-pressure-algorithm): New param.
	* haifa-sched.c (sched_init): Use it to initialize sched_pressure.
	* common/config/s390/s390-common.c (s390_option_optimization_table):
	Remove OPT_fsched_pressure_algorithm_ entry.
	* config/s390/s390.c (s390_option_override): Set a default value for
	PARAM_SCHED_PRESSURE_ALGORITHM.

2012-06-05  Michael Meissner  <meissner@linux.vnet.ibm.com>

	PR target/53487
	* config/rs6000/rs6000.c (rs6000_generate_compare): If we are
	doing an unsigned compare, make sure the second argument is not a
	negative constant.
	(rs6000_emit_cmove): Don't allow floating point comparisons when
	generating ISEL moves.

2012-06-05  Edmar Wienskoski  <edmar@freescale.com>

	* config/rs6000/e5500.md: New file.
	* config/rs6000/e6500.md: New file.
	* config/rs6000/rs6000.c (processor_costs): Add new costs for
	e5500 and e6500.
	(rs6000_option_override_internal): Altivec and Spe options not
	allowed with e5500. Spe options not allowed with e6500. Increase
	move inline limit for e5500 and e6500. Disable string instructions
	for e5500 and e6500. Enable branch targets alignment for e5500 and
	e6500. Initialize rs6000_cost for e5500 and e6500.
	(rs6000_adjust_cost): Add extra scheduling cycles between compare
	and brnach for e5500 and e6500.
	(rs6000_issue_rate): Set issue rate for e5500 and e6500.
	* config/rs6000/rs6000-cpus.def: Add cpu definitions for e5500 and
	e6500.
	* config/rs6000/rs6000.h (ASM_CPU_SPEC): Add e5500 and e6500.
	* config/rs6000/rs6000.md (define_attr "cpu"): Add ppce5500 and
	ppce6500.
	Include e5500.md and e6500.md.
	* config/rs6000/rs6000-opt.h (processor_type): Add
	PROCESSOR_PPCE5500 and PROCESSOR_PPCE6500.
	* config.gcc (cpu_is_64bit): Add new cores e5500, e6500.
	(powerpc*-*-*): Add new cores e5500, e6500.
	* doc/invoke.texi: (item -mcpu): Add e5500 and e6500 to list of cpus.

2012-06-05  Richard Guenther  <rguenther@suse.de>

	* tree-vect-data-refs.c (vect_analyze_data_refs): Fix last change.

2012-06-05  H.J. Lu  <hongjiu.lu@intel.com>

	PR target/53575
	* config.gcc: Select x32 run-time library if --with-abi={x32|mx32}
	is used for x86_64-*-*.

2012-06-05  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/30442
	* tree-vect-data-refs.c (vect_analyze_data_refs): For basic-block
	vectorization stop analysis at the first stmt we cannot compute
	a data-reference for instead of giving up completely.

2012-06-05  Richard Guenther  <rguenther@suse.de>

	* tree-loop-distribution.c (struct partition_s): Add has_writes member.
	(partition_alloc): Initialize it.
	(partition_has_writes): New function.
	(rdg_flag_uses): Adjust.
	(rdg_flag_vertex): Likewise.
	(rdg_flag_vertex_and_dependent): Likewise.
	(rdg_flag_loop_exits): Likewise.
	(build_rdg_partition_for_component): Likewise.
	(rdg_build_partitions): Likewise.

2012-06-05  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/53081
	* tree-loop-distribution.c (generate_memset_builtin): Handle all
	kinds of byte-sized stores.
	(classify_partition): Likewise.
	(tree_loop_distribution): Adjust seed statements used for
	!flag_tree_loop_distribution.

2012-06-05  Alan Modra  <amodra@gmail.com>

	* config/rs6000/rs6000.c (ptr_regno_for_savres): Comment.
	(rs6000_emit_prologue): Ensure register used for inline saves
	of vector regs is not the static chain register.  Revise comment.

2012-06-04  Oleg Endo  <olegendo@gcc.gnu.org>

	* doc/md.texi (Standard Pattern Names For Generation): Document
	sincos pattern.

2012-06-04  H.J. Lu  <hongjiu.lu@intel.com>

	PR bootstrap/53555
	* config/i386/i386.c (ix86_sched_reorder) Skip debug insns.

2012-06-04  Jason Merrill  <jason@redhat.com>

	* dwarf2out.c (is_unit_die): New.
	(copy_declaration_context, copy_ancestor_tree): Use it.
	(copy_decls_walk): Likewise.

2012-06-04  Paolo Carlini  <paolo.carlini@oracle.com>

	PR c++/53524
	* doc/invoke.texi (Wenum-compare): Update documentation.

2012-06-04  Dodji Seketeli  <dodji@redhat.com>

	PR preprocessor/53463
	* parser.c (cp_parser_assignment_expression): Use the location
	for the '=' as the default location for the expression.

2012-06-04  Edmar Wienskoski  <edmar@freescale.com>

	PR target/53559
	* config/rs6000/altivec.md (altivec_stvlx): Change machine mode of
	operands.
	(altivec_stvlxl): Ditto.
	(altivec_stvrx): Ditto.
	(altivec_stvrxl): Ditto.

2012-06-04  Vladimir Makarov  <vmakarov@redhat.com>

	* ira-int.h (struct target_ira_int): Add member x_ira_uniform_class_p.
	(ira_uniform_class_p): New macro.

	* ira.c (setup_uniform_class_p): New function.
	(setup_allocno_and_important_classes): Call the function.
	(print_unform_and_important_classes): New function.
	(print_classes): Rename to print_translated_classes.
	(ira_debug_allocno_classes): Add call of
	print_unform_and_important_classes.

	* ira-costs.c (setup_regno_cost_classes_by_aclass): Use uniform
	classes instead of pressure classes.

2012-06-04  Aldy Hernandez  <aldyh@redhat.com>

	PR middle-end/47530
	* trans-mem.c (expand_block_edges): Do not skip the first
	statement when resetting the BB.

2012-06-04  Richard Guenther  <rguenther@suse.de>

	* tree-data-ref.c (stores_from_loop): Remove.
	(stmt_with_adjacent_zero_store_dr_p): Likewise.
	(stores_zero_from_loop): Likewise.
	* tree-data-ref.h (stores_from_loop, stores_zero_from_loop,
	stmt_with_adjacent_zero_store_dr_p, stride_of_unit_type_p): Remove.
	(adjacent_store_dr_p): New function.
	* tree-loop-distribution.c (generate_memset_builtin): Pass
	the RDG, use the already available data-reference.
	(generate_code_for_partition): Pass down RDG.
	(classify_partition): Inline parts of the former
	stmt_with_adjacent_zero_store_dr_p here and use adjacent_store_dr_p.
	(ldist_gen): Remember if there was any detected builtin and
	do less work if not and flag_tree_loop_distribution is not set.
	(tree_loop_distribution): Inline and fuse stores_from_loop
	and stores_zero_from_loop here.

2012-06-04  Richard Guenther  <rguenther@suse.de>

	PR middle-end/53471
	* dwarf2out.c (dwarf2out_finish): If generating LTO do not
	create new assembler names.

2012-06-04  Richard Guenther  <rguenther@suse.de>

	* tree-data-ref.c (struct rdg_vertex_info): Remove.
	(rdg_vertex_for_stmt): Simplify using gimple_uid.
	(create_rdg_vertices): Pass loop argument, remove stmt to RDG index
	hashtable.  Record stmt data-references.
	(hash_stmt_vertex_info): Remove.
	(eq_stmt_vertex_info): Likewise.
	(hash_stmt_vertex_del): Likewise.
	(build_empty_rdg): Simplify.
	(build_rdg): Adjust.
	(free_rdg): Likewise.
	(ref_base_address): Remove.
	(have_similar_memory_accesses): Likewise.
	* tree-data-ref.h (create_rdg_vertices): Remove.
	(struct rdg_vertex): Add datarefs member.
	(RDGV_DATAREFS): New define.
	(RDG_DATAREFS): Likewise.
	(have_similar_memory_accesses): Remove.
	(rdg_has_similar_memory_accesses): Likewise.
	* tree-loop-distribution.c (ref_base_address): Re-implement here.
	(similar_memory_accesses): Re-implement using existing data-references.
	(tree_loop_distribution): Initialize stmt uids for the stmt to
	RDG index mapping.
	* tree-vect-loop.c (vect_create_epilog_for_reduction): Only
	access stmt vinfo for stmts in loop.

2012-06-04  Andreas Schwab  <schwab@linux-m68k.org>

	PR target/53461
	* config/m68k/m68k.md ("tablejump"): Fix check for
	CASE_VECTOR_PC_RELATIVE.

2012-06-04  Steven Bosscher  <steven@gcc.gnu.org>

	* output.h (merge_weak, assemble_alias,
	initializer_constant_valid_p,
	initializer_constant_valid_for_bitfield_p): Move protos from here...
	* tree.h: ... to here.
	* cgraphclones.c: Do not include output.h.
	* gimplify.c: Likewise.
	* reload.c: Likewise.
	* recog.c: Likewise.
	* tree-ssa-loop-ivopts.c: Likewise.
	* tree-switch-conversion.c: Likewise.
	* c-parser.c: Likewise.
	* c-typeck.c: Likewise.
	* Makefile.in: Fix dependencies.

2012-06-04  Georg-Johann Lay  <avr@gjlay.de>

	PR target/46261
	* config/avr/avr-stdint.h: New file.
	* config.gcc (avr-*-*,tm_file): Use avr/avr-stdint.h instead of
	newlib-stdint.h

2012-06-04  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/53550
	* tree-ssa-loop-niter.c (number_of_iterations_cond): If type
	is POINTER_TYPE_P, use sizetype as step type instead of type.

2012-06-04  Richard Guenther  <rguenther@suse.de>

	* tree-data-ref.c (have_similar_memory_accesses_1): Remove.
	(ref_base_address_1): Likewise.
	(remove_similar_memory_refs): Likewise.
	* tree-data-ref.h (remove_similar_memory_refs): Remove.
	* tree-loop-distribution.c (classify_partition): Do not classify
	as builtin if -ftree-loop-distribute-patterns is not enabled.
	(fuse_partitions_with_similar_memory_accesses): Inline ...
	(ldist_gen): ... here.  Fuse all non-builtin partitions if
	-ftree-loop-distribution is not enabled.  Properly return
	the number of created partitions.  Do not update SSA form here but ...
	(tree_loop_distribution): ... once here for the whole function.
	Only walk innermost loops, constrain loops we consider here
	further.  Do not call remove_similar_memory_refs.
	(distribute_loop): Do not check number of loop nodes here.

2012-06-04  Steven Bosscher  <steven@gcc.gnu.org>

	* Makefile.in (GIMPLE_H): Do not depend on TARGET_H.

2012-06-03  Martin Jambor  <mjambor@suse.cz>

	* ipa-prop.h (ipa_get_jf_known_type_offset): New function.
	(ipa_get_jf_known_type_base_type): Likewise.
	(ipa_get_jf_known_type_component_type): Likewise.
	(ipa_get_jf_constant): Likewise.
	(ipa_get_jf_pass_through_formal_id): Likewise.
	(ipa_get_jf_pass_through_operation): Likewise.
	(ipa_get_jf_ancestor_offset): Likewise.
	(ipa_get_jf_ancestor_type): Likewise.
	(ipa_get_jf_ancestor_formal_id): Likewise.
	(ipa_get_jf_member_ptr_pfn): Likewise.
	* ipa-prop.c (ipa_set_jf_known_type): New function.
	(ipa_set_jf_constant): Likewise.
	(ipa_set_jf_simple_pass_through): Likewise.
	(ipa_set_jf_arith_pass_through): Likewise.
	(ipa_set_ancestor_jf): Likewise.
	(fill_member_ptr_cst_jump_function): Moved up and renamed to
	ipa_set_jf_member_ptr_cst.
	(detect_type_change_1): Use the new jump function creation functions.
	(compute_complex_assign_jump_func): Likewise.
	(compute_complex_ancestor_jump_func): Likewise.
	(compute_known_type_jump_func): Likewise.
	(compute_scalar_jump_functions): Likewise.
	(compute_pass_through_member_ptrs): Likewise.
	(determine_cst_member_ptr): Likewise.
	(combine_known_type_and_ancestor_jfs): Likewise.
	(try_make_edge_direct_simple_call): Likewise.
	(try_make_edge_direct_virtual_call): Likewise.
	(update_indirect_edges_after_inlining): Likewise.
	* ipa-cp.c (ipa_get_jf_pass_through_result): Use jump function
	access functions.  Incorporat NOP_EXPR and BINFO handling from its
	callers.
	(ipa_get_jf_ancestor_result): Likewise.  Incorporate handling BINFOs
	which was in its callers.
	(ipa_value_from_jfunc): Use jump function access functions.  Some
	functionality moved to functions above.
	(propagate_vals_accross_ancestor): Likewise.
	(propagate_vals_accross_pass_through): Use jump function access
	functions.
	(propagate_accross_jump_function): Likewise.
	* ipa-inline-analysis.c (remap_edge_change_prob): Use jump function
	access functions.
	(inline_merge_summary): Likewise.

2012-06-03  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>

	* config/pa/pa.h (MAX_PCREL17F_OFFSET): Define.
	* config/pa/pa.c (pa_attr_length_millicode_call): Use
	MAX_PCREL17F_OFFSET instead of fixed offset.
	(pa_attr_length_call): Likewise.
	(pa_attr_length_indirect_call): Likewise.

2012-06-03  Oleg Endo  <olegendo@gcc.gnu.org>

	PR target/53512
	* config/sh/sh.opt (mfsca, mfsrra): New options.
	* config/sh/sh.md (rsqrtsf2): Use TARGET_FPU_ANY and TARGET_FSRRA
	condition.
	(fsca): Use TARGET_FPU_ANY and TARGET_FSCA condition.
	(sinssf2, cossf2): Fold expanders to ...
	(sincossf3): ... this new expander.  Use TARGET_FPU_ANY and
	TARGET_FSCA condition.
	* config/sh/sh.c (sh_option_override): Handle TARGET_FSRRA and
	TARGET_FSCA.
	* doc/invoke.texi (SH Options): Add descriptions for -mfsca,
	-mno-fsca, -mfsrra, -mno-fsrra.

2012-06-03  Matt Turner  <mattst88@gmail.com>

	* config/mips/4600.md (r4700_imul_si): New.
	(r4700_imul_di): New.
	(r4700_fmul_single): New.
	(r4700_fmul_double): New.
	* config/mips/mips-cpus.def: Add r4700.
	* config/mips/mips.c: Likewise.
	* config/mips/mips.md: Likewise.
	* config/mips/mips-tables.opt: Regenerate.

2012-06-02  Steven Bosscher  <steven@gcc.gnu.org>

	* config/sparc/sparc.h (INITIAL_ELIMINATION_OFFSET): Split out to
	new function sparc_initial_elimination_offset.
	* config/sparc/sparc.c (sparc_initial_elimination_offset): New
	function.
	* config/sparc/sparc-protos.h (sparc_initial_elimination_offset):
	Prototype it.

2012-06-02  Kenneth Zadeck <zadeck@naturalbridge.com>

	* expmed.c (expand_mult, choose_multiplier): Change
	"2 * HOST_BITS_PER_WIDE_INT" to "HOST_BITS_PER_DOUBLE_INT".
	* expr.c (convert_modes): Likewise.
	* explow.c (plus_constant): Likewise.
	* fixed-value.c (fixed_saturate1, fixed_saturate2)
	(do_fixed_add, do_fixed_multiply, do_fixed_multiply)
	(do_fixed_multiply, do_fixed_multiply, do_fixed_divide)
	(do_fixed_divide, do_fixed_divide, do_fixed_divide)
	(do_fixed_divide, do_fixed_divide, do_fixed_shift, do_fixed_shift)
	(do_fixed_shift, fixed_convert, fixed_convert)
	(fixed_convert_from_int, fixed_convert_from_int)
	(fixed_convert_from_real): Likewise.
	* fold-const.c (fold_convert_const_int_from_fixed, sign_bit_p)
	(native_interpret_int, fold_binary_loc, fold_ternary_loc): Likewise.
	* varasm.c (output_constructor_bitfield): Likewise.
	* tree-vrp.c (register_edge_assert_for_2): Likewise.
	* double-int.c (rshift_double, lshift_double): Likewise.
	* double-int.h (double_int_fits_in_uhwi_p, double_int, double_int):
	Likewise.
	* simplify-rtx.c (mode_signbit_p)
	(simplify_const_unary_operation, simplify_binary_operation_1)
	(simplify_immed_subreg): Likewise.
	* builtins.c (c_readstr, fold_builtin_bitop): Likewise.
	* tree-vect-generic.c (build_replicated_const): Likewise.
	* dbxout.c (stabstr_O): Likewise.
	* emit-rtl.c (immed_double_int_const, immed_double_const)
	(gen_lowpart_common, init_emit_once): Likewise.
	* tree.c (integer_pow2p, tree_log2, tree_floor_log2)
	(widest_int_cst_value, upper_bound_in_type): Likewise.
	* stor-layout.c (initialize_sizetypes, fixup_signed_type)
	(fixup_unsigned_type): Likewise.
	* real.c (real_to_integer2, real_from_integer): Likewise.
	* dwarf2out.c (size_of_loc_descr, size_of_die, output_die)
	(clz_loc_descriptor, mem_loc_descriptor): Likewise.

2012-06-01  Eric Botcazou  <ebotcazou@adacore.com>

	PR middle-end/53501
	* fold-const.c (fold_binary_loc): Refine previous change.

2012-06-01  Olivier Hainque  <hainque@adacore.com>

	* config/rs6000/vxworks.h (SUBSUBTARGET_OVERRIDE_OPTIONS): Restore
	the "do {" part of the do-while(0) loop.

2012-06-01  Yuri Rumyantsev  <yuri.s.rumyantsev@intel.com>

	* config/i386/i386.c (x86_sched_reorder): New function.
	Added new function x86_sched_reorder.

2012-06-01  Richard Guenther  <rguenther@suse.de>

	* tree-loop-distribution.c (stmt_has_scalar_dependences_outside_loop):
	Handle PHIs.
	(classify_partition): Likewise.

2012-06-01  Richard Guenther  <rguenther@suse.de>

	* tree-loop-distribution.c (enum partition_kind): New enum.
	(struct partition_s): Add kind and main_stmt members.
	(partition_alloc): Initialize kind to PKIND_NORMAL.
	(partition_builtin_p): New function.
	(copy_loop_before): Remove failure path and assert instead.
	(generate_loops_for_partition): Likewise.
	(generate_memset_zero): Fold into ...
	(generate_memset_builtin): ... this.
	(classify_partition): New function with code from
	can_generate_builtin and generate_builtin.
	(generate_builtin): Remove.
	(can_generate_builtin): Likewise.
	(fuse_partitions_with_similar_memory_accesses): Call
	partition_builtin_p instead of can_generate_builtin.
	(rdg_build_partitions): Do not call
	fuse_partitions_with_similar_memory_accesses here...
	(ldist_gen): ... but here after classifying all partitions.
	Remove failure path of generate_code_for_partition.
	(generate_code_for_partition): Generate code according
	to partition classification.

2012-06-01  Manuel López-Ibáñez  <manu@gcc.gnu.org>
	    Jonathan Wakely  <jwakely.gcc@gmail.com>

	PR c++/50134
	* doc/invoke.texi (Warning Options): Explain purpose and differences
	between -Wmissing-prototypes and -Wmissing-declarations.

2012-06-01  Christian Bruel  <christian.bruel@st.com>

	* gcc.c (save_switch): Add user_p parameter.
	(read_specs): Likewise.
	(set_specs): Likewise.
	(validate_switches): Likewise.
	(validate_switches_from_spec): Likewise.
	(validate_all_switches): Pass on user_p parameter.
	(struct spec_list): Add user_p field.
	(struct switchstr): Add known field.
	(save_switch): Add known parameter.
	(INIT_STATIC_SPEC): Initialize user_p;
	(driver_unknown_option_callbac): call save_switch if
	OPT_SPECIAL_unknown.
	(driver_handle_option): Propagate OPT_specs.
	(do_spec_1): Set validated only if known.
	(check_live_switch): Likewise.
	(validate_switches): Set validated if known or user_spec.

2012-06-01  Hans-Peter Nilsson  <hp@axis.com>

	Add CRIS atomic patterns for 1, 2, and 4 bytes.
	* config/cris/cris.c (cris_emit_trap_for_misalignment): New function.
	* config/cris/cris-protos.h: Declare it.
	* config/cris/cris.h [!TARGET_DEFAULT, TARGET_CPU_DEFAULT == 32]
	(TARGET_DEFAULT): Add alignment by 32.
	[!TARGET_DEFAULT, TARGET_CPU_DEFAULT == 10] (TARGET_DEFAULT): New
	case, as TARGET_CPU_DEFAULT == 0 but with alignment as for
	TARGET_CPU_DEFAULT == 32.
	(TARGET_TRAP_UNALIGNED_ATOMIC): New macro.
	* config/cris/cris.md: Include sync.md.  Avoid allocating specific
	numbers by replacing the define_constants for all UNSPECs with the
	equivalent define_c_enum construct.
	* config/cris/cris.opt (mtrap-unaligned-atomic): New option.
	* config/cris/sync.md: New file.

2012-05-31  Matt Turner  <mattst88@gmail.com>

	* config/mips/4600.md (r4600_imul_si): Rename from r4600_imul.
	(r4600_imul_di): New.
	(r4600_idiv_si): Rename from r4600_idiv.
	(r4600_idiv_di): New.

2012-05-31  Steven Bosscher  <steven@gcc.gnu.org>

	* output.h (__gcc_host_wide_int__): Move to hwint.h.
	(decl_default_tls_model): Move to tree.h
	(dump_file): Move to system.h.
	(default_stabs_asm_out_destructor, default_stabs_asm_out_constructor,
	dbxout_int, dbxout_stabd, dbxout_begin_stabn, dbxout_begin_stabn_sline,
	dbxout_begin_empty_stabs, dbxout_begin_simple_stabs,
	dbxout_begin_simple_stabs_desc, dbxout_stab_value_zero,
	dbxout_stab_value_zero, dbxout_stab_value_label_diff,
	dbxout_stab_value_internal_label,
	dbxout_stab_value_internal_label_diff): Move from here ...
	* dbxout.h: ... to here.
	* system.h (dump_file): Moved here from output.h.
	* hwint.h (__gcc_host_wide_int__): Moved here from output.h.
	* tree.h (decl_default_tls_model): Moved here from output.h.
	* varasm.c (default_stabs_asm_out_destructor,
	default_stabs_asm_out_constructor): Move from here ...
	* dbxout.c: ... to here.

	* gcov-dump.c (dump_file): Rename to dump_gcov_file.  Update callers.

	* collect2.h (dump_file): Rename to dump_ld_file.
	* collect2.c: Likewise.
	* tlink.c: Likewise.

	* alias.c: Do not include output.h.
	* auto-inc-dec.c: Likewise.
	* bt-load.c: Likewise.
	* caller-save.c: Likewise.
	* cfg.c: Likewise.
	* cfgbuild.c: Likewise.
	* cfgcleanup.c: Likewise.
	* cfglayout.c: Likewise.
	* cfgloop.c: Likewise.
	* cfgloopanal.c: Likewise.
	* cfgloopmanip.c: Likewise.
	* cfgrtl.c: Likewise.
	* cgraph.c: Likewise.
	* cgraphclones.c: Likewise.
	* combine-stack-adj.c: Likewise.
	* combine.c: Likewise.
	* cprop.c: Likewise.
	* cse.c: Likewise.
	* cselib.c: Likewise.
	* dbgcnt.c: Likewise.
	* df-problems.c: Likewise.
	* df-scan.c: Likewise.
	* dojump.c: Likewise.
	* fwprop.c: Likewise.
	* gcse.c: Likewise.
	* graph.c: Likewise.
	* haifa-sched.c: Likewise.
	* hw-doloop.c: Likewise.
	* ipa-inline-transform.c: Likewise.
	* ipa-pure-const.c: Likewise.
	* ipa-reference.c: Likewise.
	* ipa-utils.c: Likewise.
	* ira-build.c: Likewise.
	* ira-emit.c: Likewise.
	* lcm.c: Likewise.
	* loop-doloop.c: Likewise.
	* loop-invariant.c: Likewise.
	* loop-iv.c: Likewise.
	* loop-unroll.c: Likewise.
	* loop-unswitch.c: Likewise.
	* lto-cgraph.c: Likewise.
	* lto-section-in.c: Likewise.
	* lto-streamer-in.c: Likewise.
	* mcf.c: Likewise.
	* mode-switching.c: Likewise.
	* postreload-gcse.c: Likewise.
	* postreload.c: Likewise.
	* predict.c: Likewise.
	* profile.c: Likewise.
	* ree.c: Likewise.
	* reg-stack.c: Likewise.
	* regcprop.c: Likewise.
	* regmove.c: Likewise.
	* regstat.c: Likewise.
	* reload1.c: Likewise.
	* sched-ebb.c: Likewise.
	* sel-sched-dump.c: Likewise.
	* simplify-rtx.c: Likewise.
	* stor-layout.c: Likewise.
	* store-motion.c: Likewise.
	* tracer.c: Likewise.
	* tree-affine.c: Likewise.
	* tree-cfg.c: Likewise.
	* tree-cfgcleanup.c: Likewise.
	* tree-dfa.c: Likewise.
	* tree-into-ssa.c: Likewise.
	* tree-nomudflap.c: Likewise.
	* tree-optimize.c: Likewise.
	* tree-pretty-print.c: Likewise.
	* tree-profile.c: Likewise.
	* tree-ssa-address.c: Likewise.
	* tree-ssa-ccp.c: Likewise.
	* tree-ssa-copy.c: Likewise.
	* tree-ssa-dom.c: Likewise.
	* tree-ssa-loop-ch.c: Likewise.
	* tree-ssa-loop-im.c: Likewise.
	* tree-ssa-loop-manip.c: Likewise.
	* tree-ssa-loop-niter.c: Likewise.
	* tree-ssa-loop-prefetch.c: Likewise.
	* tree-ssa-loop-unswitch.c: Likewise.
	* tree-ssa-loop.c: Likewise.
	* tree-ssa-propagate.c: Likewise.
	* tree-ssa-structalias.c: Likewise.
	* tree-ssa-tail-merge.c: Likewise.
	* tree-ssa-threadedge.c: Likewise.
	* tree-ssa-threadupdate.c: Likewise.
	* tree-ssa-uncprop.c: Likewise.
	* tree-ssa-uninit.c: Likewise.
	* tree-ssa.c: Likewise.
	* value-prof.c: Likewise.
	* var-tracking.c: Likewise.
	* web.c: Likewise.

	* config/m32r/m32r.c: Include dbxout.h.
	* config/pa/pa.c: Likewise.
	* config/rs6000/rs6000.c: Likewise.

	* Makefile.in: Fix dependencies.
	* config/rs6000/t-rs5000: Likewise.

2012-05-31  Aldy Hernandez  <aldyh@redhat.com>

	* tree-ssa-loop-im.c (execute_sm): Do not check flag_tm.
	* gimple.h (block_in_transaction): Check for flag_tm.

2012-05-31  Aldy Hernandez  <aldyh@redhat.com>

	PR tree-optimization/52558
	* cfg.c (alloc_aux_for_edge): Fix comment.
	(alloc_aux_for_edge): Remove static.
	* basic-block.h (alloc_aux_for_edge): Protoize.
	* tree-ssa-loop-im.c (execute_sm_if_changed): New.
	(execute_sm_if_changed_flag): New.
	(execute_sm_if_changed_flag_set): New.
	(execute_sm): Do not generate data races unless requested.
	(tree_ssa_lim_initialize): Call alloc_aux_for_edges.
	(tree_ssa_lim_finalize): Call free_aux_for_edges.
	* gimple.h (block_in_transaction): New.
	(gimple_in_transaction): Use block_in_transaction.

2012-05-31  Georg-Johann Lay  <avr@gjlay.de>

	PR target/51345
	* config/avr/avr.opt (-msp8): Document it.
	* doc/invoke.texi (AVR Options): Ditto.  And document related
	built-in macros.

2012-05-31  Diego Novillo  <dnovillo@google.com>

	* configure.ac (CXX_FOR_BUILD): Define and substitute.
	(BUILD_CXXFLAGS): Define and substitute.
	* Makefile.in (BUILD_CXXFLAGS): Define.
	(CXX_FOR_BUILD): Define.
	(COMPILER_FOR_BUILD): Set to CXX_FOR_BUILD if building with C++.
	(LINKER_FOR_BUILD): Likewise.
	(BUILD_COMPILERFLAGS): Set to BUILD_CXXFLAGS if building with C++.
	(BUILD_LINKERFLAGS): Likewise.
	* configure: Regenerate.

2012-05-31  Steven Bosscher  <steven@gcc.gnu.org>

	* Makefile.in: Fix many dependencies.
	* tree-profile.c: Don't include regs.h.
	* tree-vectorizer.c: Don't include cfglayout.h.
	* tree-vect-stmts.c: Likewise.
	* tree-vect-slp.c: Likewise.
	* tree-vect-loop.c: Likewise.
	* reg-stack.c: Likewise.
	* tree-ssa-loop-manip.c: Likewise.
	* toplev.c: Likewise.
	* varasm.c: Don't include cfglayout.h, basic-block.h,
	and tree-iterator.h.
	* tree-cfgcleanup.c: Don't include cfglayout.h.
	* passes.c: Don't include cfglayout.h, dwarf2asm.h,
	dwarf2out.h, dbxout.h, sdbout.h, and xcoffout.h.
	* cgraphclones.c: Don't include plugin.h.

2012-05-31  Georg-Johann Lay  <avr@gjlay.de>

	* config/avr/t-avr: Correct avr-mmcu.texi dependencies.
	(s-avr-mmcu-texi): Don't sed on gen-avr-mmcu-texi output.
	* doc/avr-mmcu.texi (svn:eol-style): Set to native.

2012-05-31  Richard Guenther  <rguenther@suse.de>

	* tree-loop-distribution.c (struct partition_s): New struct,
	typedef and vector type.
	(partition_alloc, partition_free): New functions.
	(generate_loops_for_partition, generate_builtin,
	generate_code_for_partition, rdg_flag_uses, rdg_flag_vertex,
	rdg_flag_vertex_and_dependent, rdg_flag_loop_exits,
	build_rdg_partition_for_component, can_generate_builtin,
	similar_memory_accesses, fuse_partitions_with_similar_memory_accesses,
	rdg_build_partitions, dump_rdg_partitions, debug_rdg_partitions,
	number_of_rw_in_partition, partition_contains_all_rw,
	ldist_gen): Use partition_t instead of bitmap.

2012-05-31  Georg-Johann Lay  <avr@gjlay.de>

	* config/avr/gen-avr-mmcu-texi.c: Sort MCUs.
	* doc/avr-mmcu.texi: Regenerate.

2012-05-31  Richard Guenther  <rguenther@suse.de>

	* tree-loop-distribution.c (stmt_has_scalar_dependences_outside_loop):
	Use FOR_EACH_SSA_DEF_OPERAND.
	(generate_builtin): Adjust.
	(stmt_generated_in_another_partition): Remove.
	(add_scalar_computations_to_partition): Likewise.
	(rdg_build_partitions): Do not call
	add_scalar_computations_to_partition.

2012-05-31  Eric Botcazou  <ebotcazou@adacore.com>

	* tree-dfa.c (get_ref_base_and_extent): Compute the offset using
	double ints throughout.
	* tree-sra.c (build_user_friendly_ref_for_offset) <RECORD_TYPE>:
	Check that the position of the field is representable as an integer.

2012-05-31  Richard Guenther  <rguenther@suse.de>

	* tree-data-ref.c (dr_analyze_innermost): Properly convert
	the MEM_REF offset to sizetype.

2012-05-31  Georg-Johann Lay  <avr@gjlay.de>

	* doc/invoke.texi (AVR Options): Fix typos.

2012-05-31  Hans-Peter Nilsson  <hp@axis.com>

	* config/cris/cris.h (CC1_SPEC): Pass through all -march=
	and -mcpu= options.
	(ASM_SPEC): Ditto, not just -march=v32, but translate non-v10,
	non-v32 into --march=v0_v10.

2012-05-31  Richard Sandiford  <rdsandiford@googlemail.com>

	* ira-int.h (target_ira_int): Rename x_move_cost to
	x_ira_register_move_cost, x_may_move_in_cost to
	x_ira_may_move_in_cost and x_may_move_out_cost to
	x_ira_may_move_out_cost.  Delete the old fields with
	those names and also x_ira_max_register_move_cost,
	x_ira_max_may_move_in_cost and x_ira_max_may_move_out_cost.
	(move_cost, may_move_in_cost, may_move_out_cost)
	(ira_max_register_move_cost, ira_max_may_move_in_cost)
	(ira_max_may_move_out_cost): Delete.
	* ira.c (init_move_cost): Rename to...
	(ira_init_register_move_cost): ...this, deleting the old
	function with that name.  Apply above variable renamings.
	Retain asserts for null fields.
	(ira_init_once): Don't initialize register move costs here.
	(free_register_move_costs): Apply above variable renamings.
	Remove code for deleted fields.

2012-05-31  Richard Sandiford  <rdsandiford@googlemail.com>

	* ira.c (init_move_cost): Adjust choice of subclasses to match
	the current ira_init_register_move_cost choice.  Use
	ira_class_subset_p instead of reg_class_subset_p.
	(ira_init_register_move_cost): Assert that move_cost,
	may_move_in_cost and may_move_out_cost already hold the desired
	values for their ira_* equivalents.  For the latter two,
	ignore classes that can't store a register of the given mode.

2012-05-31  Richard Sandiford  <rdsandiford@googlemail.com>

	* ira.c (setup_allocno_and_important_classes): Use
	ira_class_hard_regs_num to check whether a class has any
	allocatable registers.
	(ira_init_register_move_cost): Likewise.

2012-05-31  Richard Sandiford  <rdsandiford@googlemail.com>

	* ira.c (init_move_cost): Adjust local variable names to match
	file conventions.  Use ira_assert instead of gcc_assert.

2012-05-31  Richard Sandiford  <rdsandiford@googlemail.com>

	* regs.h (move_table, move_cost, may_move_in_cost, may_move_out_cost):
	Move these definitions and associated target_globals fields to...
	* ira-int.h: ...here.
	* rtl.h (init_move_cost): Delete.
	* reginfo.c (last_mode_for_init_move_cost, init_move_cost): Move to...
	* ira.c: ...here, making the latter static.

2012-05-31  Richard Sandiford  <rdsandiford@googlemail.com>

	* ira-costs.c (copy_cost): Use ira_init_register_move_cost_if_necessary
	and ira_register_move_cost instead of init_move_cost and move_cost.

2012-05-31  Richard Sandiford  <rdsandiford@googlemail.com>

	* ira.h (target_ira): Delete x_ira_available_class_regs.
	(ira_available_class_regs): Delete.
	* ira.c (setup_available_class_regs): Delete.
	(setup_alloc_classes): Don't call it.
	(setup_pressure_classes): Use ira_class_hard_regs_num instead of
	ira_available_class_regs.
	* haifa-sched.c (print_curr_reg_pressure, setup_insn_reg_pressure_info)
	(model_spill_cost): Likewise.
	* ira-build.c (low_pressure_loop_node_p): Likewise.
	* ira-color.c (color_pass): Likewise.
	* ira-emit.c (change_loop): Likewise.
	* ira-lives.c (inc_register_pressure, dec_register_pressure)
	(single_reg_class, ira_implicitly_set_insn_hard_regs)
	(process_bb_node_lives): Likewise.
	* loop-invariant.c (gain_for_invariant): Likewise.

2012-05-30  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>

	PR target/52999
	* config/pa/pa.c (TARGET_SECTION_TYPE_FLAGS): Define.
	(pa_section_type_flags): New.
	(pa_legitimate_constant_p): Revert previous change.

2012-05-30  Steven Bosscher  <steven@gcc.gnu.org>

	* ira.c (allocate_initial_values): Make static.

2012-05-30  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.c (legitimize_tls_address) <TLS_MODEL_INITIAL_EXEC>:
	Generate tls_initial_exec_64_sun only when !TARGET_X32.

2012-05-30  Richard Guenther  <rguenther@suse.de>

	PR middle-end/53501
	* fold-const.c (fold_binary_loc): Make sure to call
	fold_plusminus_mult_expr with the original sign of operands.

2012-05-30  Steven Bosscher  <steven@gcc.gnu.org>

	* Makefile.in: Fix many dependencies.
	(DWARF2_H): Depend on dwarf2.def.
	(RTL_ERROR_H): Depend on rtl-error.h.
	(TREE_PRETTY_PRINT_H, GIMPLE_PRETTY_PRINT_H): New.  Replace
	all gimple-pretty-print.h and tree-pretty-print.h references.

2012-05-30  Marc Glisse  <marc.glisse@inria.fr>

	* simplify-rtx.c (simplify_binary_operation_1): Optimize shuffle of
	concatenations.

2012-05-30  Richard Guenther  <rguenther@suse.de>

	PR middle-end/53522
	* tree-emutls.c (gen_emutls_addr): Do not add globals to
	referenced-vars.

2012-05-30  Eric Botcazou  <ebotcazou@adacore.com>

	* explow.c (probe_stack_range): Restore simple control flow and stop
	again when the probe cannot be generated if HAVE_check_stack.

2012-05-30  Jakub Jelinek  <jakub@redhat.com>

	PR rtl-optimization/53519
	* combine.c (simplify_shift_const_1) <case NOT>: Use constm1_rtx
	instead of GEN_INT (GET_MODE_MASK (mode)) as second operand of XOR.

2012-05-30  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>

	* config/arm/arm.c (arm_evpc_neon_vrev): Adjust off by one error.

2012-05-29  Jack Howarth  <howarth@bromo.med.uc.edu>

	PR debug/53453
	* doc/tm.texi: Update.
	* doc/tm.texi.in (SDB and DWARF) <TARGET_FORCE_AT_COMP_DIR>: Add @hook.
	* target.def (force_at_comp_dir): New hook.
	* config/darwin.h (TARGET_FORCE_AT_COMP_DIR): Define.
	* dwarf2out.c (dwarf2out_finish): Check targetm.force_at_comp_dir.

2012-05-29  Jack Howarth  <howarth@bromo.med.uc.edu>

	* config/darwin.h (STARTFILE_SPEC): Do not use -lbundle1.o when
	Darwin >= 10.
	(DARWIN_DYLIB1_SPEC): Do not use -ldylib1.10.5.o when Darwin >= 10.
	(DARWIN_CRT1_SPEC): Use -lcrt1.10.6.o when Darwin >= 10.

2012-05-29  Oleg Endo  <olegendo@gcc.gnu.org>

	PR target/51340
	* config/sh/sh.c (sh_option_override): Set TARGET_FMAC if
	flag_unsafe_math_optimizations is set.
	* doc/invoke.texi (SH Options): Add -mno-fused-madd description.
	Update description of -mfused-madd.

2012-05-29  Oleg Endo  <olegendo@gcc.gnu.org>

	PR target/52941
	* config/sh/predicates.md (atomic_arith_operand,
	atomic_logical_operand): New predicates.
	* config/sh/sh.c (sh_option_override): Check atomic options.
	* config/sh/sh.h (TARGET_ANY_ATOMIC, UNSUPPORTED_ATOMIC_OPTIONS,
	UNSUPPORTED_HARD_ATOMIC_CPU): New macros.
	(DRIVER_SELF_SPECS): Use UNSUPPORTED_ATOMIC_OPTIONS and
	UNSUPPORTED_HARD_ATOMIC_CPU.
	* config/sh/sync.md: Update description comments.
	(I12): New mode iterator.
	(fetchop_predicate, fetchop_constraint): New code attributes.
	(atomic_compare_and_swapsi_hard, atomic_compare_and_swap<mode>_hard,
	atomic_exchangesi_hard, atomic_exchange<mode>_hard,
	atomic_fetch_<fetchop_name>si_hard,
	atomic_fetch_<fetchop_name><mode>_hard,
	atomic_fetch_nandsi_hard, atomic_fetch_nand<mode>_hard,
	atomic_<fetchop_name>_fetchsi_hard,
	atomic_<fetchop_name>_fetch<mode>_hard,
	atomic_nand_fetchsi_hard, atomic_nand_fetch<mode>_hard,
	atomic_test_and_set_hard): New insns.
	(atomic_compare_and_swap<mode>_soft, atomic_exchange<mode>_soft,
	atomic_fetch_<fetchop_name><mode>_soft, atomic_fetch_nand<mode>_soft,
	atomic_<fetchop_name>_fetch<mode>_soft, atomic_nand_fetch<mode>_soft,
	atomic_test_and_set_soft): Use same formatting for the first line of
	the asm block as in new insns above.
	(atomic_compare_and_swap<mode>, atomic_exchange<mode>,
	atomic_fetch_<fetchop_name><mode>, atomic_<fetchop_name>_fetch<mode>,
	atomic_test_and_set): Integrate new *_hard insns into expanders.
	* config/sh/sh.opt (mhard-atomic): New option.
	* doc/invoke.texi (SH Options): Document it.

2012-05-29  Meador Inge  <meadori@codesourcery.com>

	* c-decl.c (c_push_function_context): Always create a new language
	function.
	(c_pop_function_context): Clear the language function created in
	c_push_function_context.

2012-05-29  Matt Turner  <mattst88@gmail.com>

	* config/alpha/ev6.md: (define_bypass "ev6_fmul,ev6_fadd"): New.
	(define_bypass "ev6_fcmov"): New.

2012-05-29  Steven Bosscher  <steven@gcc.gnu.org>

	* integrate.c: Remove.
	* integrate.h: Remove.
	* Makefile.in: Remove make rules for integrate.c and INTEGRATE_H.
	* config/arm/t-arm: Remove INTEGRATE_H dependency for target files.
	* config/rs6000/t-rs6000: Likewise
	* config/spu/t-spu-elf: Likewise.
	* function.h (get_hard_reg_initial_val, has_hard_reg_initial_val,
	get_hard_reg_initial_reg, emit_initial_value_sets): Move prototypes
	from integrate.h to here.
	(initial_value_entry): New prototype.
	* reload.h (allocate_initial_values): Remove prototype.
	* tree.h (set_decl_abstract_flags, set_decl_origin_self): Likewise.
	* cse.c (fixed_base_plus_p): Don't handle virtual registers for
	integrate.c.
	* dwarf2out.c (set_decl_origin_self, set_block_origin_self,
	set_decl_abstract_flags, set_block_abstract_flags): Move from
	integrate.c to here, the only user.
	* expmed.c (extract_fixed_bit_field): Remove outdated comment
	about integrate.c.
	* function.c: Don't include integrate.h.
	(struct initial_value_pair, struct initial_value_struct,
	get_hard_reg_initial_val, has_hard_reg_initial_val,
	get_hard_reg_initial_reg, emit_initial_value_sets): Move from
	integrate.c to here.
	(initial_value_entry): New function.
	* genemit.c (main): Don't print integrate.h include line.
	* ira.c: Don't include integrate.h.
	(allocate_initial_values): Move from integrate.c to here.
	(ira): Update allocate_initial_values call.
	* tree-inline.c: Don't include integrate.h.
	(function_attribute_inlinable_p): Moved from integrate.c to here.
	* cfgexpand.c: Don't include integrate.h.
	* except.c: Likewise.
	* langhooks.c: Likewise.
	* passes.c: Likewise.
	* toplev.c: Likewise.
	* config/frv/frv.c: Likewise.
	* config/pa/pa.c: Likewise.
	* config/spu/spu.c: Likewise.
	* config/epiphany/epiphany.c: Likewise.
	* config/mep/mep.c: Likewise.
	* config/score/score.c: Likewise.
	* config/picochip/picochip.c: Likewise.
	* config/sh/sh.c: Likewise.
	* config/alpha/alpha.c: Likewise.
	* config/microblaze/microblaze.c: Likewise.
	* config/mips/mips.c: Likewise.
	* config/v850/v850.c: Likewise.
	* config/mmix/mmix.c: Likewise.
	* config/bfin/bfin.c: Likewise.
	* config/arm/arm.c: Likewise.
	* config/s390/s390.c: Likewise.
	* config/m32r/m32r.c: Likewise.
	* config/rs6000/rs6000.c: Likewise.
	* config/c6x/c6x.c: Include function.h instead of integrate.h.
	* config/tilegx/tilegx.c: Likewise.
	* config/tilepro/tilepro.c: Likewise.

2012-05-29  Georg-Johann Lay  <avr@gjlay.de>

	* config/avr/t-avr (s-avr-mmcu-texi): Call
	gen-avr-mmcu-texi$(build_exeext) via ./ and don't assume . is in PATH.

2012-05-29  Michael Matz  <matz@suse.de>

	* rtl.h (assign_stack_temp, assign_stack_temp_for_type,
	assign_temp): Remove 'keep' argument.
	(mark_temp_addr_taken): Remove prototype.
	* tree.h (expand_decl): Remove prototype.
	* function.c (struct temp_slot): Remove addr_taken and keep member.
	(assign_stack_temp_for_type) Don't initialize above, remove
	keep argument.
	(assign_stack_temp, assign_temp): Remove keep argument.
	(mark_temp_addr_taken): Remove.
	(preserve_temp_slots): Remove handling of addr_taken and keep members.
	(free_temp_slots): Ditto.
	* expr.c (expand_expr_real_1 <COMPOUND_LITERAL_EXPR>): Remove
	dead code.
	* stmt.c (expand_asm_operands): Remove dead code.
	(expand_decl): Remove.
	* c-decl.c (finish_struct): Don't call expand_decl.
	* builtins.c (expand_builtin_cexpi): Adjust calls to assign_temp
	and assign_stack_temp.
	* calls.c (save_fixed_argument_area, initialize_argument_information,
	expand_call, emit_library_call_value_1, store_one_arg): Ditto.
	* expmed.c (extract_bit_field_1): Ditto.
	* expr.c (emit_group_load_1, emit_group_store,
	copy_blkmode_from_reg, emit_push_insn, expand_assignment,
	store_field, expand_constructor, expand_cond_expr_using_cmove,
	expand_expr_real_2, expand_expr_real_1): Ditto.
	* stmt.c (expand_asm_operands, expand_return): Ditto.

	* function.c (pop_temp_slots): Call free_temp_slots.
	* calls.c (store_one_arg): Don't call preserve_temp_slots or
	free_temp_slots.
	* expr.c (expand_assignment): Don't call free_temp_slots.

	* config/arm/arm.c (neon_expand_vector_init): Ditto.
	* config/i386/i386.c (ix86_expand_vector_set): Ditto.
	(ix86_expand_vector_extract): Ditto.
	* config/ia64/ia64.c (spill_xfmode_rfmode_operand,
	ia64_expand_movxf_movrf): Ditto.
	* config/mips/mips.c (mips_expand_vi_general): Ditto.
	* config/mmix/mmix.md (floatdisf2, floatunsdisf2, truncdfsf2,
	extendsfdf2): Ditto.
	* config/rs6000/rs6000.c (rs6000_expand_vector_init,
	rs6000_expand_vector_set, rs6000_expand_vector_extract,
	rs6000_allocate_stack_temp): Ditto.
	* config/rs6000/rs6000.md (fix_trunctfsi2_fprs): Ditto.
	* config/sparc/sparc.c (emit_soft_tfmode_libcall,
	sparc_emit_float_lib_cmp, sparc_emit_float_lib_cmp,
	sparc_expand_vector_init): Ditto.

2012-05-29  Michael Matz  <matz@suse.de>

	* c-tree.h (c_expand_decl): Remove prototype.

	* expr.c (expand_expr_real_1 <normal_inner_ref>): Don't allocate
	a kept temp.
	(expand_expr_real_1 <COMPOUND_LITERAL_EXPR>): Make unreachable.
	* gimple-fold.c (canonicalize_constructor_val): Canonicalize
	COMPOUND_LITERAL_EXPR.
	* function.c (expand_function_start): Don't call expand_decl,
	instead assert that we have RTL assigned.
	* tree-ssa-live.c (remove_unused_locals): Clear
	nonlocal_goto_save_area if its backing variable is removed.
	* stmt.c (expand_asm_operands): Remove handling of non-lvalues
	as mem inputs.
	(expand_decl): Assert that this does nothing.
	* calls.c (expand_call): Don't call mark_temp_addr_taken.

2012-05-29  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/53516
	* tree-data-ref.c (stmt_with_adjacent_zero_store_dr_p): Reject
	bitfield accesses.
	* tree-vect-data-refs.c (vect_analyze_data_refs): Likewise.

2012-05-29  Joseph Myers  <joseph@codesourcery.com>

	* LANGUAGES: Fix typos.
	* Makefile.in: Fix typos.
	* alias.c: Fix typos.
	* auto-inc-dec.c: Fix typos.
	* bb-reorder.c: Fix typos.
	* cfgcleanup.c: Fix typos.
	* cgraph.c: Fix typos.
	* cgraph.h: Fix typos.
	* cgraphunit.c: Fix typos.
	* collect2-aix.h: Fix typos.
	* collect2.c: Fix typos.
	* compare-elim.c: Fix typos.
	* config/alpha/vms.h: Fix typos.
	* config/arm/README-interworking: Fix typos.
	* config/arm/arm.c: Fix typos.
	* config/arm/iterators.md: Fix typos.
	* config/arm/vxworks.h: Fix typos.
	* config/avr/avr.c: Fix typos.
	* config/avr/avr.h: Fix typos.
	* config/avr/avr.md: Fix typos.
	* config/avr/builtins.def: Fix typos.
	* config/c6x/c6x.c: Fix typos.
	* config/cr16/cr16.c: Fix typos.
	* config/cr16/cr16.md: Fix typos.
	* config/cris/cris.md: Fix typos.
	* config/darwin.c: Fix typos.
	* config/darwin.opt: Fix typos.
	* config/i386/i386-c.c: Fix typos.
	* config/i386/i386.c: Fix typos.
	* config/ia64/ia64.c: Fix typos.
	* config/m68k/cf.md: Fix typos.
	* config/mep/mep.c: Fix typos.
	* config/microblaze/microblaze.c: Fix typos.
	* config/microblaze/microblaze.h: Fix typos.
	* config/mn10300/mn10300.c: Fix typos.
	* config/mn10300/mn10300.md: Fix typos.
	* config/pa/pa.c: Fix typos.
	* config/picochip/picochip.h: Fix typos.
	* config/rs6000/a2.md: Fix typos.
	* config/rs6000/rs6000.c: Fix typos.
	* config/rs6000/vector.md: Fix typos.
	* config/rx/rx.md: Fix typos.
	* config/rx/rx.opt: Fix typos.
	* config/s390/2097.md: Fix typos.
	* config/s390/s390.c: Fix typos.
	* config/s390/s390.h: Fix typos.
	* config/sh/sh.c: Fix typos.
	* config/sh/sh.md: Fix typos.
	* config/sparc/sync.md: Fix typos.
	* config/spu/spu.c: Fix typos.
	* config/spu/spu.md: Fix typos.
	* config/vms/vms.c: Fix typos.
	* config/vxworks-dummy.h: Fix typos.
	* config/vxworks.h: Fix typos.
	* cselib.c: Fix typos.
	* df-scan.c: Fix typos.
	* df.h: Fix typos.
	* doc/extend.texi: Fix typos.
	* doc/install.texi: Fix typos.
	* doc/invoke.texi: Fix typos.
	* doc/md.texi: Fix typos.
	* doc/plugins.texi: Fix typos.
	* doc/rtl.texi: Fix typos.
	* dse.c: Fix typos.
	* dwarf2asm.c: Fix typos.
	* dwarf2out.c: Fix typos.
	* except.h: Fix typos.
	* expr.c: Fix typos.
	* fold-const.c: Fix typos.
	* gcc.c: Fix typos.
	* gcse.c: Fix typos.
	* genautomata.c: Fix typos.
	* gengtype-state.c: Fix typos.
	* gengtype.c: Fix typos.
	* genhooks.c: Fix typos.
	* gimple-fold.c: Fix typos.
	* gimple-pretty-print.c: Fix typos.
	* gimple.c: Fix typos.
	* gimple.h: Fix typos.
	* gimplify.c: Fix typos.
	* graphite-interchange.c: Fix typos.
	* graphite-sese-to-poly.c: Fix typos.
	* ifcvt.c: Fix typos.
	* input.c: Fix typos.
	* ipa-cp.c: Fix typos.
	* ipa-inline-analysis.c: Fix typos.
	* ipa-inline-transform.c: Fix typos.
	* ipa-inline.c: Fix typos.
	* ipa-pure-const.c: Fix typos.
	* ipa-ref.h: Fix typos.
	* ipa-reference.c: Fix typos.
	* ipa-utils.c: Fix typos.
	* ipa.c: Fix typos.
	* ira-emit.c: Fix typos.
	* ira-lives.c: Fix typos.
	* lto-streamer.c: Fix typos.
	* lto-streamer.h: Fix typos.
	* lto-wrapper.c: Fix typos.
	* mcf.c: Fix typos.
	* mode-switching.c: Fix typos.
	* modulo-sched.c: Fix typos.
	* plugin.c: Fix typos.
	* postreload.c: Fix typos.
	* sched-deps.c: Fix typos.
	* sel-sched-ir.c: Fix typos.
	* sel-sched-ir.h: Fix typos.
	* sel-sched.c: Fix typos.
	* sese.c: Fix typos.
	* stor-layout.c: Fix typos.
	* target-hooks-macros.h: Fix typos.
	* target.def: Fix typos.
	* trans-mem.c: Fix typos.
	* tree-eh.c: Fix typos.
	* tree-predcom.c: Fix typos.
	* tree-sra.c: Fix typos.
	* tree-ssa-address.c: Fix typos.
	* tree-ssa-loop-ivopts.c: Fix typos.
	* tree-ssa-loop-niter.c: Fix typos.
	* tree-ssa-math-opts.c: Fix typos.
	* tree-ssa-pre.c: Fix typos.
	* tree-ssa-propagate.c: Fix typos.
	* tree-ssa-reassoc.c: Fix typos.
	* tree-ssa-sccvn.c: Fix typos.
	* tree-ssa-ter.c: Fix typos.
	* tree-ssa-uninit.c: Fix typos.
	* tree-ssanames.c: Fix typos.
	* tree-vect-generic.c: Fix typos.
	* tree-vect-slp.c: Fix typos.
	* tree.c: Fix typos.
	* tree.h: Fix typos.
	* varasm.c: Fix typos.
	* varpool.c: Fix typos.

2012-05-29  Joseph Myers  <joseph@codesourcery.com>

	* doc/include/texinfo.tex: Update to version 2012-05-16.16.

2012-05-29  Richard Guenther  <rguenther@suse.de>

	* tree-dfa.c (find_vars_r): Do not call add_referenced_vars
	for globals.
	(add_referenced_var_1): Re-organize.  Assert we are not
	called for globals.
	(remove_referenced_var): Likewise.
	* varpool.c (add_new_static_var): Use create_tmp_var_raw.
	* tree-mudflap.c (execute_mudflap_function_ops): Do not
	call add_referenced_var on globals.
	* matrix-reorg.c (transform_access_sites): Likewise.

2012-05-29  Steven Bosscher  <steven@gcc.gnu.org>

	* alias.c (reg_known_value): Make this a VEC.
	(reg_known_equiv_p): Make this an sbitmap.
	(reg_known_value_size): Remove.
	(get_reg_known_value, set_reg_known_value, get_reg_known_equiv_p,
	set_reg_known_equiv_p): Update for reg_known_value and
	reg_known_value_size data structure change.
	(init_alias_analysis, end_alias_analysis): Likewise.

2012-05-29  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/53510
	* input.c (read_line): Use XRESIZEVEC instead of XNEWVEC
	to avoid leaking memory.  No need to handle memory allocation
	failure.  Double string_len on each reallocation instead of adding 2.
	* gcov.c (read_line): Likewise.

2012-05-29  Hans-Peter Nilsson  <hp@axis.com>

	* config/cris/cris.h (TARGET_HAS_BREAK, TARGET_TRAP_USING_BREAK8):
	New macros.
	* config/cris/cris.md ("trap"): Define, enabled for
	TARGET_TRAP_USING_BREAK8.
	* config/cris/cris.opt (mtrap-using-break8): New option.

2012-05-28  Paolo Carlini  <paolo.carlini@oracle.com>

	PR c++/25137
	* doc/invoke.texi: Document -Wmissing-braces not enabled by -Wall
	for C++.

2012-05-28  Hans-Peter Nilsson  <hp@axis.com>

	* doc/md.texi (stack_protect_test): Remove negation of branch to label.
	(Standard Names): Fix typos in documentation of atomic patterns.

2012-05-27  Nathan Sidwell  <nathan@acm.org>

	* tree.c (build_constructor): Propagate TREE_SIDE_EFFECTS.

2012-05-26  Jason Merrill  <jason@redhat.com>

	PR c++/53220
	* c-typeck.c (array_to_pointer_conversion): Give -Wc++-compat warning
	about array compound literals.

2012-05-26  Eric Botcazou  <ebotcazou@adacore.com>

	* cfgcleanup.c (try_optimize_cfg): Do not delete forwarder blocks
	if CLEANUP_NO_INSN_DEL.
	* cfgrtl.c (unique_locus_on_edge_between_p): New function extracted
	from cfg_layout_merge_blocks.
	(emit_nop_for_unique_locus_between): New function.
	(rtl_merge_blocks): Invoke emit_nop_for_unique_locus_between.
	(cfg_layout_merge_blocks): Likewise.

2012-05-26  Dimitrios Apostolou  <jimis@gmx.net>
	    Paolo Bonzini  <bonzini@gnu.org>

	* df-scan.c (df_def_record_1): Assert a parallel must contain an
	EXPR_LIST at this point.  Receive the LOC and move its extraction...
	(df_defs_record): ... here. Change if-else to a switch statement.
	(df_find_hard_reg_defs, df_find_hard_reg_defs_1): New.
	(df_get_call_refs): Changed defs_generated from bitmap to HARD_REG_SET
	and compute it from df_find_hard_reg_defs(). Record DF_REF_BASE
	DEFs in REGNO order. Use HARD_REG_SET instead of bitmap for
	regs_invalidated_by_call.
	(df_insn_refs_collect): Record DF_REF_REGULAR DEFs after
	df_get_call_refs().

2012-05-25  Eric Botcazou  <ebotcazou@adacore.com>

	PR lto/52178
	* tree-inline.c (remap_gimple_op_r): Fix handling of FIELD_DECL.
	* tree.c (RETURN_TRUE_IF_VAR): Do not return true for PLACEHOLDER_EXPR.

2012-05-25  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/t-linux64: Delete the 32-bit multilib that uses
	software floating point emulation.  No longer build the multilibs
	with -mstrict-align.

2012-05-25  Aldy Hernandez  <aldyh@redhat.com>

	PR middle-end/53008
	* trans-mem.c (ipa_tm_create_version_alias): Output new_node if
	accessed indirectly.
	(ipa_tm_create_version): Same.

2012-05-25  Uros Bizjak  <ubizjak@gmail.com>

	PR target/53474
	* config/i386/i386.c (ix86_print_operand) <case 'O'>: Print '.' here.
	<case 'C', case 'c', case 'F', case 'f'>: Print '.' only for C and c.

2012-05-25  Alexander Ivchenko  <alexander.ivchenko@intel.com>

	PR target/53435
	* config/i386/i386.c (ix86_expand_vec_perm): Use correct op.
	(ix86_expand_vec_perm): Use int mode instead of float.
	(expand_vec_perm_pshufb): Remove handling of useseless type
	conversion.

2012-05-25  Eric Botcazou  <ebotcazou@adacore.com>

	PR ada/52362
	* config.gcc (i[34567]86-*-mingw* | x86_64-*-mingw*): Set gas and
	gnu_ld variables to yes.
	* configure.ac (HAVE_GNU_LD): Move to after config.gcc inclusion.
	(HAVE_GNU_AS): Likewise.
	* config.in: Regenerate.
	* configure: Likewise.

2012-05-25  Tristan Gingold  <gingold@adacore.com>

	* config/i386/i386.c (struct ix86_frame): Remove unused frame field.
	(ix86_compute_frame_layout): Fix type of stack_alignment_needed
	and preferred_alignment.

2012-05-25  Tristan Gingold  <gingold@adacore.com>

	* common/config/ia64/ia64-common.c (ia64_except_unwind_info): Fix typo.

2012-05-25  Thomas Schwinge  <thomas@codesourcery.com>

	* fold-const.c (optimize_bit_field_compare): Abort early in the strict
	volatile bitfields case.

2012-05-24  Pat Haugen  <pthaugen@us.ibm.com>

	* config/rs6000/rs6000.c (rs6000_option_override_internal): Change
	rs6000_sched_costly_dep default to true_store_to_load_dep_costly.
	(adjacent_mem_locations): Move some code to and call...
	(get_memref_parts): ...new function.
	(mem_locations_overlap): New function.
	(rs6000_adjust_priority): Adjust calls to is_load_insn/is_store_insn.
	(is_mem_ref): Rename to...
	(find_mem_ref): ...this. Return MEM rtx.
	(get_store_dest): Remove function.
	(is_load_insn1, is_load_insn, is_store_insn1, is_store_insn): Add
	new parameter and adjust calls.
	(rs6000_is_costly_dependence): Update calls for extra arg. Make sure
	mem refs overlap for true_store_to_load_dep_costly.
	(rs6000_sched_reorder2): Update calls for extra arg. Adjust args
	passed to adjacent_mem_locations.
	(is_costly_group): Walk resolved dependency list.
	(force_new_group): Emit group ending nop for Power6/Power7.
	* config/rs6000/rs6000.md (UNSPEC_GRP_END_NOP): New enum value.
	(group_ending_nop): New define_insn.

2012-05-24  Dodji Seketeli  <dodji@redhat.com>

	Make unwound macro expansion trace less redundant
	* tree-diagnostic.c (maybe_unwind_expanded_macro_loc): Don't print
	context of macro definition in the trace, when it's redundant.
	Update comments.

2012-05-24  Richard Guenther  <rguenther@suse.de>

	PR middle-end/53460
	* tree-profile.c (tree_profiling): Cleanup the CFG if
	execute_fixup_cfg requests it.

2012-05-24  Richard Guenther  <rguenther@suse.de>

	* tree-flow.h (create_var_ann): Remove.
	* tree-dfa.c (create_var_ann): Remove and inline into its
	single caller ...
	(add_referenced_var_1): ... here.
	* varpool.c (add_new_static_var): Do not call add_referenced_var
	for global vars.
	* gimple-fold.c (canonicalize_constructor_val): Likewise.
	* tree-switch-conversion.c (build_one_array): Likewise.
	* tree-profile.c (gimple_gen_ic_profiler): Likewise.
	* tree-flow-inline.h (gimple_referenced_vars): Guard against
	NULL fn argument.
	* tree-inline.c (remap_gimple_op_r): Likewise.  Check
	gimple_referenced_vars instead of gimple_in_ssa_p.
	(copy_tree_body_r): Likewise.
	(setup_one_parameter): Likewise.
	(declare_return_variable): Likewise.
	(tree_function_versioning): Likewise.

2012-05-24  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/53465
	* tree-vrp.c (extract_range_from_cond_expr): First copy_value_range
	vr0 into *vr, then vrp_meet that.
	(vrp_meet): If one vr type is VR_UNDEFINED, ensure the result doesn't
	have any equivalences.
	(vrp_visit_phi_node): Call copy_value_range instead of vrp_meet the
	first time.

2012-05-24  Jim MacArthur  <jim.macarthur@arm.com>

	* recog.c (reg_fits_class_p): Check both regno and regno + offset are
	hard registers.
	* regs.h (in_hard_reg_set_p): Assert that regno is a hard register and
	check end_regno - 1 is a hard register.

2012-05-24  Richard Guenther  <rguenther@suse.de>

	* varpool.c (add_new_static_var): Remove call to create_var_ann.
	* tree-ssa-operands.c (create_vop_var): Likewise.

2012-05-24  Richard Guenther  <rguenther@suse.de>

	PR bootstrap/53466
	* tree-ssa-live.c (remove_unused_scope_block_p): Properly
	handle globals.
	(remove_unused_locals): Pass global_unused_vars to
	remove_unused_scope_block_p.  Restore code walking all
	referenced vars and pruning them.

2012-05-23  Jan Hubicka  <jh@suse.cz>

	* tree.h (alias_diag_flags): Remove.
	(alias_pair): Remove emitted_diags.
	(finish_aliases_1, finish_aliases_2, remove_unreachable_alias_pairs,
	symbol_alias_set_t, symbol_alias_set_destroy,
	symbol_alias_set_contains, propagate_aliases_backward): Remove.
	* toplev.c (compile_file): Do not call finish_aliases_2
	* cgraphunit.c (cgraph_process_new_functions): Do not call
	finish_aliases_1.
	(handle_alias_pairs): Output diagnostics about aliases to externals.
	(assemble_thunks_and_aliases): Use do_assemble_alias.
	(output_weakrefs): Likewise.
	(finalize_compilation_unit): Do not call finish_aliases_1.
	* ipa.c (symtab_remove_unreachable_nodes): De not call
	remove_unreachable_alias_pairs.
	* varasm.c (do_assemble_alias): Export.
	(symbol_alias_set_create, symbol_alias_set_destroy,
	symbol_alias_set_contains, symbol_alias_set_insert,
	propagate_aliases_forward, propagate_aliases_backward,
	propagate_aliases_backward, trivially_visible_alias,
	trivially_defined_alias, remove_unreachable_alias_pairs,
	finish_aliases_1, finish_aliases_2, assemble_alias): Remove.
	* output.h (do_assemble_alias): Declare.
	* varpool.c (varpool_remove_unreferenced_decls): Do not call
	finish_aliases_1.

2012-05-23  Martin Jambor  <mjambor@suse.cz>

	* ipa-inline-analysis.c (inline_merge_summary): Free operand_map.

2012-05-23  Eric Botcazou  <ebotcazou@adacore.com>

	* gimple.c (gimple_types_compatible_p_1) <ARRAY_TYPE>: Remove bogus
	size handling.
	(gimple_canonical_types_compatible_p) <ARRAY_TYPE>: Likewise.
	(iterative_hash_gimple_type): Adjust comment.
	(iterative_hash_canonical_type): Likewise.  Hash the bounds of the
	domain for an array type instead of the domain type itself.

2012-05-23  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/53438
	* tree-sra.c (analyze_access_subtree): Correct bitfield exclusion.

2012-05-23  Georg-Johann Lay  <avr@gjlay.de>

	PR target/53448
	* config/avr/avr.h (ASM_OUTPUT_ALIGN): Don't inhibit .p2align 1.
	* config/avr/elf.h (ASM_OUTPUT_BEFORE_CASE_LABEL): Use
	ASM_OUTPUT_ALIGN.

2012-05-23  Richard Guenther  <rguenther@suse.de>

	* tree-dfa.c (add_referenced_var_1): Do not add global vars.
	* tree-ssa-live.c (mark_all_vars_used_1): Handle global vars
	via the global_unused_vars bitmap.
	(remove_unused_locals): Handle global vars in local-decls via
	a global_unused_vars bitmap instead of the used flag in the
	var annotation.  Simplify global variable handling and removal.

2012-05-22  Jan Hubicka  <jh@suse.cz>

	PR middle-end/53426
	* tree-ssa-structalias.c (create_variable_info_for): Skip constructors
	from other partitions.

2012-05-22  Jan Hubicka  <jh@suse.cz>

	PR middle-end/53161
	* symtab.c (symtab_register_node): Fix ordering issue.

2012-05-22  Steven Drake <sbd@NetBSD.org>

	* gcc.c (do_spec_1): Add %M spec token to output multilib_os_dir.

2012-05-22  David Edelsohn  <dje.gcc@gmail.com>

	* config/rs6000/rs6000.c (rs6000_aix_asm_output_dwarf_table_ref):
	Use strip_name_encoding target hook.

2012-05-22  Richard Guenther  <rguenther@suse.de>

	* tree.h (VAR_DECL_IS_VIRTUAL_OPERAND): New.
	(init_function_for_compilation): Remove.
	* tree-dfa.c (find_vars_r): Take struct function argument.
	(find_referenced_vars_in): Adjust.
	* tree-ssa-operands.c (clobber_stats): Remove.
	(create_vop_var): Take struct function argument.  Mark
	virtual operand with VAR_DECL_IS_VIRTUAL_OPERAND.
	(init_ssa_operands): Take struct function argument.
	(fini_ssa_operands): Do not dump dead stats.
	* tree-ssa-operands.h (init_ssa_operands): Take struct function
	argument.
	* cgraphunit.c (init_lowered_empty_function): Adjust.
	* lto-streamer-in.c (input_cfg): Likewise.
	* tree-inline.c (initialize_cfun): Likewise.
	* tree-into-ssa.c (rewrite_into_ssa): Likewise.
	* omp-low.c (expand_omp_taskreg): Likewise.  Avoid switching cfun.
	* gimple.c (is_gimple_reg): Optimize the SSA_NAME case,
	virtual operands are not registers.

2012-05-22  Richard Guenther  <rguenther@suse.de>

	* tree-cfg.c (verify_gimple_assign_unary): Fix typo in previous commit.

2012-05-22  Richard Guenther  <rguenther@suse.de>

	PR middle-end/53437
	* tree-inline.c (setup_one_parameter): Create a dummy init
	statement for unused parameters when not optimizing.

2012-05-22  Richard Guenther  <rguenther@suse.de>

	* tree-flow.h (add_referenced_var_1): Declare.
	(add_referenced_var): Define.
	* tree-dfa.c (referenced_var_check_and_insert): Avoid one hash lookup.
	(add_referenced_var): Rename to ...
	(add_referenced_var_1): ... this.  Take struct function argument.

2012-05-22  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>

	PR target/53334
	* config/arm/arm-protos.h (arm_validize_comparison): Declare.
	* config/arm/arm.c (arm_validize_comparison): Define.
	* config/arm/arm.md ("cbranchsi4"): Cleanup expansion and use
	arm_validize_comparison.
	("cbranchdi4"): Likewise.
	("cstoredi4"): Likewise.
	("movsicc"): Likewise.
	("movsfcc"): Likewise.
	("movdfcc"): Likewise.

2012-05-22  Dimitrios Apostolou  <jimis@gmx.net>

	* df-scan.c (df_scan_alloc): Round up allocation pools size, reduce
	the mw_reg_pool size.

2012-05-22  Paolo Bonzini  <bonzini@gnu.org>

	PR tree-optimization/53336
	* tree-cfg.c (verify_gimple_assign_unary): Allow conversion from
	non-integer integral types to offset type and vice versa.

2012-05-22  Alan Modra  <amodra@gmail.com>

	* config/rs6000/aix.h (FP_SAVE_INLINE, GP_SAVE_INLINE): Delete.
	* config/rs6000/darwin.h (FP_SAVE_INLINE, GP_SAVE_INLINE): Delete.
	* config/rs6000/sysv4.h (FP_SAVE_INLINE, GP_SAVE_INLINE,
	V_SAVE_INLINE): Delete.
	* config/rs6000/rs6000.c (V_SAVE_INLINE): Delete.
	(rs6000_savres_strategy): Reimplement GP/FP/V_SAVE_INLINE logic.
	For ELF targets, use out-of-line restores for -Os and any number
	of regs if the restore exits, and out-of-line gp save for two or
	more regs.  Use save_reg_p to test for holes in reg restore set.
	Replace "#if" with "if".

2012-05-22  Alan Modra  <amodra@gmail.com>

	* config/rs6000/rs6000.c (save_reg_p): New function.
	(first_reg_to_save, first_fp_reg_to_save): Use it here.
	(first_altivec_reg_to_save, restore_saved_cr): Likewise.
	(emit_frame_save): Use gen_frame_store.
	(gen_frame_mem_offset): Correct SPE condition requiring reg+reg.
	(rs6000_emit_prologue): Use save_reg_p.  Use gen_frame_store for
	vrsave and toc.
	(rs6000_emit_epilogue): Use save_reg_p.  Use gen_frame_load for
	vrsave, toc, gp and fp restores.

2012-05-22  Alan Modra  <amodra@gmail.com>

	* config/rs6000/rs6000.c: Delete unnecessary forward declarations.
	Move those with ATTRIBUTE_UNUSED to immediately before definitions.
	Move function pointer variables after forward declarations.
	(rs6000_builtin_support_vector_misalignment): Make static.
	(rs6000_legitimate_address_p, rs6000_gimplify_va_arg): Likewise.
	(rs6000_function_value, rs6000_can_eliminate): Likewise.

2012-05-21  Bernd Schmidt  <bernds@codesourcery.com>

	PR rtl-optimization/53373
	* caller-save.c (save_call_clobbered_regs): Look into a possible
	PARALLEL manually rather than using single_set on a call insn.

2012-05-21  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/53436
	* omp-low.c (omp_build_component_ref): New function.
	(build_receiver_ref, build_sender_ref, create_task_copyfn): Use it.

2012-05-21  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.c (put_condition_code): Change "reverse" and "fp"
	arguments to bool.
	(ix86_print_operand) <case 'O'>: Look at mode size of the operand.
	Do not print '.' here.  Output operand lossage error for unhandled
	sizes.  Move.
	<case '*'>: Move.
	<case '&'>: Ditto.
	<case 'Y'>: Ditto.
	<case 'z'>: Hardcode "code" argument into error strings.
	<case 'Z'>: Ditto.
	<case 'D'>: Merge AVX and non-AVX codes.
	<case 'C', case 'c', case 'F', case 'f'>: Merge.  Fix error string.
	Update call to put_condition_code.

2012-05-21  Andreas Schwab  <schwab@linux-m68k.org>

	* config/m68k/m68k.md (*clzsi2_cf): Renamed from clzsi2.  Call
	CC_STATUS_INIT.
	(clzsi2): New expander.
	(*clzsi2_68k): New insn.
	* config/m68k/m68k.h: Update comment about CLZ_DEFINED_VALUE_AT_ZERO.

2012-05-21  Aldy Hernandez  <aldyh@redhat.com>

	* gimple.h (gimple_set_in_transaction): Remove.
	(gimple_in_transaction): Look in BB instead.
	(gimple_statement_base): Remove in_transaction field.
	* basic-block.h (enum bb_flags): Add BB_IN_TRANSACTION.
	* trans-mem.c (compute_transaction_bits): Place transaction bit
	information into basic blocks.

2012-05-21  Andreas Schwab  <schwab@linux-m68k.org>

	* expr.c (get_def_for_expr_class): Define only if
	HAVE_conditional_move.
	(convert_tree_comp_to_rtx): Likewise.

2012-05-21  Uros Bizjak  <ubizjak@gmail.com>

	PR target/53399
	* config/i386/i386.md (ffs<mode>2): Generate CCCmode compare
	for TARGET_BMI.
	(ffssi2_no_cmove): Ditto.
	(*ffs<mode>_1): Remove insn pattern.
	(*tzcnt<mode>_1): New insn pattern.
	(*bsf<mode>1): Ditto.

2012-05-21  Richard Guenther  <rguenther@suse.de>

	* tree-dfa.c (add_referenced_var): Do not walk DECL_INITIAL for
	more referenced vars.
	* tree-ssa-live.c (mark_all_vars_used_1): Only set the used
	flag on variables that have a var-annotation.

2012-05-21  Joseph Myers  <joseph@codesourcery.com>

	PR c/53418
	* c-typeck.c (build_conditional_expr): Remove C_MAYBE_CONST_EXPR
	from folded operands before wrapping another around the
	conditional expression.

2012-05-21  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/53366
	* tree-vect-slp.c (vect_supported_load_permutation_p): Don't shortcut
	tests if complex_numbers == 2, but there are non-complex number loads
	too.

	PR tree-optimization/53409
	* tree-vect-loop.c (vect_analyze_loop_operations): Don't check
	vinfo_for_stmt (op_def_stmt) if op_def_stmt isn't inside loop.

	PR tree-optimization/53410
	* fold-const.c (fold_binary_loc): Use build_zero_cst (type)
	instead of build_int_cst (type, 0) where vector types might be
	involved. Instead of build_int_cst (type, 1) convert the original
	integer_onep argument to the desired type.

2012-05-21  Michael Matz  <matz@suse.de>

	* genattrtab.c (attr_rtx_cost): Move earlier, start with cost being 1.
	(simplify_test_exp): Handle one more case of distributive law,
	decrease cost threshold.
	(tests_attr_p, get_attr_order): New functions.
	(optimize_attrs): Use topological order, inline only cheap values.
	(write_attr_set): Reset our_known_true after some time.

2012-05-21  H.J. Lu  <hongjiu.lu@intel.com>

	PR target/53425
	* config/i386/i386.c (type_natural_mode): Warn passing SSE
	vector argument without SSE enabled changes the ABI.

2012-05-21  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/53408
	* tree-vect-loop.c (vectorizable_induction): Properly check
	the restriction that we cannot handle induction results from
	the inner loop outside of the outer loop.

2012-05-21  H.J. Lu  <hongjiu.lu@intel.com>

	PR target/53416
	* config/i386/i386.md (UNSPEC_RDRAND): Renamed to ...
	(UNSPECV_RDRAND): This.
	(rdrand<mode>_1): Updated.

2012-05-21  Richard Guenther  <rguenther@suse.de>

	* tree-loop-distribution.c (can_generate_builtin): Reject
	volatile stmts.

2012-05-21  Chung-Lin Tang  <cltang@codesourcery.com>

	* Makefile.in (options.c): Add options.h to included header
	files, before tm.h.

2012-05-21  Razya Ladelsky  <razya@il.ibm.com>

	* tree-parloops.c : Add myself to contributors, update
	TODO list, add link to wiki.

2012-05-21  Alan Modra  <amodra@gmail.com>

	* config/rs6000/predicates.md (input_operand): Don't match
	constant pool addresses.  Remove label_ref, high and plus from
	match_code list.  Remove redundant CONSTANT_P test.
	(splat_input_operand): Similarly update match_code list.
	(small_toc_ref): New predicate.
	* config/rs6000/rs6000-protos.h (toc_relative_expr_p): Update prototype.
	* config/rs6000/rs6000.c (tocrel_base, tocrel_offset): Make const.
	(legitimate_constant_pool_address_p): Move TARGET_TOC test and
	register checks to..
	(toc_relative_expr_p): ..here.  Add "strict" param.  Match new rtl
	generated by create_TOC_reference.
	(rs6000_legitimize_address): Update cerate_TOC_reference call.
	(rs6000_delegitimize_address): Handle new rtl for toc refs.
	(rs6000_cannot_force_const_mem, rs6000_find_base_term): Likewise.
	(use_toc_relative_ref): New function, split out from..
	(rs6000_emit_move): ..here.  Remove redundant tests.  Update
	create_TOC_reference calls.
	(rs6000_legitimize_reload_address): Formatting.  Handle splitting
	of medium/large model toc addresses.  Use use_toc_relative_ref.
	(print_operand): Formatting, style.  Adjust for toc changes.
	(print_operand_address): Likewise.
	(rs6000_output_addr_const_extra): Likewise.
	(create_TOC_reference): Put TOC_REGISTER in UNSPEC_TOCREL rather
	than a PLUS.  Use this formulation for both high and low part
	of -mcmodel=medium/large toc reference too.  Before reload,
	always use the small model formulation.
	* config/rs6000/rs6000.md (tls_gd, tls_gd_high): Similarly avoid
	a PLUS in high part of addresses here.
	(tls_ld, tls_ld_high, tls_got_dtprel, tls_got_dtprel_high): Likewise.
	(tls_got_tprel, tls_got_tprel_high, largetoc_high): Likewise.
	(largetoc_high, largetoc_low): Move earlier.  Cope when no
	base reg available.
	(largetoc_high_plus): New insn.
	(movsi_internal1, movsi_internal1_single, movsf_softfloat,
	movdi_mfpgpr, movdi_internal64): Don't handle 'R' constraint here..
	(tocref): ..instead do so here, new insn and split.

2012-05-20  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/driver-i386.c (host_detect_local_cpu): Support
	RDRND, F16C and FSGSBASE.

2012-05-20  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>

	PR rtl-optimzation/53373
	* config/pa/pa.md (call_symref_pic): Don't expose PIC register save in
	call pattern.  Update split patterns.
	(call_symref_64bit, call_reg_pic, call_reg_64bit, call_val_symref_pic,
	call_val_symref_64bit, call_val_reg_pic, call_val_reg_64bit): Likewise.

2012-05-20  Razya Ladelsky  <razya@il.ibm.com>

	* tree-parloops.c (gen_parallel_loop): Change many_iterations_cond
	for outer loops.

2012-05-18  Jan Hubicka  <jh@suse.cz>

	* cgraphunit.c (handle_alias_pairs): Declare; free alias_pairs
	(cgraph_process_new_functions): Process also aliases.
	* lto-streamer-out.c (struct sets): Remove.
	(trivally_defined_alias): Remove.
	(output_alias_pair_p): Remove.
	(output_unreferenced_globals): Remove.
	(produce_symtab); Do not handle alias pairs.
	(produce_asm_for_decls): Likewise.
	* lto-streamer-in.c (input_alias_pairs): Remove.
	(lto_read_body): Do not input alias pairs.
	(lto_input_constructors_and_inits): Remove.

2012-05-18  Jan Hubicka  <jh@suse.cz>

	* cgraphunit.c (handle_alias_pairs): Cleanup; handle all types of
	aliases.

2012-05-18  Jan Hubicka  <jh@suse.cz>

	* cgraphbuild.c (record_reference): Update.
	* lto-cgraph.c (lto_output_varpool_node): External vars
	are not in other partition even if they are not output
	in current partition.
	* gimple-fold.c (can_refer_decl_in_current_unit_p): Take FROM_DECL
	argument; fix.
	(canonicalize_constructor_val): Take FROM_DECL argument.
	(fold_ctor_reference, fold_string_cst_ctor_reference,
	fold_array_ctor_reference, fold_nonarray_ctor_reference,
	fold_ctor_reference): Likewise.
	(fold_const_aggregate_ref_1, gimple_get_virt_method_for_binfo): Update.
	* gimple.h (gimple_fold_builtin): Likewise.

2012-05-18  Olivier Hainque  <hainque@adacore.com>

	* Makefile.in (FLAGS_TO_PASS): Pass $(libexecsubdir) instead of
	$(libsubdir) as libexecsubdir.

2012-05-18  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>

	* config/rs6000/rs6000.c (print_operand): Revise code that unsafely
	relied on signed overflow behavior.

2012-05-18  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/53346
	* tree-loop-distribution.c (ldist_gen): Make sure to apply
	builtin transform even when only a single partition with
	all reads/writes exists.

2012-05-18  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/53390
	* tree-vect-data-refs.c (vect_compute_data_ref_alignment): Ignore
	strided loads.

2012-05-18  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>

	* tree-ssa-reassoc.c (bip_map): Remove decl.
	(completely_remove_stmt): Remove function.
	(remove_def_if_absorbed_call): Remove function.
	(remove_visited_stmt_chain): Remove __builtin_powi handling.
	(possibly_move_powi): Remove function.
	(rewrite_expr_tree): Remove calls to possibly_move_powi.
	(rewrite_expr_tree_parallel): Likewise.
	(attempt_builtin_powi): Build multiplies explicitly rather than
	relying on the ops vector and rank system.
	(transform_stmt_to_copy): New function.
	(transform_stmt_to_multiply): Likewise.
	(reassociate_bb): Handle leftover operations after __builtin_powi
	optimization; build a final multiply if necessary.

2012-05-18  Jan Hubicka  <jh@suse.cz>

	* cgraphunit.c (varpool_finalize_decl): Allow external decls.
	(mark_functions_to_output): Fix sanity check.
	* ipa.c (function_and_variable_visibility): Remove TREE_STATIC check.

2012-05-18  Richard Guenther  <rguenther@suse.de>

	* tree-flow.h (mark_symbols_for_renaming): Remove.
	* tree-dfa.c (mark_symbols_for_renaming): Likewise.
	* tree-inline.c (copy_edges_for_bb): Do not mark symbols for renaming.
	(copy_debug_stmt): Likewise.
	(expand_call_inline): Likewise.
	(declare_return_variable): Mark the return variable for renaming
	if necessary.

2012-05-18  Andrew Stubbs  <ams@codesourcery.com>

	* config/arm/arm-protos.h (arm_emit_coreregs_64bit_shift): New
	prototype.
	* config/arm/arm.c (arm_emit_coreregs_64bit_shift): New function.
	* config/arm/arm.md (ashldi3): Use arm_emit_coreregs_64bit_shift.
	(ashrdi3,lshrdi3): Likewise.
	(arm_cond_branch): Remove '*' to enable gen_arm_cond_branch.

2012-05-18  Meador Inge  <meadori@codesourcery.com>

	PR rtl-optimization/53352
	* cse.c (equiv_constant): Ignore paradoxical subregs.

2012-05-17  Steven Bosscher  <steven@gcc.gnu.org>

	PR rtl-optimization/53125
	* regstat.c (regstat_bb_compute_ri): Take new local_live_last_luid
	argument.  Simplify calculation of REG_LIVE_LENGTH for regnos that
	die in the basic block.  Correctly top off REG_FREQ and
	REG_FREQ_CALLS_CROSSED.
	Remove do_not_gen.
	(regstat_compute_ri): Allocate and free local_live_last_luid.
	Remove do_not_gen.
	(regstat_bb_compute_calls_crossed): Correctly top off
	REG_FREQ_CALLS_CROSSED.

2012-05-17  Jan Hubicka  <jh@suse.cz>

	* lto-symtab.c (lto_symtab_resolve_symbols): Preffer decl with
	constructor over decl without.
	* cgraph.c (cgraph_remove_node): Clear also body of unanalyzed nodes.
	* cgraph.h (varpool_can_remove_if_no_refs): Handle external correctly.
	* cgraphunit.c (process_function_and_variable_attributes): Finalize
	extrnal decls.
	(mark_functions_to_output): Also accept bodies for functions with
	clones.
	(output_in_order): Skip external vars.
	* lto-cgraph.c (lto_output_node): External functions are never in other
	partition.
	(lto_output_varpool_node): Likewise.
	* lto-streamer-out.c (lto_write_tree): Always use error_mark_nodes for
	forgotten initializers.
	* ipa.c (process_references): Handle external vars.
	(symtab_remove_unreachable_nodes): Update to handle external vars.
	(varpool_externally_visible_p): External vars are externally visible.
	* gimple-fold.c (can_refer_decl_in_current_unit_p): Update.
	* varpool.c (varpool_remove_node): Remove constructor.
	(decide_is_variable_needed): Handle externals.
	(varpool_remove_unreferenced_decls): Likewise.

2012-05-17  Manuel López-Ibáñez  <manu@gcc.gnu.org>

	* opts.c (common_handle_option): -pedantic-errors enables -Wpedantic.
	(enable_warning_as_error): Do not special case Wuninitialized.
	* optc-gen.awk: Add sanity checks.

2012-05-17  Jan Hubicka  <jh@suse.cz>

	* ipa-reference.c (is_proper_for_analysis): Do not check flags
	that might change as result of global optimization.
	(analyze_function): Do not check analyzed and externally_visible
	flags; be happy about address dereferences.
	(propagate): Prune all_module_statics so it really contains just
	statics; prune all the local summaries.
	(ipa_reference_write_optimization_summary): Simplify.

2012-05-17  Kwok Cheung Yeung  <kcy@codesourcery.com>

	* config/m68k/m68k-devices.def: Add 51ag, 51je, 51jf, 51jg, 51mm, 51qm.
	* config/m68k/m68k-tables.opt: Regenerated.
	* doc/invoke.texi (M680x0 Options): Document.

2012-05-16  Dave Boutcher  <daveboutcher@gmail.com>
	    Patrick Marlier  <patrick.marlier@gmail.com>

	* trans-mem.c (ipa_tm_transform_clone): Transform functions with
	indirect calls.

2012-05-16  H.J. Lu  <hongjiu.lu@intel.com>

	* configure: Regenerated.

2012-05-16  Andrew Pinski  <apinski@cavium.com>

	* gimple-fold.c (get_maxval_strlen): Move COND_EXPR handling under
	GIMPLE_ASSIGN.

2012-05-16  David S. Miller  <davem@davemloft.net>

	* jump.c (delete_related_insns): If we remove a CALL, make sure
	we delete it's NOTE_INSN_CALL_ARG_LOCATION note too.

2012-05-16  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>

	PR tree-optimization/53217
	* tree-ssa-reassoc.c (bip_map): New static variable.
	(possibly_move_powi): Move feeding multiplies with __builtin_powi call.
	(attempt_builtin_powi): Save feeding multiplies on a stack.
	(reassociate_bb): Create and destroy bip_map.

2012-05-16  Olivier Hainque  <hainque@adacore.com>

	* Makefile.in (install-no-fixedincludes): New target, former toplevel
	gcc-no-fixedincludes. Stash "include-fixed" in addition to "include".
	Add comments and improve stamp preservation across the whole sequence.
	(stmp-int-hdrs): Use move-if-change + cp -p to setup fix_dir/limits.h.

2012-05-16  Richard Guenther  <rguenther@suse.de>

	* tree-inline.c (insert_init_stmt): Do not call
	mark_symbols_for_renaming.
	(setup_one_parameter): Avoid initializing unused parameters.
	(declare_return_variable): Properly handle DECL_BY_REFERENCE
	return vars in SSA form.

2012-05-16  Richard Guenther  <rguenther@suse.de>

	* tree-flow.h (get_virtual_var): Remove.
	* tree-dfa.c (get_virtual_var): Likewise.

2012-05-16  Richard Guenther  <rguenther@suse.de>

	* tree-vect-loop-manip.c (slpeel_update_phi_nodes_for_guard1):
	Remove set-only bitmap of new names.
	(slpeel_tree_peel_loop_to_edge): Likewise.  Do not set
	CFG hooks.
	* tree-flow.h (ssa_names_to_replace): Remove.
	* tree-into-ssa.c (ssa_names_to_replace): Likewise.

2012-05-16  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/53364
	* tree-ssa-alias.c (indirect_ref_may_alias_decl_p): Properly
	detect a view-conversion of the decl.

2012-05-16  Dodji Seketeli  <dodji@redhat.com>

	PR preprocessor/7263
	* c-tree.h (enum c_declspec_word): Declare new enum.
	(struct c_declspecs::locations): New member.
	(declspecs_add_qual, declspecs_add_scspec)
	(declspecs_add_addrspace, declspecs_add_alignas): Take a new
	location parameter.
	* c-decl.c (build_null_declspecs): Initialize the new struct
	c_declspecs::locations member.
	(declspecs_add_addrspace): Take a location parameter for the
	address space.  Store it onto declaration specifiers.
	(declspecs_add_qual): Likewise, take a location parameter for the
	qualifier.
	(declspecs_add_type): Likewise, take a location parameter for the
	type specifier.
	(declspecs_add_scspec): Likewise, take a location parameter for
	the storage class specifier.
	(declspecs_add_attrs): Likewise, take a location parameter for the
	first attribute.
	(declspecs_add_alignas): Likewise, take a location parameter for
	the alignas token.
	(finish_declspecs): For diagnostics, use the location of the
	relevant declspec, instead of the global input_location.
	* c-parser.c (c_parser_parameter_declaration): Pass the precise
	virtual location of the declspec to the declspecs-setters.
	(c_parser_declspecs): Likewise.  Avoid calling c_parser_peek_token
	repeatedly.

2012-05-16  Igor Zamyatin  <igor.zamyatin@intel.com>

	* configure.ac: Stack protector enabling for Android targets.
	* configure: Regenerate.

2012-05-16  Richard Sandiford  <r.sandiford@uk.ibm.com>

	* ira.c (pseudo_move_insn): Delete.
	(find_moveable_pseudos): Don't set it.
	(move_unallocated_pseudos): Use DF_REG_DEF_CHAIN to find
	the definitions of the original pseudo.  Delete all of them.

2012-05-16  Olivier Hainque  <hainque@adacore.com>

	* config/rs6000/rs6000-opts.h (enum processor_type): Add
	PROCESSOR_PPC8548.
	* config/rs6000/rs6000-cpus.def: Reference it for cpu="8548".
	* config/rs6000/rs6000.md (cpu attribute definition): Add ppc8548.
	* config/rs6000/8540.md: indicate that the units/patterns apply to
	ppc8548 as well.

	* config/rs6000/rs6000.c (rs6000_option_override_internal): Rename
	default_cpu into implicit_cpu, conveying what --with-cpu was passed at
	configure time. Treat implicit_cpu as have_CPU. Pick defaults for SPE
	related flags,	check that what is queried is supported by the selected
	configuration. Rework the single/double_float and MASK_STRING resets to
	hit for all the E500 cores (854x + E500MC variants). Select the ppc8540
	costs for PROCESSOR_PPC8548 as well.
	(rs6000_issue_rate): case CPU_PPC8548 together with CPU_PPC8540.
	(rs6000_use_sched_lookahead): Likewise, rewriting function as a case
	statement instead of a sequence of ifs.

	* config/rs6000/rs6000.h (TARGET_E500): Remove.
	(TARGET_NO_LWSYNC): Adjust accordingly.
	* config/rs6000/e500.h (TARGET_E500): Remove.
	(CHECK_E500_OPTIONS): Adjust accordingly.
	* config/rs6000/eabispe.h (SUBSUBTARGET_OVERRIDE_OPTIONS): Remove.
	(TARGET_DEFAULT): Reformat definition to match the one in linuxspe.h.
	* config/rs6000/linuxspe.h: Likewise.
	* config/rs6000/vxworks.h: Remove bogus TARGET_E500 overrides and
	superfluous comments.
	* config/rs6000/e500-double.h: Remove.

	* config.gcc (pick a default with_cpu): For powerpc*-*-*spe*,
	default to with_cpu=8548 if --enable-e500-double, and to 8540
	otherwise.
	(set misc flags section): For powerpc*|rs6000*, remove inclusion
	of e500-double.h for --enable-e500-double.

2012-05-16  Olivier Hainque  <hainque@adacore.com>

	* Makefile.in (s-header-vars): Resort to -n instead of trailing
	-e d in sed invocation.

2012-05-16  Hans-Peter Nilsson  <hp@axis.com>

	* doc/tm.texi.in (Type Layout) <SIZE_TYPE>: Update reference to
	source-code.
	* doc/tm.texi: Regenerate.

2012-05-15  Paolo Carlini  <paolo.carlini@oracle.com>

	* tree.h (EXPR_LOCATION): Use CAN_HAVE_LOCATION_P.

2012-05-15  Jakub Jelinek  <jakub@redhat.com>

	PR target/53358
	* config/i386/i386.md (*addqi_2 peephole with QImode addition): Check
	that operands[2] is either immediate, or q_regs_operand.

2012-05-15  Richard Guenther  <rguenther@suse.de>

	* cgraphunit.c (thunk_adjust): Use make_rename_temp.
	(assemble_thunk): Likewise.  Manually rename and register
	function arguments.

2012-05-15  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/53355
	* tree-vrp.c (extract_range_from_binary_expr_1): Handle LSHIFT_EXPRs
	by constants.

2012-05-15  Tristan Gingold  <gingold@adacore.com>

	* tree-ssa-strlen.c (get_string_length): Convert lhs if needed.

2012-05-15  Richard Guenther  <rguenther@suse.de>

	* gimple.c (gimple_set_modified): Move ...
	* gimple.h (gimple_set_modified): ... here.

2012-05-15  Tristan Gingold  <gingold@adacore.com>

	* ira-color.c (move_spill_restore): Add a guard.

2012-05-15  Tristan Gingold  <gingold@adacore.com>

	* config/ia64/ia64.c (ia64_emit_probe_stack_range): Adjust calls to
	plus_constant.

2012-05-15  Eric Botcazou  <ebotcazou@adacore.com>

	* gimplify.c (gimplify_init_constructor): Do a block move for very
	small objects as well.

2012-05-15  Bernd Schmidt  <bernds@codesourcery.com>

	* ira.c (find_moveable_pseudos): Skip registers whose
	DF_REG_EQ_USE_COUNT is nonzero.

2012-05-15  Kenneth Zadeck  <zadeck@naturalbridge.com>

	* doc/md.texi (fma): Define to only be applicable for single rounding.

2012-05-14  Uros Bizjak  <ubizjak@gmail.com>

	PR target/46098
	* config/i386/i386.c (ix86_expand_special_args_builtin): Always
	generate target register for "load" class builtins.

	Revert:
	2010-10-22  Uros Bizjak  <ubizjak@gmail.com>

	PR target/46098
	* config/i386/sse.md (*avx_movu<ssemodesuffix><avxmodesuffix>):
	Rename from avx_movu<ssemodesuffix><avxmodesuffix>.
	(avx_movu<ssemodesuffix><avxmodesuffix>): New expander.
	(*<sse>_movu<ssemodesuffix>): Rename from <sse>_movu<ssemodesuffix>.
	(<sse>_movu<ssemodesuffix>): New expander.
	(*avx_movdqu<avxmodesuffix>): Rename from avx_movdqu<avxmodesuffix>.
	(avx_movdqu<avxmodesuffix>): New expander.
	(*sse2_movdqu): Rename from sse2_movdqu.
	(sse2_movdqu): New expander.

2012-05-14  Marc Glisse  <marc.glisse@inria.fr>

	PR target/52607
	* config/i386/i386.c (ix86_expand_vec_perm_const): Move code to ...
	(canonicalize_perm): ... new function.
	(expand_vec_perm_2vperm2f128_vshuf): New function.
	(ix86_expand_vec_perm_const_1): Call it.

2012-05-14  Andrew Pinski  <apinski@cavium.com>
	    H.J. Lu  <hongjiu.lu@intel.com>
	    Jakub Jelinek  <jakub@redhat.com>

	PR target/53315
	* config/i386/i386.md (xbegin_1): Use + in constraint and match_dup.
	(xbegin): Updated.

2012-05-14  Jakub Jelinek  <jakub@redhat.com>

	* dwarf2out.c (dwarf2out_define, dwarf2out_undef): Treat
	lineno 1 the same as lineno 0 before first start file directive.
	(optimize_macinfo_range): Likewise.

	* dwarf2out.c (have_macinfo): Define.
	(dwarf2out_finish): Don't emit DW_AT_GNU_macros or DW_AT_macro_info
	attribute, don't force empty compilation unit and don't emit any
	.debug_macinfo/.debug_macro section if macinfo_table is empty.

2012-05-14  Georg-Johann Lay  <avr@gjlay.de>

	PR target/53344
	* config/avr/avr.c (avr_const_address_lo16): Remove.
	(avr_assemble_integer):  Print ".byte lo8(x)",
	".byte hi8(x)", ".byte hh8(x)" instead of emit an assembler
	.warning if 3-byte address is assembled.
	* doc/extend.texi (AVR Named Address Spaces): Document that
	binutils 2.23 is needed to assemble 3-byte addresses.

2012-05-14  Richard Guenther  <rguenther@suse.de>

	* tree-vect-data-refs.c (vect_setup_realignment): Remove
	call to mark_symbols_for_renaming.
	(vect_permute_load_chain): Likewise.
	* tree-vect-loop.c (vect_is_slp_reduction): Update stmt
	instead of calling mark_symbols_for_renaming.
	* tree-vect-stmts.c (read_vector_array): Remove call to
	mark_symbols_for_renaming.
	(write_vector_array): Likewise.
	(vectorizable_call): Likewise.
	(vectorizable_store): Likewise.
	(vectorizable_load): Likewise.
	* matrix-reorg.c (transform_allocation_sites): Likewise.
	* tree-ssa-pre.c (create_expression_by_pieces): Likewise.
	(create_expression_by_pieces): Likewise.

2012-05-14  Richard Guenther  <rguenther@suse.de>

	* gimplify.c (gimple_regimplify_operands): Only mark the LHS
	of statements for renaming.
	(force_gimple_operand_1): Likewise, consistently for both
	calls to force_gimple_operand and force_gimple_operand_gsi.

2012-05-14  Richard Guenther  <rguenther@suse.de>

	* tree-dfa.c (make_rename_temp): Be forgiving if not in SSA form.
	* omp-low.c (expand_omp_taskreg): Properly conditionalize call
	to update_ssa.
	(expand_omp_for): Likewise.
	(expand_omp_for_generic): Adjust conditional add to referenced vars.
	Use make_rename_temp for temporaries that should be rewritten into
	SSA form.
	(expand_omp_for_static_nochunk): Likewise.
	(expand_omp_atomic_pipeline): Likewise.

2012-05-14  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/53331
	* tree-vect-data-refs.c (vect_verify_datarefs_alignment): Ignore
	strided loads.
	* tree-vect-stmts.c (vect_model_load_cost): Handle strided loads.

2012-05-14  Manuel López-Ibáñez  <manu@gcc.gnu.org>

	PR 53063
	* doc/options.texi: (LangEnabledBy): Document it.
	* optc-gen.awk: Handle LangEnabledBy.
	* opth-gen.awk: Generate declaration for lang-specific functions.
	* opt-read.awk: Record lang numbers.
	* opt-functions.awk (flag_set_p): Ignore the arguments of flags.
	(lang_sanitized_name): New.

2012-05-14  Bernd Schmidt  <bernds@codesourcery.com>

	* attribs.c (decl_attributes): Avoid emitting a warning if
	ATTR_FLAG_BUILT_IN.
	* doc/rtl.texi (CALL_INSN_FUNCTION_USAGE): Use lowercase for rtx
	codes.  Document meaning of sets inside CALL_INSN_FUNCTION_USAGE.
	* builtin-attrs.def (DEF_ATTR_FOR_STRING): Define.  Use it to
	define a string "1".
	(ATTR_RET1_NOTHROW_NONNULL_LEAF): New attr definition.
	* builtins.def (BUILT_IN_MEMCPY, BUILT_IN_MEMMOVE, BUILT_IN_MEMSET,
	BUILT_IN_STRCPY): Use it for these functions.
	* postreload.c (reload_combine): Deal with SETs inside
	CALL_INSN_FUNCTION_USAGE.
	* caller-save.c (setup_save_areas, save_call_clobbered_regs):
	Look for REG_RETURNED notes and use a cheap restore if possible.
	* ira-int.h (struct ira_allocno): New member cheap_calls_crossed_num.
	(ALLOCNO_CHEAP_CALLS_CROSSED_NUM): New macro.
	* ira-build.c (ira_create_allocno, create_cap_allocno,
	propagate_allocno_info, propagate_some_info_from_allocno,
	copy_info_to_removed_store_destination, ira_flattening): Handle it.
	* ira-lives.c (pseudo_regno_single_word_and_live_p,
	find_call_crossed_cheap_reg): New static functions.
	(process_bb_node_lives): Look for SETs in CALL_INSN_FUNCTION_USAGE,
	and set ALLOCNO_CHEAP_CALLS_CROSSED_NUM if possible.  Also make
	a REG_RETURNED note in that case.
	* ira.c (setup_reg_renumber): Change assert to allow cases where
	allocnos only cross calls for which they are cheap to restore.
	* ira-costs.c (ira_tune_allocno_costs): Compare
	ALLOCNO_CALLS_CROSSED_NUM to ALLOCNO_CHEAP_CALLS_CROSSED_NUM rather
	than 0.
	* reg-notes.def (REG_RETURNED): New note.
	* cse.c (cse_insn): Likewise.
	* sched-deps.c (sched_analyze_insn): Likewise.
	* expr.c (init_block_move_fn): Set a "fn spec" attribute.
	* calls.c (decl_return_flags): New static function.
	(expand_call): Generate a SET in CALL_INSN_FUNCTION_USAGE for
	functions that return one of their arguments.
	* regcprop.c (struct kill_set_value_data): New.
	(kill_set_value): Interpret data as a pointer to such a struct.
	Do nothing if the caller wants the register to be ignored.
	(copyprop_hardreg_forward_1): Handle SETs in CALL_INSN_FUNCTION_USAGE.

2012-05-14  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/53340
	* tree-ssa-pre.c (op_valid_in_sets): Fix error in last commit.

2012-05-14  Richard Guenther  <rguenther@suse.de>

	* gimplify.c (gimplify_expr): Remove odd code.

2012-05-14  Eric Botcazou  <ebotcazou@adacore.com>

	* stor-layout.c (bit_from_pos): Distribute conversion to bitsizetype
	into a PLUS_EXPR byte offset.

	* tree-ssa-pre.c (can_value_number_call): Delete.
	(compute_avail): Skip all statements with side effects.
	<GIMPLE_CALL>: Skip calls to internal functions.

2012-05-13  Steven Bosscher  <steven@gcc.gnu.org>

	* config/pa/pa.md: Use define_c_enum for "unspec" and "unspecv".

2012-05-13  Manuel López-Ibáñez  <manu@gcc.gnu.org>

	* common.opt (Wtype-limits): Use EnabledBy.

2012-05-13  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.md (*pushtf): Enable for TARGET_SSE.
	(pushtf splitter): Ditto.
	(movtf): Ditto.
	(*movtf_internal): Ditto. Use V4SFmode for !TARGET_SSE2.
	(<code>tf2): Enable for TARGET_SSE.
	(*absnegtf2_sse): Ditto.
	(copysign<mode>3): Enable TFmode for TARGET_SSE.
	(copysign<mode>3_const): Ditto.
	(copysign<mode>3_var): Ditto.
	* config/i386/sse.md (<code>tf3): Enable for TARGET_SSE.
	(*andnottf3): Ditto.  Use V4SFmode for !TARGET_SSE2.
	(*<code>tf3): Ditto.
	* config/i386/i386.c (struct builtin_description bdesc_args)
	<IX86_BUILTIN_FABSQ>: Enable for TARGET_SSE.
	<IX86_BUILTIN_COPYSIGNQ>: Ditto.
	(ix86_expand_builtin) <IX86_BUILTIN_FABSQ, IX86_BUILTIN_COPYSIGNQ>:
	Emit a normal call if SSE isn't available.

2012-05-13  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/sse.md (<sse>_andnot<mode>3): Handle
	TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL.
	(<code><mode>3): Ditto.
	(*andnot<mode>3): Ditto.
	(*andnottf3): Ditto.
	(*<code><mode>3): Ditto.
	(<code>tf3): Ditto.

2012-05-13  Manuel López-Ibáñez  <manu@gcc.gnu.org>

	* optc-gen.awk: Error instead of warning for conflicting help.

2012-05-12  Jason Merrill  <jason@redhat.com>

	PR debug/53235
	* dwarf2out.c (build_local_stub): Prefer DW_AT_signature for
	comdat types.

2012-05-12  Eric Botcazou  <ebotcazou@adacore.com>

	* function.c (requires_stack_frame_p): If the function can throw
	non-call exceptions, return true if the insn can throw internally.

2012-05-12  Paolo Carlini  <paolo.carlini@oracle.com>

	* doc/generic.texi: Rename TYPE_PTRMEM_P to TYPE_PTRDATAMEM_P.

2012-05-12  Uros Bizjak  <ubizjak@gmail.com>

	* config/alpha/alpha.c (alpha_emit_conditional_branch): Handle
	ORDERED and UNORDERED conditions.

2012-05-11  Richard Guenther  <rguenther@suse.de>

	* tree-flow.h (referenced_var_check_and_insert): Remove.
	(find_new_referenced_vars): Likewise.
	* tree-dfa.c (referenced_var_check_and_insert): Make static.
	(find_new_referenced_vars_1, find_new_referenced_vars): Remove.
	* tree-inline.c (copy_bb): Use find_referenced_vars_in
	instead of find_new_referenced_vars.
	* gimple-fold.c (gimplify_and_update_call_from_tree): Likewise.

2012-05-11  Richard Guenther  <rguenther@suse.de>

	* tree-pass.h (pass_rest_of_compilation,
	pass_all_optimizations, pass_postreload, pass_all_early_optimizations):
	Remove.
	* passes.c (pass_all_optimizations, pass_postreload,
	pass_all_early_optimizations): Make static.
	(pass_rest_of_compilation): Likewise.  Make it an RTL_PASS.
	* tree-phinodes.c (init_phinodes, fini_phinodes): Remove.
	* tree-ssa.c (init_tree_ssa): Do not call init_phinodes.
	(delete_tree_ssa): Do not call fini_phinodes.
	* tree-flow.h (init_phinodes, fini_phinodes): Remove.

2012-05-11  Manuel López-Ibáñez  <manu@gcc.gnu.org>

	PR 53063
	* doc/options.texi (EnabledBy): Document
	* opts.c: Include opts.h and options.h before tm.h.
	(finish_options): Do not handle some sub-options here...
	(common_handle_option): ... instead call common_handle_option_auto
	here.
	* optc-gen.awk: Handle EnabledBy.
	* opth-gen.awk: Declare common_handle_option_auto.
	* common.opt (Wuninitialized): Use EnabledBy. Delete Init.
	(Wmaybe-uninitialized): Likewise.
	(Wunused-but-set-variable): Likewise.
	(Wunused-function): Likewise.
	(Wunused-label): Likewise.
	(Wunused-value): Likewise.
	(Wunused-variable): Likewise.
	* opt-read.awk: Create opt_numbers array.

2012-05-11  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/53295
	* tree-data-ref.h (stride_of_unit_type_p): Handle non-constant
	strides.
	* tree-data-ref.c (dr_analyze_innermost): Allow non-constant
	strides when analyzing data-references in a loop context.
	* tree-vect-data-refs.c (vect_mark_for_runtime_alias_test): Reject
	non-constant strides for now.
	(vect_enhance_data_refs_alignment): Ignore data references
	that are strided loads.
	(vect_analyze_data_ref_access): Handle non-constant strides.
	(vect_check_strided_load): Verify the data-reference is a load.
	(vect_analyze_data_refs): Restructure to make strided load
	support not dependent on gather support.
	* tree-vect-stmts.c (vectorizable_load): Avoid useless work
	when doing strided or gather loads.
	* tree-vect-loop-manip.c (vect_vfa_segment_size): Use
	integer_zerop to compare stride with zero.

2012-05-11  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/driver-i386.c (host_detect_local_cpu): Support RTM.

2012-05-11  Jan Hubicka  <jh@suse.cz>

	PR bootstrap/53300
	* varpool.c (varpool_assemble_decl): Also output constat pool entries
	that output_constant_pool missed.

2012-05-11  Mingjie Xing  <mingjie.xing@gmail.com>

	* config/mips/t-vxworks: Change MUTLILIB_EXTRA_OPTS to
	MULTILIB_EXTRA_OPTS.

2012-05-11  Uros Bizjak  <ubizjak@gmail.com>

	PR target/53291
	* config/i386/i386.md (xtest): Use NE condition in ix86_expand_setcc.

2012-05-11  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.md (*movti_internal_rex64): Avoid MOVAPS size
	optimization for TARGET_AVX.
	(*movti_internal_sse): Ditto.
	(*movdi_internal_rex64): Handle TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL.
	(*movdi_internal): Ditto.
	(*movsi_internal): Ditto.
	(*movtf_internal): Avoid MOVAPS size optimization for TARGET_AVX.
	(*movdf_internal_rex64): Ditto.
	(*movfd_internal): Ditto.
	(*movsf_internal): Ditto.
	* config/i386/sse.md (mov<mode>): Handle TARGET_SSE_LOAD0_BY_PXOR.

2012-05-10  Eric Botcazou  <ebotcazou@adacore.com>

	* dwarf2out.c (add_byte_size_attribute) <RECORD_TYPE>: Handle variable
	reference as size attribute.

2012-05-10  Eric Botcazou  <ebotcazou@adacore.com>
	    Tristan Gingold  <gingold@adacore.com>

	* doc/md.texi (Standard Names): Document probe_stack_address.
	* explow.c (emit_stack_probe): Handle probe_stack_address.
	* config/ia64/ia64.md (UNSPECV_PROBE_STACK_ADDRESS): New constant.
	(UNSPECV_PROBE_STACK_RANGE): Likewise.
	(probe_stack_address): New insn.
	(probe_stack_range): Likewise.
	* config/ia64/ia64.c: Include common/common-target.h.
	(ia64_compute_frame_size): Mark r2 and r3 as used if static stack
	checking is enabled.
	(ia64_emit_probe_stack_range): New function.
	(output_probe_stack_range): Likewise.
	(ia64_expand_prologue): Invoke ia64_emit_probe_stack_range if static
	builtin stack checking is enabled.
	(rtx_needs_barrier) <UNSPEC_VOLATILE>: Handle UNSPECV_PROBE_STACK_RANGE
	and UNSPECV_PROBE_STACK_ADDRESS.
	(unknown_for_bundling_p): New predicate.
	(group_barrier_needed): Use important_for_bundling_p.
	(ia64_dfa_new_cycle): Use unknown_for_bundling_p.
	(issue_nops_and_insn): Likewise.
	(bundling): Likewise.
	(final_emit_insn_group_barriers): Likewise.
	* config/ia64/ia64-protos.h (output_probe_stack_range): Declare.
	* config/ia64/hpux.h (STACK_CHECK_STATIC_BUILTIN): Define.
	(STACK_CHECK_PROTECT): Likewise.
	* config/ia64/linux.h (STACK_CHECK_STATIC_BUILTIN): Likewise.

2012-05-10  Jan Hubicka  <jh@suse.cz>

	* ipa-inline.c (update_all_callee_keys): Remove.
	(inline_small_functions): Simplify priority updating.

2012-05-10  Jan Hubicka  <jh@suse.cz>

	* ipa.c (symtab_remove_unreachable_nodes): Fix marking of clones.

2012-05-10  Jan Hubicka  <jh@suse.cz>

	* cgraph.h (cgraph_remove_unreachable_nodes): Rename to ...
	(symtab_remove_unreachable_nodes): ... this one.
	* ipa-cp.c (ipcp_driver): Do not remove unreachable nodes.
	* cgraphunit.c (ipa_passes): Update.
	* cgraphclones.c (cgraph_materialize_all_clones): Update.
	* cgraph.c (cgraph_release_function_body): Only turn initial
	into error mark when initial was previously set.
	* ipa-inline.c (ipa_inline): Update.
	* ipa.c: Include ipa-inline.h
	(enqueue_cgraph_node, enqueue_varpool_node): Remove.
	(enqueue_node): New function.
	(process_references): Update.
	(symtab_remove_unreachable_nodes): Cleanup.
	* passes.c (execute_todo, execute_one_pass): Update.

2012-05-10  Vladimir Makarov  <vmakarov@redhat.com>

	PR rtl-optimization/53125
	* ira.c (ira): Call find_moveable_pseudos and
	move_unallocated_pseudos if only ira_conflicts_p is true.

2012-05-10  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.md (*movoi_internal_avx): Handle
	TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL and TARGET_SSE_TYPELESS_STORES.
	(*movti_internal_rex64): Handle TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL.
	(*movti_internal_sse): Ditto.
	(*movtf_internal): Ditto.
	* config/i386/sse.md (ssePSmode): New mode attribute.
	(*move<mode>_internal): Use ssePSmode.
	(*<sse>_movu<ssemodesuffix><avxsizesuffix>): Ditto.
	(*<sse2>_movdqu<avxsizesuffix>): Ditto.
	* config/i386/i386.c (standard_sse_constant_opcode): Do not handle
	TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL here.

2012-05-10  Eric Botcazou  <ebotcazou@adacore.com>

	* gimplify.c (gimplify_decl_expr): For a TYPE_DECL, also gimplify the
	DECL_ORIGINAL_TYPE if it is present.

2012-05-10  Nick Clifton  <nickc@redhat.com>

	PR target/53120
	* config/m32c/bitops.md (bset_qi): Change operand 2 from having
	a "0" constraint to being a (match_dup 0).

2012-05-10  Richard Guenther  <rguenther@suse.de>

	* stor-layout.c (byte_from_pos): Amend comment.

2012-05-10  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>

	* doc/extend.texi (X86 Built-in Functions, __builtin_cpu_init):
	Document requirement to call in constructors.

	* config/i386/i386.c: Update comments for i386-cpuinfo.c name change.

2012-05-10  Richard Guenther  <rguenther@suse.de>

	* tree.h (TYPE_IS_SIZETYPE): Remove.
	* fold-const.c (int_const_binop_1): Remove TYPE_IS_SIZETYPE use.
	(extract_muldiv_1): Likewise.
	* gimple.c (gtc_visit): Likewise.
	(gimple_types_compatible_p): Likewise.
	(iterative_hash_canonical_type): Likewise.
	(gimple_canonical_types_compatible_p): Likewise.
	* gimplify.c (gimplify_one_sizepos): Likewise.
	* print-tree.c (print_node): Likewise.
	* stor-layout.c (initialize_sizetypes): Do not set TYPE_IS_SIZETYPE.

2012-05-09  Uros Bizjak  <ubizjak@gmail.com>

	PR target/52908
	* config/i386/sse.md (vec_widen_smult_hi_v4si): Expand using
	xop_pmacsdqh insn pattern instead of xop_mulv2div2di3_high.
	(vec_widen_smult_lo_v4si): Expand using xop_pmacsdql insn pattern
	instead of xop_mulv2div2di3_low.
	(xop_p<macs>dql): Fix vec_select selector.
	(xop_p<macs>dqh): Ditto.
	(xop_mulv2div2di3_low): Remove insn_and_split pattern.
	(xop_mulv2div2di3_high): Ditto.

2012-05-09  Manuel López-Ibáñez  <manu@gcc.gnu.org>

	PR c++/53289
	* diagnostic.h (diagnostic_context): Add last_location.
	* diagnostic.c (diagnostic_initialize): Initialize it.
	(diagnostic_show_locus): Use it.

2012-05-09  Manuel López-Ibáñez  <manu@gcc.gnu.org>

	* doc/extend.texi (Function Attributes): Point xref to section
	about Pragmas.

2012-05-09  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.c (*movdf_internal_rex64): Remove
	TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL handling from asm output code.
	Calculate "mode" attribute according to
	TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL flag.
	(*movdf_internal): Ditto.

2012-05-09  Uros Bizjak  <ubizjak@gmail.com>

	PR target/44141
	* config/i386/i386.c (ix86_expand_vector_move_misalign): Do not handle
	128 bit vectors specially for TARGET_AVX.  Emit sse2_movupd and
	sse_movupd RTXes for TARGET_AVX, TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL
	or when optimizing for size.
	* config/i386/sse.md (*mov<mode>_internal): Remove
	TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL handling from asm output code.
	Calculate "mode" attribute according to optimize_function_for_size_p
	and TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL flag.
	(*<sse>_movu<ssemodesuffix><avxsizesuffix>): Choose asm template
	depending on the mode of the instruction.  Calculate "mode" attribute
	according to optimize_function_for_size_p, TARGET_SSE_TYPELESS_STORES
	and TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL flags.
	(*<sse2>_movdqu<avxsizesuffix>): Ditto.

2012-05-09  Georg-Johann Lay  <avr@gjlay.de>

	PR target/53256
	* config/avr/elf.h (ASM_DECLARE_FUNCTION_NAME): Remove.
	* config/avr/avr-protos.h (avr_asm_declare_function_name): Remove.
	* config/avr/avr.h (struct machine_function): Add attributes_checked_p.
	* config/avr/avr.c (avr_asm_declare_function_name): Remove.
	(expand_prologue): Move initialization of cfun->machine->is_naked,
	is_interrupt, is_signal, is_OS_task, is_OS_main from here to...
	(avr_set_current_function): ...this new static function.
	(TARGET_SET_CURRENT_FUNCTION): New define.
	(avr_function_ok_for_sibcall): Use cfun->machine->is_* instead of
	checking attributes of current_function_decl.
	(avr_regs_to_save): Ditto.
	(signal_function_p): Rename to avr_signal_function_p.
	(interrupt_function_p): Rename to avr_interrupt_function_p.

	* doc/extend.texi (Function Attributes): Better explanation of
	'interrupt' and 'signal' for AVR. Move 'ifunc' down to establish
	alphabetical order.

2012-05-09  Michael Matz  <matz@suse.de>

	PR tree-optimization/53185
	* tree-vect-data-refs.c (vect_enhance_data_refs_alignment): Disable
	peeling when we see strided loads.

2012-05-09  Matthias Klose  <doko@ubuntu.com>

	* gcc-ar.c (main): Don't check for execute bits for the plugin.

2012-05-09  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>

	* tree-ssa-loop-ivopts.c (add_autoinc_candidates, get_address_cost):
	Replace use of HAVE_{POST/PRE}_{INCREMENT/DECREMENT} with
	USE_{LOAD/STORE}_{PRE/POST}_{INCREMENT/DECREMENT} appropriately.
	* config/arm/arm.h (ARM_AUTOINC_VALID_FOR_MODE_P): New.
	(USE_LOAD_POST_INCREMENT): Define.
	(USE_LOAD_PRE_INCREMENT): Define.
	(USE_LOAD_POST_DECREMENT): Define.
	(USE_LOAD_PRE_DECREMENT): Define.
	(USE_STORE_PRE_DECREMENT): Define.
	(USE_STORE_PRE_INCREMENT): Define.
	(USE_STORE_POST_DECREMENT): Define.
	(USE_STORE_POST_INCREMENT): Define.
	(arm_auto_incmodes): Add enumeration.
	* config/arm/arm-protos.h (arm_autoinc_modes_ok_p): Declare.
	* config/arm/arm.c (arm_autoinc_modes_ok_p): Define.

2012-05-09  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/53226
	* tree-ssa-forwprop.c (ssa_forward_propagate_and_combine): Remove
	prev and prev_initialized vars, gimple_set_plf (stmt, GF_PLF_1, false)
	before processing it and gimple_set_plf (stmt, GF_PLF_1, true) if it
	doesn't need to be revisited, look for earliest stmt with
	!gimple_plf (stmt, GF_PLF_1) if something changed.

2012-05-09  Terry Guo  <terry.guo@arm.com>

	* genmultilib: Update copyright dates.
	* doc/fragments.texi: Ditto.

2012-05-09  Terry Guo  <terry.guo@arm.com>

	* Makefile.in (s-mlib): Add new argument MULTILIB_REQUIRED.
	* genmultilib (MULTILIB_REQUIRED): New.
	* doc/fragments.texi: Document the MULTILIB_REQUIRED.

2012-05-09  Richard Guenther  <rguenther@suse.de>

	* tree-vectorizer.h (vect_loop_versioning): Adjust prototype.
	(vect_do_peeling_for_loop_bound): Likewise.
	(vect_do_peeling_for_alignment): Likewise.
	* tree-vect-loop-manip.c (conservative_cost_threshold): Remove.
	(vect_do_peeling_for_loop_bound): Get check_profitability and
	threshold as parameters.
	(vect_do_peeling_for_alignment): Likewise.
	(vect_loop_versioning): Likewise.
	* tree-vect-loop.c (vect_transform_loop): Compute check_profitability
	and threshold here.  Control where to put the check here.

2012-05-09  Richard Sandiford  <rdsandiford@googlemail.com>

	PR middle-end/53249
	* dwarf2out.h (get_address_mode): Move declaration to...
	* rtl.h: ...here.
	* dwarf2out.c (get_address_mode): Move definition to...
	* rtlanal.c: ...here.
	* var-tracking.c (get_address_mode): Delete.
	* combine.c (find_split_point): Use get_address_mode instead of
	targetm.addr_space.address_mode.
	* cselib.c (cselib_record_sets): Likewise.
	* dse.c (canon_address, record_store): Likewise.
	* emit-rtl.c (adjust_address_1, offset_address): Likewise.
	* expr.c (move_by_pieces, emit_block_move_via_loop, store_by_pieces)
	(store_by_pieces_1, expand_assignment, store_expr, store_constructor)
	(expand_expr_real_1): Likewise.
	* ifcvt.c (noce_try_cmove_arith): Likewise.
	* optabs.c (maybe_legitimize_operand_same_code): Likewise.
	* reload.c (find_reloads): Likewise.
	* sched-deps.c (sched_analyze_1, sched_analyze_2): Likewise.
	* sel-sched-dump.c (debug_mem_addr_value): Likewise.

2012-05-09  Maciej W. Rozycki  <macro@codesourcery.com>

	* config/mips/mips.c (mips16_gp_pseudo_reg): Remove line
	information from the instruction produced.

2012-05-09  Richard Guenther  <rguenther@suse.de>

	* stor-layout.c (bit_from_pos): Document.
	(byte_from_pos): Likewise.  Optimize.
	(pos_from_bit): Likewise.
	(normalize_offset): Use pos_from_bit instead of replicating it.

2012-05-09  Alan Modra  <amodra@gmail.com>

	PR target/53271
	* config/rs6000/rs6000.c (gen_frame_set): New function.
	(gen_frame_load, gen_frame_store): New functions.
	(rs6000_savres_rtx): Use the above.
	(rs6000_emit_epilogue, rs6000_emit_prologue): Here too.
	Correct mode used for CR2 in save/restore_world patterns.
	Don't emit instructions for eh_return frame unwind reg info.

2012-05-08  Jan Hubicka  <jh@suse.cz>

	* cgraphbuild.c (build_cgraph_edges): Do not finalize vars
	with VALUE_EXPR.
	* cgraph.h (varpool_can_remove_if_no_refs): Vars with VALUE_EXPR
	are removable.
	* toplev.c (wrapup_global_declaration_2): Vars with VALUE_EXPR
	need to wrapup.
	(compile_file): Do not output variables.
	* cgraphbuild.c (varpool_finalize_decl): When var is finalized late,
	output it.
	* langhooks.c: Include timevar.h
	(write_global_declarations): Finalize compilation unit after wrapup;
	set timevars correctly.
	* passes.c (rest_of_decl_compilation): Decls with VALUE_EXPR needs
	not to be added to varpool.
	* varpool.c (varpool_assemble_decl): Sanity check that we are called
	only on cases where it makes sense; skip constant pool and value expr
	vars.

2012-05-08  David S. Miller  <davem@davemloft.net>

	* config/sparc/linux.h (LINK_SPEC): Don't pass "-Y" option.
	* config/sparc/linux64.h (LINK_ARCH32_SPEC): Likewise.
	* config/sparc/linux64.h (LINK_ARCH64_SPEC): Likewise.

2012-05-08  Richard Sandiford  <rdsandiford@googlemail.com>

	PR rtl-optimization/53278
	* lower-subreg.c (decompose_multiword_subregs): Remove left-over
	speed_p code from earlier patch.

2012-05-08  Oleg Endo  <olegendo@gcc.gnu.org>

	PR target/51244
	* config/sh/sh.md (*branch_true, *branch_false): New insns.

2012-05-08  Teresa Johnson  <tejohnson@google.com>

	* gcov-io.h (__gcov_reset, __gcov_dump): Declare.
	* doc/gcov.texi: Add note on using __gcov_reset and __gcov_dump.

2012-05-08  Jan Hubicka  <jh@suse.cz>

	* cgraph.c (cgraph_call_edge_duplication_hooks): Export.
	(cgraph_create_node_1): Rename to ...
	(cgraph_create_empty_node): ... this one; export.
	(cgraph_create_node): Update.
	(cgraph_set_call_stmt_including_clones): Move to cgraphclones.c
	(cgraph_create_edge_including_clones): Likewise.
	(cgraph_find_replacement_node): Likewise.
	(cgraph_clone_edge): Likewise.
	(cgraph_clone_node): Likewise.
	(clone_function_name): Likewise.
	(cgraph_create_virtual_clone): Likewise.
	(cgraph_remove_node_and_inline_clones): Likewise.
	(cgraph_redirect_edge_call_stmt_to_callee): Move here from cgraphunit.c
	* cgraph.h: Reorder declarations so they match file of origin.
	(cgraph_create_empty_node): Declare.
	* cgraphunit.c (update_call_expr): Move to cgraphclones.c
	(cgraph_copy_node_for_versioning): Likewise.
	(cgraph_function_versioning): Likewise.
	(cgraph_materialize_clone): Likewise.
	(cgraph_redirect_edge_call_stmt_to_callee): Likewise.
	(cgraph_materialize_all_clones): Likewise.
	* cgraphclones.c: New file.
	* Makefile.in: Update for cgraphclones.

2012-05-08  Uros Bizjak  <ubizjak@gmail.com>

	PR target/53176
	* config/i386/i386.c (ix86_set_reg_reg_cost): New function.
	(ix86_rtx_costs): Handle SET.

2012-05-08  Michael Matz  <matz@suse.de>

	* basic-block.h (struct rtl_bb_info): Remove visited member and
	move head_ member to ...
	(struct basic_block_def.basic_block_il_dependent): ... the new
	member x, replacing but containing old member rtl.
	(enum bb_flags): New BB_VISITED flag.
	(BB_HEADER, BB_FOOTER): New macros.

	* jump.c (mark_all_labels): Adjust.
	* cfgcleanup.c (try_optimize_cfg): Adjust.
	* cfglayout.c (record_effective_endpoints): Adjust.
	(relink_block_chain): Ditto (and don't fiddle with visited).
	(fixup_reorder_chain): Adjust.
	(fixup_fallthru_exit_predecessor): Ditto.
	(cfg_layout_duplicate_bb): Ditto.
	* combine.c (update_cfg_for_uncondjump): Adjust.
	* bb-reorder.c (struct bbro_basic_block_data_def): Add visited member.
	(bb_visited_trace): New accessor.
	(mark_bb_visited): Move in front.
	(rotate_loop): Use bb_visited_trace.
	(find_traces_1_round): Ditto.
	(emit_barrier_after): Ditto.
	(copy_bb): Ditto, and initialize visited on resize.
	(reorder_basic_blocks): Initize visited member.
	(duplicate_computed_gotos): Clear bb flags at start, use
	BB_VISITED flags.

	* cfgrtl.c (try_redirect_by_replacing_jump): Adjust.
	(rtl_verify_flow_info_1): Ditto.
	(cfg_layout_split_block): Ditto.
	(cfg_layout_delete_block): Ditto.
	(cfg_layout_merge_blocks): Ditto.
	(init_rtl_bb_info): Adjust and initialize il.x.head_ member.

2012-05-08  Hans-Peter Nilsson  <hp@axis.com>

	PR target/53272
	* config/cris/cris.c (cris_normal_notice_update_cc): For TARGET_V32,
	when a constant source operand matches an "I" constraint, the "no
	CC0 change" applies to a register-destination only, not a
	strict_low_part-destination.

2012-05-08  Richard Guenther  <rguenther@suse.de>

	* fold-const.c (fold_binary_loc): Fold (X * CST1) & CST2
	to zero or to (X * CST1) & CST2' when CST1 has trailing zeros.

2012-05-08  Georg-Johann Lay  <avr@gjlay.de>

	* Makefile.in (TEXI_GCC_FILES): Add avr-mmcu.texi.

	* doc/avr-mmcu.texi: New auto-generated file.
	* doc/invoke.texi (AVR Options): Include avr-mmcu.texi in order
	to document all valid -mmcu= arguments.

	* config/avr/avr.h (arch_info_s): New struct definition.
	* config/avr/avr-devices.c (avr_texinfo): New variable.
	* config/avr/gen-avr-mmcu-texi.c: New file.
	* config/avr/t-avr: New rules and dependencies to build	avr-mmcu.texi.

2012-05-08  Dehao Chen  <dehao@google.com>

	* predict.c (find_qualified_ssa_name): New.
	(find_ssa_name_in_expr): New.
	(find_ssa_name_in_assign_stmt): New.
	(is_comparison_with_loop_invariant_p): New.
	(is_bound_expr_similar): New.
	(predict_iv_comparison): New.
	(predict_loops): Add heuristic for loop-nested branches that compare an
	induction variable to a loop bound variable.
	* predict.def (PRED_LOOP_IV_COMPARE): New macro.

2012-05-08  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.c (has_dispatch): Use TARGET_BDVER1 and
	TARGET_BDVER2 defines where appropriate.

2012-05-07  Eric Botcazou  <ebotcazou@adacore.com>

	* configure.ac (PLUGIN_LD): Rename into...
	(PLUGIN_LD_SUFFIX): ...this and strip the target_alias triplet.
	* config.in: Regenerate.
	* configure: Likewise.
	* collect2.c (main): Set plugin_ld_suffix to PLUGIN_LD_SUFFIX.

2012-05-07  Eric Botcazou  <ebotcazou@adacore.com>

	* tree-dfa.c (get_ref_base_and_extent) <ARRAY_REF>: Do the offset
	computation using the precision of the index type.
	* gimple-fold.c (fold_const_aggregate_ref_1) <ARRAY_REF>: Likewise.
	(fold_array_ctor_reference): Do index computations in the index type.

2012-05-07  Georg-Johann Lay  <avr@gjlay.de>

	* config/avr/avr.c (avr_prologue_setup_frame): Fix mode passed
	down to plus_constant.
	(expand_epilogue): Ditto.

2012-05-07  Steven Bosscher  <steven@gcc.gnu.org>

	* postreload.c (reload_cse_regs): Make static.
	* reload.h (reload_cse_regs): Remove prototype.

2012-05-07  Richard Henderson  <rth@redhat.com>

	* config/alpha/alpha.md (clear_cache): New pattern.

2012-05-07  Steven Bosscher  <steven@gcc.gnu.org>

	PR middle-end/53245
	* gimplify.c (preprocess_case_label_vec_for_gimple): If low or high
	is folded to a type boundary value, verify that the resulting case
	label is still a care range.

2012-05-07  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.md (ctz<mode>2): Emit rep;bsf
	only for TARGET_GENERIC, when not optimizing for size.
	(*ffs<mode>_1): Ditto.

2012-05-07  Steven Bosscher  <steven@gcc.gnu.org>

	* tree-cfg.c (verify_gimple_switch): Tighten checks.

2012-05-07  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/53239
	* tree-vrp.c (get_value_range): Set VR of SSA_NAME_IS_DEFAULT_DEF
	of DECL_BY_REFERENCE RESULT_DECL to nonnull.

2012-05-07  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/53195
	* tree-inline.c (setup_one_parameter): Properly add referenced
	vars from the parameters new known value.

2012-05-07  Steven Bosscher  <steven@gcc.gnu.org>

	* config/m68k/m68k.c (m68k_sched_branch_type): Remove.
	(sched_branch_type): Remove.
	(m68k_sched_md_init_global): Don't allocate it.
	(m68k_sched_md_finish_global): Don't free it.
	* config/m68k/m68k.h (m68k_sched_branch_type): Remove prototype.
	* config/m68k/m68k.md: Set the type of insns using
	m68k_sched_branch_type to bcc directly.

2012-05-07  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>

	* config/sol2.c (solaris_override_options): New function.
	* config/sol2-protos.h (solaris_override_options): Declare.
	* config/sol2.h (SUBTARGET_OVERRIDE_OPTIONS): Define.

2012-05-07  Richard Guenther  <rguenther@suse.de>

	* tree-ssa-loop-prefetch.c (determine_loop_nest_reuse): Return
	whether we failed to compute data dependences.
	(loop_prefetch_arrays): Fail if we failed.

2012-05-07  Uros Bizjak  <ubizjak@gmail.com>
	    Paolo Bonzini  <bonzini@gnu.org>

	* config/i386/i386.md (ctz<mode>2): Emit rep;bsf even for !TARGET_BMI.
	Emit bsf when optimizing for size.
	(*ffs<mode>_1): Ditto.

2012-05-07  Oleg Endo  <olegendo@gcc.gnu.org>

	PR target/53250
	* config/sh/sh.c (sh_rtx_costs): Handle SET.

2012-05-06  Uros Bizjak  <ubizjak@gmail.com>

	PR target/53227
	* config/i386/i386.md (swap<mode>): Rename from *swap<mode>.
	(bswapdi2): Split from bswap<mode>2.  Use nonnimediate_operand
	predicate for operand 1.  Force operand 1 to register for TARGET_BSWAP.
	(bswapsi2): Ditto.
	(*bswapdi2_doubleword): New insn pattern.
	(*bswap<mode>2): Rename from *bswap<mode>2_1.

2012-05-06  Richard Sandiford  <rdsandiford@googlemail.com>

	* config/mips/mips.c (mips_set_reg_reg_piece_cost): New function.
	(mips_set_reg_reg_cost): Likewise.
	(mips_rtx_costs): Handle SET.

2012-05-06  Richard Sandiford  <rdsandiford@googlemail.com>

	* lower-subreg.c (shift_cost): Use set_src_cost, avoiding the SET.
	(compute_costs): Likewise for the zero extension.  Use set_rtx_cost
	to compute the cost of moves.  Set the mode of the target register.

2012-05-05  Richard Sandiford  <rdsandiford@googlemail.com>

	* rtl.h (plus_constant, plus_constant_mode): Merge into a single
	plus_constant function.
	* explow.c (plus_constant, plus_constant_mode): Likewise.  Assert
	that the mode is sensible.
	(use_anchored_address, round_push, allocate_dynamic_stack_space)
	(probe_stack_range, anti_adjust_stack_and_probe): Update calls to
	plus_constant.

	* alias.c (canon_rtx): Likewise.
	(init_alias_analysis): Likewise.
	* builtins.c (expand_builtin_return_addr)
	(expand_builtin_setjmp_setup, expand_builtin_longjmp)
	(expand_builtin_nonlocal_goto, expand_builtin_update_setjmp_buf)
	(expand_builtin_apply_args_1, expand_builtin_apply, expand_movstr)
	(expand_builtin_stpcpy): Likewise.
	* calls.c (save_fixed_argument_area, restore_fixed_argument_area)
	(compute_argument_addresses, internal_arg_pointer_based_exp)
	(expand_call, emit_library_call_value_1): Likewise.
	* cfgexpand.c (expand_one_stack_var_at, expand_debug_expr): Likewise.
	* combine-stack-adj.c (try_apply_stack_adjustment): Likewise.
	* combine.c (combine_simplify_rtx, force_to_mode): Likewise.
	* cse.c (insert_const_anchor, find_reg_offset_for_const)
	(use_related_value, fold_rtx): Likewise.
	* cselib.c (cselib_subst_to_values): Likewise.
	* dse.c (record_store, check_mem_read_rtx): Likewise.
	* dwarf2out.c (rtl_for_decl_location, gen_variable_die): Likewise.
	* emit-rtl.c (adjust_address_1): Likewise.
	* except.c (sjlj_emit_function_enter)
	(expand_builtin_extract_return_addr)
	(expand_builtin_frob_return_addr): Likewise.
	* expmed.c (expand_divmod): Likewise.
	* expr.c (move_by_pieces, store_by_pieces, store_by_pieces_1)
	(emit_move_resolve_push, push_block, emit_push_insn, store_expr)
	(expand_expr_addr_expr_1, expand_expr_real_1): Likewise.
	* function.c (assign_stack_local_1)
	(instantiate_virtual_regs_in_rtx): Likewise.
	* optabs.c (prepare_cmp_insn): Likewise.
	* recog.c (offsettable_address_addr_space_p): Likewise.
	* reload.c (find_reloads_address, form_sum)
	(find_reloads_subreg_address): Likewise.
	* reload1.c (init_reload, eliminate_regs_1)
	(eliminate_regs_in_insn): Likewise.
	* simplify-rtx.c (simplify_unary_operation_1)
	(simplify_binary_operation_1, simplify_plus_minus): Likewise.
	* var-tracking.c (compute_cfa_pointer, prepare_call_arguments)
	(vt_add_function_parameter): Likewise.

	* config/alpha/alpha.h (EH_RETURN_HANDLER_RTX): Likewise.
	* config/alpha/vms.h (EH_RETURN_HANDLER_RTX): Likewise.
	* config/alpha/alpha.c (alpha_legitimize_address_1)
	(get_unaligned_address, alpha_expand_unaligned_load)
	(alpha_expand_unaligned_store, alpha_expand_unaligned_load_words)
	(alpha_expand_unaligned_store_words, alpha_expand_block_clear)
	(alpha_expand_builtin_establish_vms_condition_handler)
	(alpha_setup_incoming_varargs, emit_frame_store_1)
	(alpha_expand_prologue, alpha_expand_epilogue)
	(alpha_use_linkage): Likewise.
	* config/alpha/alpha.md: Likewise.

	* config/arm/arm.c (arm_trampoline_init, legitimize_pic_address)
	(arm_load_pic_register, arm_pic_static_addr, arm_legitimize_address)
	(thumb_legitimize_address, arm_gen_load_multiple_1)
	(arm_gen_store_multiple_1, arm_gen_multiple_op, gen_ldm_seq)
	(gen_stm_seq, gen_const_stm_seq, arm_block_move_unaligned_straight)
	(arm_block_move_unaligned_loop, arm_gen_movmemqi, arm_reload_in_hi)
	(arm_reload_out_hi, arm_reorg, vfp_emit_fstmd, emit_multi_reg_push)
	(emit_sfm, thumb_set_frame_pointer, arm_expand_prologue)
	(thumb1_emit_multi_reg_push, thumb1_expand_prologue)
	(thumb_expand_movmemqi, arm_set_return_address)
	(thumb_set_return_address): Likewise.
	* config/arm/arm.md: Likewise.

	* config/avr/avr.c (avr_incoming_return_addr_rtx)
	(avr_prologue_setup_frame, expand_epilogue)
	(avr_const_address_lo16): Likewise.

	* config/bfin/bfin.h (EH_RETURN_HANDLER_RTX): Likewise.
	* config/bfin/bfin.c (setup_incoming_varargs, bfin_load_pic_reg)
	(bfin_expand_prologue, bfin_trampoline_init, bfin_expand_call)
	(bfin_output_mi_thunk): Likewise.

	* config/c6x/c6x.c (c6x_initialize_trampoline)
	(c6x_output_mi_thunk): Likewise.

	* config/cr16/cr16.h (EH_RETURN_HANDLER_RTX): Likewise.
	* config/cr16/cr16.c (cr16_create_dwarf_for_multi_push): Likewise.

	* config/cris/cris.c (cris_return_addr_rtx, cris_split_movdx)
	(cris_expand_prologue, cris_expand_epilogue, cris_gen_movem_load)
	(cris_emit_movem_store, cris_trampoline_init): Likewise.
	* config/cris/cris.md: Likewise.

	* config/darwin.c (machopic_indirect_data_reference)
	(machopic_legitimize_pic_address): Likewise.

	* config/epiphany/epiphany.c (epiphany_emit_save_restore)
	(epiphany_expand_prologue, epiphany_expand_epilogue)
	(epiphany_trampoline_init): Likewise.
	* config/epiphany/epiphany.md: Likewise.

	* config/fr30/fr30.c (fr30_move_double): Likewise.

	* config/frv/frv.c (frv_dwarf_store, frv_expand_prologue)
	(frv_expand_block_move, frv_expand_block_clear, frv_return_addr_rtx)
	(frv_index_memory, unspec_got_name, frv_find_base_term)
	(frv_output_dwarf_dtprel): Likewise.

	* config/h8300/h8300.c (h8300_push_pop, h8300_return_addr_rtx)
	(h8300_swap_into_er6, h8300_swap_out_of_er6): Likewise.

	* config/i386/i386.h (RETURN_ADDR_RTX): Likewise.
	* config/i386/i386.c (setup_incoming_varargs_64)
	(setup_incoming_varargs_ms_64, choose_baseaddr)
	(ix86_emit_save_reg_using_mov, ix86_adjust_stack_and_probe)
	(ix86_emit_probe_stack_range, ix86_expand_prologue)
	(ix86_emit_restore_reg_using_pop, ix86_emit_leave)
	(ix86_expand_epilogue, legitimize_pic_address, ix86_legitimize_address)
	(ix86_split_long_move, ix86_expand_movmem, ix86_expand_setmem)
	(ix86_static_chain, ix86_trampoline_init, x86_this_parameter)
	(x86_output_mi_thunk): Likewise.
	* config/i386/i386.md: Likewise.

	* config/ia64/ia64.c (ia64_expand_load_address)
	(ia64_expand_tls_address, ia64_expand_move, ia64_split_tmode)
	(do_spill, ia64_trampoline_init): Likewise.

	* config/iq2000/iq2000.c (iq2000_va_start)
	(iq2000_emit_frame_related_store, iq2000_expand_prologue)
	(iq2000_expand_eh_return, iq2000_setup_incoming_varargs)
	(iq2000_print_operand, iq2000_legitimize_address): Likewise.

	* config/lm32/lm32.c (lm32_setup_incoming_varargs): Likewise.

	* config/m32c/m32c.c (m32c_return_addr_rtx)
	(m32c_expand_insv): Likewise.

	* config/m32r/m32r.c (m32r_setup_incoming_varargs)
	(m32r_legitimize_pic_address, m32r_print_operand)
	(m32r_print_operand_address): Likewise.

	* config/m68k/linux.h (FINALIZE_TRAMPOLINE): Likewise.
	* config/m68k/m68k.h (RETURN_ADDR_RTX): Likewise.
	(EH_RETURN_HANDLER_RTX): Likewise.
	* config/m68k/m68k.c (m68k_emit_movem, m68k_expand_prologue)
	(m68k_expand_epilogue, legitimize_pic_address)
	(m68k_output_mi_thunk): Likewise.
	* config/m68k/m68k.md: Likewise.

	* config/mcore/mcore.c (mcore_expand_prolog): Likewise.
	(mcore_expand_epilog): Likewise.
	* config/mcore/mcore.md: Likewise.

	* config/mep/mep.c (mep_allocate_initial_value)
	(mep_expand_prologue, mep_expand_epilogue): Likewise.

	* config/microblaze/microblaze.c (double_memory_operand)
	(microblaze_block_move_loop): Likewise.

	* config/mips/mips.c (mips_strip_unspec_address, mips_add_offset)
	(mips_setup_incoming_varargs, mips_va_start, mips_block_move_loop)
	(mips_print_operand, mips16e_save_restore_reg, mips_save_restore_reg)
	(mips_expand_prologue, mips_epilogue_set_cfa)
	(mips_expand_epilogue): Likewise.
	* config/mips/mips.md: Likewise.

	* config/mmix/mmix.c (mmix_dynamic_chain_address, mmix_return_addr_rtx)
	(mmix_expand_prologue, mmix_expand_epilogue): Likewise.

	* config/mn10300/mn10300.c (mn10300_gen_multiple_store)
	(mn10300_builtin_saveregs, mn10300_trampoline_init): Likewise.

	* config/moxie/moxie.h (INCOMING_RETURN_ADDR_RTX): Likewise.
	(EH_RETURN_HANDLER_RTX): Likewise.
	* config/moxie/moxie.c (moxie_static_chain): Likewise.

	* config/pa/pa.c (legitimize_pic_address, hppa_legitimize_address)
	(store_reg, set_reg_plus_d, pa_expand_prologue, load_reg)
	(pa_return_addr_rtx, hppa_builtin_saveregs)
	(pa_trampoline_init): Likewise.
	* config/pa/pa.md: Likewise.

	* config/pdp11/pdp11.c (pdp11_expand_epilogue): Likewise.

	* config/picochip/picochip.c (picochip_static_chain): Likewise.

	* config/rs6000/rs6000.h (RS6000_SAVE_TOC): Likewise.
	* config/rs6000/rs6000.c (rs6000_legitimize_address)
	(setup_incoming_varargs, print_operand, rs6000_return_addr)
	(rs6000_emit_eh_reg_restore, rs6000_emit_probe_stack_range)
	(rs6000_emit_epilogue)
	(rs6000_machopic_legitimize_pic_address): Likewise.

	* config/rx/rx.c (gen_rx_rtsd_vector, gen_rx_popm_vector): Likewise.

	* config/s390/s390.h (INITIAL_FRAME_ADDRESS_RTX): Likewise.
	(DYNAMIC_CHAIN_ADDRESS): Likewise.
	* config/s390/s390.c (s390_decompose_address, legitimize_pic_address)
	(s390_delegitimize_address, print_operand, annotate_constant_pool_refs)
	(replace_constant_pool_ref, s390_return_addr_rtx, s390_back_chain_rtx)
	(save_fpr, restore_fpr, save_gprs, restore_gprs, s390_emit_prologue)
	(s390_emit_epilogue, s390_function_profiler): Likewise.
	* config/s390/s390.md: Likewise.

	* config/score/score.c (score_add_offset, score_prologue): Likewise.

	* config/sh/sh.c (expand_block_move, push_regs, sh_builtin_saveregs)
	(sh_output_mi_thunk): Likewise.
	* config/sh/sh.md: Likewise.

	* config/sparc/sparc.h (DYNAMIC_CHAIN_ADDRESS, FRAME_ADDR_RTX)
	(RETURN_ADDR_RTX, INCOMING_RETURN_ADDR_RTX): Likewise.
	* config/sparc/sparc.c (sparc_legitimize_pic_address)
	(sparc_emit_probe_stack_range, emit_save_or_restore_regs)
	(emit_window_save, sparc_flat_expand_prologue, sparc_struct_value_rtx)
	(emit_and_preserve): Likewise.
	* config/sparc/sparc.md: Likewise.

	* config/spu/spu.h (DYNAMIC_CHAIN_ADDRESS): Likewise.
	* config/spu/spu.c (spu_expand_insv, spu_machine_dependent_reorg)
	(spu_setup_incoming_varargs, ea_load_store_inline)
	(spu_expand_load): Likewise.

	* config/stormy16/stormy16.c (xstormy16_expand_prologue)
	(combine_bnp): Likewise.

	* config/tilegx/tilegx.h (DYNAMIC_CHAIN_ADDRESS): Likewise.
	* config/tilegx/tilegx.c (tilegx_setup_incoming_varargs)
	(tilegx_expand_unaligned_load, tilegx_trampoline_init): Likewise.

	* config/tilepro/tilepro.h (DYNAMIC_CHAIN_ADDRESS): Likewise.
	* config/tilepro/tilepro.c (tilepro_setup_incoming_varargs)
	(tilepro_expand_unaligned_load, tilepro_trampoline_init): Likewise.

	* config/v850/v850.c (expand_prologue, expand_epilogue): Likewise.
	* config/v850/v850.md: Likewise.

	* config/vax/elf.h (EH_RETURN_STACKADJ_RTX): Likewise.
	(EH_RETURN_HANDLER_RTX): Likewise.
	* config/vax/vax.h (DYNAMIC_CHAIN_ADDRESS, RETURN_ADDR_RTX): Likewise.
	* config/vax/vax.c (vax_add_reg_cfa_offset, vax_expand_prologue)
	(print_operand_address, vax_trampoline_init): Likewise.

	* config/xtensa/xtensa.c (xtensa_expand_prologue, xtensa_return_addr)
	(xtensa_function_value_regno_p): Likewise.

2012-05-04  Andrew Pinski  <apinski@cavium.com>

	* expr.c (get_def_for_expr_class): New function.
	(convert_tree_comp_to_rtx): New function.
	(expand_cond_expr_using_cmove): New function.
	(expand_expr_real_2 <case COND_EXPR>): Call
	expand_cond_expr_using_cmove first and return if it succeeds.
	Remove the check for HAVE_conditional_move since we should have
	already converted it to a conditional move.
	* config/i386/i386.c (ix86_expand_int_movcc): Disallow comparison
	modes of DImode for 32bits and TImode.

2012-05-04  Steven Bosscher  <steven@gcc.gnu.org>

	PR other/29442
	* read-md.c (fprint_md_ptr_loc, fprint_c_condition): New functions.
	(print_md_ptr_loc, print_c_condition): Use them.
	* read-md.h (fprint_md_ptr_loc, fprint_c_condition): New prototypes.
	* genattrtab.c (attr_file_name, dfa_file_name, latency_file_name,
	attr_file, dfa_file, latency_file): New global variables.
	(write_attr_valueq, write_attr_set, write_attr_case, write_attr_value,
	write_upcase, write_indent, write_length_unit_log, write_test_expr,
	write_attr_get, write_insn_cases, write_eligible_delay,
	write_const_num_delay_slots): Accept FILE pointer and toss it around.
	Update all callers.
	(write_header, open_outfile, handle_arg): New funcions.
	(make_automaton_attrs): Write prototypes as extern to the output
	files.
	(main): Use init_rtx_reader_args_cb with handle_arg to take 3 file
	names from the command line.  Open the output files and write out
	internal functions for DFA functions to dfa_file_name, insn latency
	functions to latency_file_name, and everything else to attr_file.
	* Makefile.in (OBJS): Add insn-dfatab.o and insn-latencytab.o.
	(BACKEND): Build libbackend first.
	(MOSTLYCLEANFILES): Add insn-dfatab.c and insn-latencytab.c.
	(.PRECIOUS): Likewise.
	(insn-dfatab.o): New rule.
	(insn-latencytab.o): New rule.
	(simple_rtl_generated_c): Do not include insn-attrtab.c.
	(s-attrtab): New rule.

2012-05-04  Steven Bosscher  <steven@gcc.gnu.org>

	* rtl.def (ATTR_FLAG): Remove probability indicating flags.
	* genattr.c (main): Remove ATTR_FLAG_likely, ATTR_FLAG_unlikely,
	ATTR_FLAG_very_likely, and ATTR_FLAG_very_unlikely.
	* reorg.c (get_jump_flags): Do not set the removed flags.

	* doc/md.texi (attr_flag): Update for abovementioned changes.

2012-05-04  Uros Bizjak  <ubizjak@gmail.com>

	PR target/53228
	* config/i386/i386.h (X86_ARCH_CMOV): Rename from X86_ARCH_CMOVE.
	(TARGET_CMOV): Rename from TARGET_CMOVE.
	(TARGET_CMOVE): New define.
	* config/i386/i386.c (ix86_option_override_internal): Use TARGET_CMOV.
	Do not set TARGET_CMOVE here.

2012-05-04  Dodji Seketeli  <dodji@redhat.com>

	Enable -Wunused-local-typedefs when -Wall or -Wunused is on
	* opts.c (finish_options): Activate -Wunused-local-typedefs if
	-Wunused is activated.
	* doc/invoke.texi: Update blurb of -Wunused-local-typedefs.

2012-05-04  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>

	* config/s390/s390.md (*movmem_short, *clrmem_short)
	(*cmpmem_short): Move the mode check from the insn condition to
	the match_scratch.

2012-05-04  Ulrich Weigand  <ulrich.weigand@linaro.org>

	PR tree-optimization/52633
	* tree-vect-patterns.c (vect_vect_recog_func_ptrs): Swap order of
	vect_recog_widen_shift_pattern and vect_recog_over_widening_pattern.
	(vect_recog_over_widening_pattern): Remove handling of code that was
	already detected as over-widening pattern.  Remove special handling
	of "unsigned" cases.  Instead, support general case of conversion
	of the shift result to another type.

2012-05-04  Ulrich Weigand  <ulrich.weigand@linaro.org>

	* tree-vect-patterns.c (vect_single_imm_use): New function.
	(vect_recog_widen_mult_pattern): Use it instead of open-coding loop.
	(vect_recog_over_widening_pattern): Likewise.
	(vect_recog_widen_shift_pattern): Likewise.

2012-05-04  Ulrich Weigand  <ulrich.weigand@linaro.org>

	* tree-vect-patterns.c (vect_same_loop_or_bb_p): New function.
	(vect_handle_widen_op_by_const): Use it instead of open-coding test.
	(vect_recog_widen_mult_pattern): Likewise.
	(vect_operation_fits_smaller_type): Likewise.
	(vect_recog_over_widening_pattern): Likewise.
	(vect_recog_widen_shift_pattern): Add to vect_same_loop_or_bb_p test.

2012-05-04  Richard Guenther  <rguenther@suse.de>

	PR lto/50602
	* lto-wrapper.c (merge_and_complain): Complain about mismatches
	of -freg-struct-return and -fpcc-struct-return.
	(run_gcc): Pass through -freg-struct-return and -fpcc-struct-return
	from the input file options and ignore those from the link
	command line.

2012-05-04  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/53168
	* tree-ssa-pre.c (phi_translate_1): Only handle type-punned
	memory reads when the result is a constant we can pun.

2012-05-04  Richard Guenther  <rguenther@suse.de>

	* common.opt (flto-report): Do not mark as Optimization.

2012-05-04  Eric Botcazou  <ebotcazou@adacore.com>

	PR target/48496
	* recog.c (constrain_operands): If extra constraints are present, also
	accept pseudo-registers with equivalent memory locations during reload.

2012-05-04  Olivier Hainque  <hainque@adacore.com>

	* collect2.c (may_unlink_output_file): New global.
	(maybe_unlink): Honor it.
	* collect2.h: Add extern for it.
	* tlink.c (do_tlink): Set it to true if the link succeeded.

2012-05-04  Olivier Hainque  <hainque@adacore.com>

	* gcc.c (eval_spec_function): Finalize/restore the current string
	obstack state as part of the context push/pop operations.

2012-05-04  Bin Cheng  <bin.cheng@arm.com>

	PR rtl-optimization/52804
	* reload1.c (reload_reg_reaches_end_p): Check whether successor
	reload with type RELOAD_FOR_INPUT_ADDRESS kills reload register
	of current one with type RELOAD_FOR_INPADDR_ADDRESS.
	Same stands for reloads with type RELOAD_FOR_OUTPUT_ADDRESS and
	RELOAD_FOR_OUTADDR_ADDRESS.

2012-05-04  Manuel López-Ibáñez  <manu@gcc.gnu.org>

	PR c++/24985
	* tree-diagnostic.c (maybe_unwind_expanded_macro_loc): Show caret
	for macro expansion.

2012-05-03  Manuel López-Ibáñez  <manu@gcc.gnu.org>

	* flags.h (flag_permissive): Do not declare.
	* diagnostic.c (diagnostic_report_diagnostic): Handle fpermissive
	option specially.
	* toplev.c (flag_permissive): Do not define.
	* c-tree.h (system_header_p): Delete unused.

2012-05-03  David S. Miller  <davem@davemloft.net>

	PR target/52684
	* config/sparc/sparc.c (emit_soft_tfmode_libcall): If we pass a
	MEM directly into a libcall, mark it's MEM_EXPR as addressable.
	(sparc_emit_float_lib_cmp): Likewise.

2012-05-03  Michael Meissner  <meissner@linux.vnet.ibm.com>

	PR target/53199
	* config/rs6000/rs6000.md (bswapdi splitters): If
	-mavoid-indexed-addresses (or -mcpu=power6 which sets it by
	default) is used, generate an alternate sequence that does not
	depend on using indexed addressing.

2012-05-03  Jason Merrill  <jason@redhat.com>

	* gengtype.c (write_types): Fix warning message.
	(write_local): Likewise.

2012-05-02  Jason Merrill  <jason@redhat.com>

	* dwarf2out.c (struct external_ref, build_local_stub): New.
	(hash_external_ref, external_ref_eq, lookup_external_ref): New.
	(optimize_external_refs, optimize_external_refs_1): New.
	(change_AT_die_ref): New.
	(clone_as_declaration): Add DW_AT_signature when cloning a declaration.
	(build_abbrev_table): Take the external refs hashtable.
	(output_comp_unit): Get it from optimize_external_refs and pass it in.

2012-05-03  Jan Hubicka  <jh@suse.cz>

	PR middle-end/53093
	* tree-emutls.c (new_emutls_decl): Fix handling of aliases.

2012-05-03  Jan Hubicka  <jh@suse.cz>

	PR middle-end/53106
	* ipa.c (cgraph_remove_unreachable_nodes): Fix handling of clones.

2012-05-03  Jason Merrill  <jason@redhat.com>

	* dwarf2out.c (die_struct): Add comdat_type_p flag.  Use it instead of
	use_debug_types to discriminate the die_id union.
	(print_die, assign_symbol_names, copy_decls_walk): Likewise.
	(build_abbrev_table, output_die): Likewise.
	(prune_unused_types_walk_attribs): Likewise.
	(generate_type_signature, copy_declaration_context): Set it.
	(remove_child_or_replace_with_skeleton): Set it.
	(dwarf2out_start_source_file, dwarf2out_end_source_file): Don't
	check use_debug_types.
	(dwarf2out_finish): Do break_out_includes after .debug_types.

2012-05-03  Jason Merrill  <jason@redhat.com>

	* dwarf2out.c (modified_type_die): Use scope_die_for.
	(gen_type_die_with_usage, dwarf2out_finish): Likewise.
	(uses_local_type_r, uses_local_type): New.
	(scope_die_for): Keep a type that uses a local type in local scope.
	Use get_context_die for namespace and type scope.

2012-05-03  Jason Merrill  <jason@redhat.com>

	* config/i386/i386.c (ix86_code_end): Set DECL_IGNORED_P on the
	pc thunk.
	* dwarf2out.c (output_aranges): Skip DECL_IGNORED_P functions.
	(dwarf2out_finish): Likewise.

2012-05-03  Martin Jambor  <mjambor@suse.cz>

	* builtins.c (get_object_alignment_1): Return whether we can determine
	the alignment or conservatively assume byte alignment.  Return the
	alignment by reference.  Use get_pointer_alignment_1 for dereference
	alignment.
	(get_pointer_alignment_1): Return whether we can determine the
	alignment or conservatively assume byte alignment.  Return the
	alignment by reference.  Use get_ptr_info_alignment to get SSA name
	alignment.
	(get_object_alignment): Update call to get_object_alignment_1.
	(get_object_or_type_alignment): Likewise, fall back to type alignment
	only when it returned false.
	(get_pointer_alignment): Update call to get_pointer_alignment_1.
	* fold-const.c (get_pointer_modulus_and_residue): Update call to
	get_object_alignment_1.
	* ipa-prop.c (ipa_modify_call_arguments): Update call to
	get_pointer_alignment_1.
	* tree-sra.c (build_ref_for_offset): Likewise, fall back to the type
	of MEM_REF or TARGET_MEM_REF only when it returns false.
	* tree-ssa-ccp.c (get_value_from_alignment): Update call to
	get_object_alignment_1.
	(ccp_finalize): Use set_ptr_info_alignment.
	* tree.h (get_object_alignment_1): Update declaration.
	(get_pointer_alignment_1): Likewise.
	* gimple-pretty-print.c (dump_gimple_phi): Use get_ptr_info_alignment.
	(dump_gimple_stmt): Likewise.
	* tree-flow.h (ptr_info_def): Updated comments of fields align and
	misalign.
	(get_ptr_info_alignment): Declared.
	(mark_ptr_info_alignment_unknown): Likewise.
	(set_ptr_info_alignment): Likewise.
	(adjust_ptr_info_misalignment): Likewise.
	* tree-ssa-address.c (copy_ref_info): Use new access functions to get
	and set alignment of SSA names.
	* tree-ssa-loop-ivopts.c (rewrite_use_nonlinear_expr): Call
	mark_ptr_info_alignment_unknown.
	* tree-ssanames.c (get_ptr_info_alignment): New function.
	(mark_ptr_info_alignment_unknown): Likewise.
	(set_ptr_info_alignment): Likewise.
	(adjust_ptr_info_misalignment): Likewise.
	(get_ptr_info): Call mark_ptr_info_alignment_unknown.
	* tree-vect-data-refs.c (vect_create_addr_base_for_vector_ref):
	Likewise.
	(bump_vector_ptr): Likewise.
	* tree-vect-stmts.c (create_array_ref): Use set_ptr_info_alignment.
	(vectorizable_store): Likewise.
	(vectorizable_load): Likewise.

2012-05-03  Michael Matz  <matz@suse.de>

	* basic-block.h (struct rtl_bb_info, struct gimple_bb_info): Move
	in front of basic_block_def.
	(struct basic_block_def): Make il.gimple the full struct, not a
	pointer.
	(__assert_gimple_bb_smaller_rtl_bb): Asserting typedef.

	* cfgexpand.c (expand_gimple_basic_block): Clear all il.gimple members.
	* gimple-iterator.c (gimple_stmt_iterator): Don't special case
	NULL il.gimple, which can't happen anymore.
	* gimple.h (bb_seq): il.gimple can't be NULL.
	(bb_seq_add): Ditto.
	(set_bb_seq): Adjust.
	(gsi_start_bb, gsi_last_bb): Tidy.
	* lto-streamer-in.c (make_new_block): Don't zero members that
	are zeroed already, don't allocate a gimple_bb_info.
	* tree-cfg.c (create_bb): Don't allocate a gimple_bb_info.
	(remove_bb): Clear all il.gimple members.
	(gimple_verify_flow_info): Adjust for flat il.gimple.
	* tree-flow-inline.h (phi_nodes, phi_nodes_ptr, set_phi_nodes): Adjust.

	* coretypes.h (const_gimple_seq): Remove typedef.
	* gimple.h (gimple_seq_first): Take gimple_seq.
	(gimple_seq_first_stmt): Ditto.
	(gimple_seq_last): Ditto.
	(gimple_seq_last_stmt): Ditto.
	(gimple_seq_empty_p): Ditto.

2012-05-03  Richard Guenther  <rguenther@suse.de>

	* tree-ssa-pre.c (valid_in_sets): Remove checking of trapping
	operations.
	(prune_clobbered_mems): Do it here.  Do not uselessly sort expressions.
	(compute_avail): Do not add possibly trapping operations to
	EXP_GEN if they might not be executed in the block.

2012-05-03  Uros Bizjak  <ubizjak@gmail.com>

	* config/alpha/elf.h (MAX_OFILE_ALIGNMENT): Remove.

2012-05-03  Steven Bosscher  <steven@gcc.gnu.org>

	* tree-switch-conversion.c (gen_inbound_check): Free post-dominance
	information as early as possible.  Update dominance info instead of
	discarding it.

2012-05-03  Richard Guenther  <rguenther@suse.de>

	* tree-ssa-pre.c (debug_bitmap_sets_for): New function.
	(union_contains_value): Remove.
	(vro_valid_in_sets): Likewise.
	(op_valid_in_sets): New function.
	(valid_in_sets): Use op_valid_in_sets.
	(insert_into_preds_of_block): Move dumping ...
	(do_regular_insertion): ... here.
	(do_partial_partial_insertion): ... and here.  Dump that
	we've found a partial partial redundancy.
	(insert): Dump the current insert iteration.

2012-05-03  Jakub Jelinek  <jakub@redhat.com>

	PR plugins/53126
	* gcc-ar.c (main): If GCC_EXEC_PREFIX is set in env,
	append program name to it and pass that as first argument
	to make_relative_prefix.  Always pass standard_libexec_prefix
	as last argument to make_relative_prefix.  If
	make_relative_prefix returns NULL, fall back to
	standard_libexec_prefix.

	PR debug/53174
	* tree-predcom.c (remove_stmt): Call reset_debug_uses on stmts being
	removed.

	PR target/53187
	* config/arm/arm.c (arm_select_cc_mode): If x has MODE_CC class
	mode, return that mode.

	PR target/53194
	* config/i386/i386-c.c (ix86_target_macros_internal): Don't
	define __ATOMIC_HLE_* macros here.
	(ix86_target_macros): But here, using cpp_define_formatted.

2012-05-03  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/53144
	* tree-ssa-sccvn.c (vn_reference_lookup_or_insert_constant_for_pieces):
	Rename to ...
	(vn_reference_lookup_or_insert_for_pieces): ... this.  Properly deal
	with SSA name values.
	(vn_reference_lookup_3): Adjust callers.

2012-05-03  Ganesh Gopalasubramanian  <Ganesh.Gopalasubramanian@amd.com>

	* config/i386/driver-i386.c (host_detect_local_cpu): Reset
	has_fma4 for AMD processors with both fma3 and fma4 support.

2012-05-03  Kirill Yukhin  <kirill.yukhin@intel.com>

	PR target/53201
	* config/i386/driver-i386.c (host_detect_local_cpu): Add space to
	"-mno-hle".

2012-05-03  Michael Matz  <matz@suse.de>

	PR bootstrap/53197
	* tree-ssa-dse.c (dse_optimize_stmt): Take pointer to iterator.
	(dse_enter_block): Properly iterate the whole sequence even
	if the last statement was removed.

2012-05-02  Steven Bosscher  <steven@gcc.gnu.org>

	* config/alpha/vms.h (SUBTARGET_OVERRIDE_OPTIONS): For pic code,
	unset flag_jump_tables.
	* stmt.c (expand_case): Remove special flag_pic case conditional
	on ASM_OUTPUT_ADDR_DIFF_ELT not being defined.

2012-05-02  Ulrich Weigand  <ulrich.weigand@linaro.org>

	* common/config/s390/s390-common.c (s390_option_optimization_table):
	Enable -fsched-pressure using -fsched-pressure-algorithm=model by
	default when optimizing.

2012-05-02  Martin Jambor  <mjambor@suse.cz>

	PR lto/52605
	* dwarf2out.c (dwarf2out_decl): Only lookup die representing context
	of a variable when the contect is a function.

2012-05-02  Michael Matz  <matz@suse.de>

	* coretypes.h (gimple_seq, const_gimple_seq): Typedef as gimple.
	* gimple.h (struct gimple_seq_node_d, struct gimple_seq_d): Remove.
	(const_gimple_seq_node): Remove.
	(gimple_seq_node): Typedef as gimple.
	(struct gimple_statement_base): Add next and prev members,
	adjust all WORD markers in using structs.
	(union gimple_statement_d): Link via gsbase.next field for GC and PCH.
	(gimple_seq_first, gimple_seq_first_stmt, gimple_seq_last,
	gimple_seq_last_stmt): Adjust as gimple_seq, gimple_seq_node and
	gimple are the same.
	(gimple_seq_set_last, gimple_seq_set_first): Don't allocate
	gimple_seq, adjust.
	(gimple_init_singleton): New function.
	(gsi_start_1, gsi_last_1, gsi_end_p, gsi_one_before_end_p): Adjust.
	(gsi_next, gsi_prev): Adjust, handle prev cyclic list correctly.
	(gsi_stmt): Adjust.
	(gsi_stmt_ptr): Remove.
	(enum gimple_alloc_kind): Remove gimple_alloc_kind_seq member.

	* gimple-iterator.c (update_bb_for_stmts): Take last parameter
	again, adjust for above changes.
	(update_call_edge_frequencies): Adjust for above changes.
	(gsi_insert_seq_nodes_before): Rewrite for new data structure.
	(gsi_insert_seq_nodes_after): Ditto.
	(gsi_split_seq_after): Ditto.
	(gsi_set_stmt): Ditto.
	(gsi_split_seq_before): Ditto.
	(gsi_remove): Ditto.
	(gsi_insert_seq_before_without_update): Don't free sequence.
	(gsi_insert_seq_after_without_update): Ditto.
	(gsi_replace): Assert some more invariants.
	(gsi_insert_before_without_update, gsi_insert_after_without_update):
	Tidy.
	(gsi_for_stmt): Don't search for stmt.
	(gsi_insert_on_edge_immediate): Tidy.

	* gimple.c (gimple_alloc_k): Remove "sequences".
	(gimple_seq_cache): Remove.
	(gimple_alloc_stat): Make stmt a singleton sequence.
	(gimple_seq_alloc, gimple_seq_free): Remove.
	(gimple_assign_set_rhs_with_ops_1): Ensure new stmt is a singleton.
	(gimple_copy): Ditto.
	* gimplify.c (gimplify_cleanup_point_expr): Use gsi_set_stmt,
	create iterator from correct sequence.
	* tree-phinodes.c (make_phi_node): Make stmt a singleton.

2012-05-02  Michael Matz  <matz@suse.de>

	* gimple.h (gimple_stmt_iterator <seq>): Make it be pointer to
	gimple_seq.
	(gimple_seq_set_last, gimple_seq_set_first): Take pointer to
	sequence, lazily allocate it.
	(bb_seq_addr): New function.
	(gsi_start_1): Rename from gsi_start, but take pointer to sequence.
	(gsi_start): Macro to wrap gsi_start_1 taking pointer of argument.
	(gsi_none): New function.
	(gsi_start_bb): Adjust.
	(gsi_last_1): Rename from gsi_last, but take pointer to sequence.
	(gsi_last): Macro to wrap gsi_last_1 taking pointer of argument.
	(gsi_last_bb): Adjust.
	(gsi_seq): Adjust.
	* tree-flow-inline.h (phi_nodes_ptr): New function.

	* gimple-iterator.c (gsi_insert_seq_nodes_before): Adjust to
	datastructure and interface change.
	(gsi_insert_seq_before_without_update): Ditto.
	(gsi_insert_seq_nodes_after): Ditto.
	(gsi_insert_seq_after_without_update): Ditto.
	(gsi_split_seq_after): Ditto, don't use gimple_seq_alloc.
	(gsi_split_seq_before): Ditto.
	(gsi_start_phis): Adjust.
	* tree-vect-loop.c (vect_determine_vectorization_factor): Use gsi_none.
	(vect_transform_loop): Ditto.
	* gimple.c (gimple_seq_add_stmt, gimple_seq_add_seq,
	gimple_seq_copy): Don't use gimple_seq_alloc.
	* gimplify.c (gimple_seq_add_stmt_without_update): Ditto.
	(gimplify_seq_add_seq): Ditto.
	* lto-streamer-in.c (make_new_block): Ditto.
	* tree-cfg.c (create_bb): Ditto.
	* tree-sra.c (initialize_parameter_reductions): Ditto.

2012-05-02  Michael Matz  <matz@suse.de>

	* gimple.h (gimple_seq_first, gimple_seq_first_stmt, gimple_seq_last,
	gimple_seq_last_stmt, gimple_seq_set_last, gimple_seq_set_first,
	gimple_seq_empty_p, gimple_seq_alloc_with_stmt, bb_seq,
	set_bb_seq): Move down to after gimple_statement_d definition.

2012-05-02  Michael Matz  <matz@suse.de>

	* gimple-fold.c (gimplify_and_update_call_from_tree): Use
	gsi_replace_with_seq, instead of inserting itself.
	* gimple-iterator.c (gsi_replace_with_seq): New function.
	* tree-ssa-forwprop.c (forward_propagate_comparison): Take
	iterator instead of statement, advance it.
	(ssa_forward_propagate_and_combine): Adjust call to above.

2012-05-02  Michael Matz  <matz@suse.de>

	* tree-phinodes.c (add_phi_node_to_bb): Tidy, don't use
	gimple_seq_alloc.
	* omp-low.c (finalize_task_copyfn): Don't use gimple_seq_alloc.
	* tree-nested.c (walk_gimple_omp_for): Ditto.
	* trans-mem.c (lower_transaction): Ditto.
	* tree-eh.c (do_return_redirection): Ditto.
	(do_goto_redirection): Ditto.
	(lower_try_finally_switch): Ditto.
	* gimplify.c (gimplify_stmt): Ditto.
	(gimplify_scan_omp_clauses): Ditto.
	(gimplify_omp_for): Ditto.
	(gimplify_function_tree): Ditto.
	* gimple-fold.c (gimplify_and_update_call_from_tree): Ditto.
	* tree-mudflap.c (mf_decl_cache_locals): Ditto.
	(mf_build_check_statement_for): Ditto.
	(mx_register_decls): Ditto.
	* graphite-sese-to-poly.c (remove_invariant_phi): Ditto,
	and don't use itertors to append.
	(insert_stmts): Ditto.
	(insert_out_of_ssa_copy): Ditto.
	(insert_out_of_ssa_copy_on_edge): Ditto.

2012-05-02  Michael Matz  <matz@suse.de>

	* gimple.h (gimple_bind_body_ptr): New function.
	(gimple_bind_body): Use it.
	(gimple_catch_handler): Use gimple_catch_handler_ptr.
	(gimple_eh_filter_failure_ptr): New function.
	(gimple_eh_filter_failure): Use it.
	(gimple_eh_else_n_body_ptr): New function.
	(gimple_eh_else_n_body): Use it.
	(gimple_eh_else_e_body_ptr): New function.
	(gimple_eh_else_e_body): Use it.
	(gimple_try_eval_ptr): New function.
	(gimple_try_eval): Use it.
	(gimple_try_cleanup_ptr): New function.
	(gimple_try_cleanup): Use it.
	(gimple_wce_cleanup_ptr): New function.
	(gimple_wce_cleanup): Use it.
	(gimple_omp_body_ptr): New function.
	(gimple_omp_body): Use it.
	(gimple_omp_for_pre_body_ptr): New function.
	(gimple_omp_for_pre_body): Use it.
	(gimple_transaction_body_ptr): New function.
	(gimple_transaction_body): Use it.
	(gsi_split_seq_before): Adjust to return nothing and take pointer
	to sequence.
	(gsi_set_stmt): Declare.
	(gsi_replace_with_seq): Declare.
	(walk_gimple_seq_mod): Declare.
	* function.h (struct function <gimple_body>): Use typedef gimple_seq.

	* gimple-iterator.c (gsi_set_stmt): New function.
	(gsi_split_seq_before): Return new sequence via pointer argument.
	(gsi_replace): Use gsi_set_stmt.

	* tree-ssa-loop-im.c (move_computations_stmt): First remove
	then insert stmt.
	* tree-complex.c (update_complex_components_on_edge): Don't copy gsi.
	* tree-phinodes.c (resize_phi_node): Don't resize stmt in-place,
	return new stmt.
	(reserve_phi_args_for_new_edge): Change call to above,
	use gsi_set_stmt.

	* omp-low.c (lower_omp): Change prototype to take pointer to sequence.
	(lower_rec_input_clauses): Use gimple_seq_add_seq instead of
	iterators.  Adjust call to lower_omp.
	(lower_lastprivate_clauses): Adjust call to lower_omp.
	(lower_reduction_clauses): Ditto.
	(expand_omp_taskreg): Nullify non-cfg body of child_fn.
	(lower_omp_sections): Don't explicitely count sequence length,
	nullify lowered bodies earlier, ensure stmts are part of only
	one sequence, adjust call to lower_omp.
	(lower_omp_single): Ensure stmts are part of only one sequence,
	adjust call to lower_omp.
	(lower_omp_master): Ditto.
	(lower_omp_ordered): Ditto.
	(lower_omp_critical): Ditto.
	(lower_omp_for): Ditto.
	(lower_omp_taskreg): Ditto, tidy.
	(lower_omp_1): Adjust calls to lower_omp.
	(execute_lower_omp): Ditto.
	(lower_omp): Adjust to take pointer to sequence.
	(diagnose_sb_2): Use walk_gimple_seq_mod.
	(diagnose_omp_structured_block_errors): Ditto and set possibly
	changed function body.
	* gimple-low.c (lower_function_body): Set function body after
	it stabilizes.
	(lower_sequence): Adjust to take pointer to sequence.
	(lower_omp_directive): Ensure stmt isn't put twice into the
	sequence, adjust call to lower_sequence.
	(lower_stmt): Adjust calls to lower_sequence.
	(lower_gimple_bind): Ditto.
	(gimple_try_catch_may_fallthru): Call gsi_start with lvalue.
	* tree-nested.c (walk_body): Take pointer to sequence, use
	walk_gimple_seq_mod.
	(walk_function): Adjust call to walk_body, set possibly changed body.
	(walk_gimple_omp_for): Adjust calls to walk_body.
	(convert_nonlocal_omp_clauses): Ditto.
	(convert_nonlocal_reference_stmt): Ditto.
	(convert_local_omp_clauses): Ditto.
	(convert_local_reference_stmt): Ditto.
	(convert_tramp_reference_stmt): Ditto.
	(convert_gimple_call): Ditto.
	(convert_nl_goto_reference): Use local iterator copy.
	* gimple.c (walk_gimple_seq_mod): Renamed from walk_gimple_seq,
	but taking pointer to sequence, ensure gsi_start is called with
	callers lvalue.
	(walk_gimple_seq): New wrapper around walk_gimple_seq_mod,
	asserting that the sequence head didn't change.
	(walk_gimple_stmt): Replace all calls to walk_gimple_seq with
	walk_gimple_seq_mod.
	* trans-mem.c (lower_transaction): Use walk_gimple_seq_mod.
	(execute_lower_tm): Ditto, and set possibly changed body.
	* tree-eh.c (lower_eh_constructs_1): Take pointer to sequence,
	call gsi_start with that lvalue.
	(replace_goto_queue_stmt_list): Ditto.
	(replace_goto_queue_1): Adjust calls to replace_goto_queue_stmt_list.
	(replace_goto_queue): Ditto.
	(lower_try_finally_nofallthru): Adjust calls to lower_eh_constructs_1.
	(lower_try_finally_onedest): Ditto.
	(lower_try_finally_copy): Ditto.
	(lower_try_finally_switch): Ditto.
	(lower_try_finally): Ditto.
	(lower_eh_filter): Ditto.
	(lower_eh_must_not_throw): Ditto.
	(lower_cleanup): Ditto.
	(lower_eh_constructs_2): Ditto.
	(lower_catch): Ditto, and ensure gsi_start is called with lvalue.
	(lower_eh_constructs): Adjust calls to lower_eh_constructs_1, and
	set possibly changed body.
	(optimize_double_finally): Call gsi_start with lvalue.

	* tree-cfg.c (make_blocks): Adjust call to gsi_split_seq_before.
	(gimple_split_block): Ditto.
	(gimple_merge_blocks): Use gsi_start_phis.
	(move_stmt_r): Use walk_gimple_seq_mod.
	* tree-ssa-dse.c (dse_enter_block): Use gsi_last_bb.
	* cgraphbuild.c (build_cgraph_edges): Use gsi_start_phis.
	(rebuild_cgraph_edges): Ditto.
	(cgraph_rebuild_references): Ditto.
	* ipa-prop.c (ipa_analyze_params_uses): Ditto.
	* tree-inline.c (copy_phis_for_bb): Ditto.
	* tree-ssa-dce.c: Ditto.

	* cgraphunit.c (cgraph_analyze_function): Use gimple_has_body_p.

2012-05-02  Kirill Yukhin  <kirill.yukhin@intel.com>
	    Andi Kleen <ak@linux.intel.com>

	* coretypes.h (MEMMODEL_MASK): New.
	* builtins.c (get_memmodel): Add val. Call target.memmodel_check
	and return new variable.
	(expand_builtin_atomic_exchange):  Mask memmodel values.
	(expand_builtin_atomic_compare_exchange): Ditto.
	(expand_builtin_atomic_load): Ditto.
	(expand_builtin_atomic_store): Ditto.
	(expand_builtin_atomic_clear): Ditto.
	* doc/extend.texi: Mention port-dependent memory model flags.
	* config/i386/cpuid.h (bit_HLE): New.
	* config/i386/driver-i386.c (host_detect_local_cpu): Detect
	HLE support.
	* config/i386/i386-protos.h (ix86_generate_hle_prefix): New.
	* config/i386/i386-c.c (ix86_target_macros_internal): Set HLE defines.
	(ix86_target_string)<-mhle>: New.
	(ix86_valid_target_attribute_inner_p) <OPT_mhle>: Ditto.
	* config/i386/i386.c (ix86_target_string) <OPTION_MASK_ISA_HLE>: New.
	(ix86_valid_target_attribute_inner_p) <OPT_mhle>: Ditto.
	(ix86_option_override_internal) <PTA_HLE>: New switch, set it
	enabled for generic, generic64 and core-avx2.
	(ix86_print_operand): Generate HLE lock prefixes.
	(ix86_memmodel_check): New.
	(TARGET_MEMMODEL_CHECK): Ditto.
	* config/i386/i386.h (OPTION_ISA_HLE): Ditto.
	(IX86_HLE_ACQUIRE): Ditto.
	(IX86_HLE_RELEASE): Ditto.
	* config/i386/i386.h (ix86_generate_hle_prefix): Ditto.
	* config/i386/i386.opt (mhle): Ditto.
	* config/i386/sync.md(atomic_compare_and_swap<mode>): Pass
	success model to instruction emitter.
	(atomic_fetch_add<mode>): Ditto.
	(atomic_exchange<mode>): Ditto.
	(atomic_add<mode>): Ditto.
	(atomic_sub<mode>): Ditto.
	(atomic_<code><mode>): Ditto.
	(*atomic_compare_and_swap_doubledi_pic): Ditto.
	(atomic_compare_and_swap_single<mode>): Define and use argument
	for success model.
	(atomic_compare_and_swap_double<mode>): Ditto.
	* configure.ac: Check if assembler support HLE prefixes.
	* configure: Regenerate.
	* config.in: Ditto.

2012-05-02  Steven Bosscher  <steven@gcc.gnu.org>

	PR middle-end/53153
	* gimplify.c (preprocess_case_label_vec_for_gimple): New function,
	split out from ...
	(gimplify_switch_expr): ... here.
	* gimple.h (preprocess_case_label_vec_for_gimple): Add prototype.
	* tree-ssa-forwprop.c (simplify_gimple_switch_label_vec): New function
	to clean up case labels with values outside the index type range.
	(simplify_gimple_switch): Call it if something changed.
	Remove strange and unnecessary assert.

2012-05-02  Richard Guenther  <rguenther@suse.de>

	* fold-const.c (div_if_zero_remainder): sizetypes no longer
	sign-extend.
	(int_const_binop_1): New worker for int_const_binop with
	overflowable parameter.  Pass it through to force_fit_type_double.
	(int_const_binop): Wrap around int_const_binop_1 with overflowable
	equal to one.
	(size_binop_loc): Call int_const_binop_1 with overflowable equal
	to minus one, forcing overflow detection for even unsigned types.
	(extract_muldiv_1): Remove bogus TYPE_IS_SIZETYPE special-casing.
	(fold_binary_loc): Call try_move_mult_to_index with signed offset.
	* stor-layout.c (initialize_sizetypes): sizetypes no longer
	sign-extend.
	(layout_type): For zero-sized arrays ignore overflow on the
	size calculations.
	* tree-ssa-ccp.c (bit_value_unop_1): Likewise.
	(bit_value_binop_1): Likewise.
	* tree.c (double_int_to_tree): Likewise.
	(double_int_fits_to_tree_p): Likewise.
	(force_fit_type_double): Likewise.
	(host_integerp): Likewise.
	(int_fits_type_p): Likewise.
	* varasm.c (output_constructor_regular_field): Sign-extend the
	field-offset to cater for negative offsets produced by the Ada
	frontend.
	* omp-low.c (extract_omp_for_data): Convert the loop step to
	signed for pointer adjustments.

2012-05-02  Richard Guenther  <rguenther@suse.de>

	* tree.c (valid_constant_size_p): New function.
	* tree.h (valid_constant_size_p): Declare.
	* cfgexpand.c (expand_one_var): Adjust check for too large
	variables by using valid_constant_size_p.
	* varasm.c (assemble_variable): Likewise.

	* c-decl.c (grokdeclarator): Properly check for sizes that
	cover more than half of the address-space.

2012-05-02  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/53163
	* tree-ssa-phiopt.c (cond_if_else_store_replacement): Don't ignore
	return value from compute_all_dependences.

	PR rtl-optimization/53160
	* ree.c (combine_reaching_defs): Handle the case where cand->insn
	has been modified by ree pass already.

2012-05-01  Ian Lance Taylor  <iant@google.com>

	PR c/37303
	* c-decl.c (build_compound_literal): Make the decl readonly if it
	an array of a readonly type.
	* gimplify.c (gimplify_compound_literal_expr): Add fallback
	parameter.  Change all callers.  If the decl is not addressable
	and is not an l-value, make it readonly.

2012-05-01  Bernd Schmidt  <bernds@codesourcery.com>

	* ira.c (allocated_reg_info_size): New static variable.
	(expand_reg_info): Manage it. Call
	setup_preferred_alternate_classes_for_new_pseudos.
	(ira): Don't do it here.  Remove local allocated_reg_info_size,
	set the global before calling find_moveable_pseudos.
	(find_moveable_pseudos): Call expand_reg_info rather than
	resize_reg_info.

2012-05-01  Richard Henderson  <rth@redhat.com>

	* common.opt (fsync-libcalls): New.
	* doc/invoke.texi: Document it.
	* optabs.c (init_sync_libfuncs): Honor it.

2012-05-01  Kenneth Zadeck  <zadeck@naturalbridge.com>
	    Richard Sandiford  <r.sandiford@uk.ibm.com>

	PR rtl-optimization/52543
	* Makefile.in (lower-subreg.o, target-globals.o): Depend on
	lower-subreg.h.
	* lower-subreg.h: New file.
	* target-globals.h (this_target_lower_subreg): Declare.
	(target_globals): Add lower_subreg;
	(restore_target_globals): Restore this_target_lower_subreg.
	* target-globals.c: Include it.
	(default_target_globals): Add default_target_lower_subreg.
	(save_target_globals): Initialize target_lower_subreg.
	* rtl.h (init_lower_subreg): Added declaration.
	* toplev.c (backend_init_target): Call initializer for lower-subreg
	pass.
	* lower-subreg.c (LOG_COSTS, FORCE_LOWERING): New macros.
	(default_target_lower_subreg): New variable.
	(this_target_lower_subreg): Likewise.
	(twice_word_mode, choices): New macros.
	(shift_cost, compute_splitting_shift, compute_costs)
	(init_lower_subreg): New functions.
	(resolve_simple_move): Add speed_p argument.  Check choices.
	(find_pseudo_copy): Don't check the mode size here.
	(resolve_simple_move): Assert the mode size.
	(find_decomposable_shift_zext): Add speed_p argument and return
	a bool.  Check choices.
	(resolve_shift_zext): Add comment.
	(dump_shift_choices, dump_choices): New functions.
	(decompose_multiword_subregs): Dump list of profitable
	transformations.  Add code to skip non profitable transformations.
	Update calls to simple_move and find_decomposable_shift_zext.

2012-05-01  Ian Bolton  <ian.bolton@arm.com>
	    Sameera Deshpande  <sameera.deshpande@arm.com>
	    Greta Yorsh  <greta.yorsh@arm.com>

	* config/arm/arm-protos.h (thumb_unexpanded_epilogue): Rename to...
	(thumb1_unexpanded_epilogue): ...this.
	* config/arm/arm.c (thumb_unexpanded_epilogue): Rename to...
	(thumb1_unexpanded_epilogue): ...this.
	* config/arm/arm.md (thumb_unexpanded_epilogue): Rename to...
	(thumb1_unexpanded_epilogue): ...this.

2012-05-01  Richard Earnshaw  <rearnsha@arm.com>

	* arm/linux-eabi.h (GLIBC_DYNAMIC_LINKER_DEFAULT): Avoid ifdef
	comparing enumeration values.  Update comments.

2012-05-01  Alan Modra  <amodra@gmail.com>

	PR target/53038
	* config/rs6000/rs6000.c (load_lr_save, restore_saved_lr,
	load_cr_save, add_crlr_cfa_restore): New functions.
	(rs6000_restore_saved_cr): Rename to..
	(restore_saved_cr): ..this.  Add cfa_restore notes for cr.
	(rs6000_emit_epilogue): Use new functions.  Adjust condition
	for emitting lr and cr cfa_restore.  Emit cfa_restores for fp
	regs when using out-of-line restore only when shrink wrapping.

2012-04-30  Uros Bizjak  <ubizjak@gmail.com>

	PR middle-end/53136
	* ipa-prop.c (ipa_print_node_jump_functions): Wrap multiple
	calls to cgraph_node_name in xstrdup.
	(ipa_make_edge_direct_to_target): Ditto.
	* cgraph.c (dump_cgraph_node): Ditto.
	* tree-sra.c (convert_callers_for_node): Ditto.
	* lto-symtab.c (lto_cgraph_replace_node): Ditto.
	* ipa-cp.c (perhaps_add_new_callers): Ditto.
	* cgraphunit.c (cgraph_redirect_edge_call_stmt_to_callee): Ditto.
	(cgraph_materialize_all_clones): Ditto.
	* ipa-inline.c (report_inline_failed_reason): Ditto.
	(want_early_inline_function_p): Ditto.
	(edge_badness): Ditto.
	(update_edge_key): Ditto.
	(flatten_function): Ditto.
	(ipa_inline): Ditto.
	(inline_always_inline_functions): Ditto.
	(early_inline_small_functions): Ditto.

2012-04-30  Uros Bizjak  <ubizjak@gmail.com>

	PR target/53141
	* config/i386/i386.md (*umul<mode><dwi>3_1): Switch places of
	constraints 0 and 1.

012-04-30  Jan Hubicka  <jh@suse.cz>

	* cgraph.c (ld_plugin_symbol_resolution_names): Move to symtab.c
	(cgraph_asm_nodes, cgraph_asm_last_node): Move to cgraphunit.c
	(cgraph_add_to_same_comdat_group): Remove.
	(cgraph_add_asm_node): Move to cgraphunit.c.
	(cgraph_make_decl_local): Move to symtab.c
	(cgraph_make_node_local_1): Update.
	(cgraph_can_remove_if_no_direct_calls_and): Update.
	(used_from_object_file_p): Update.
	(resolution_used_from_other_file_p): Move to symtab.c
	(cgraph_used_from_object_file_p): move to symtab.c
	(verify_cgraph_node): Verify same comdat groups.
	* cgraph.h (cgraph_asm_node): Rename to ...
	(asm_node): ... this one.
	(cgraph_asm_nodes): Rename to ...
	(asm_nodes): ... this one.
	(symtab_add_to_same_comdat_group): New function.
	(symtab_dissolve_same_comdat_group_list): New function.
	(symtab_used_from_object_file_p): Declare.
	(symtab_make_decl_local): Declare.
	(cgraph_add_to_same_comdat_group): Remove.
	(cgraph_add_asm_node): Remove.
	(cgraph_used_from_object_file_p, varpool_used_from_object_file_p):
	Remove.
	(cgraph_finalize_compilation_unit): Rename to ...
	(finalize_compilation_unit): ... this one.
	(cgraph_optimize): Rename to ....
	(compile): ... this one.
	(add_asm_node): Declare.
	(fixup_same_cpp_alias_visibility): Declare.
	(cgraph_make_decl_local): Remove.
	(varpool_assemble_pending_decls): Rename to ...
	(varpool_output_variables): ... this one.
	(varpool_remove_unreferenced_decls): Remove.
	* ipa-inline-transform.c (clone_inlined_nodes): Dissolve comdat groups.
	(preserve_function_body_p): Make static.
	* toplev.c (compile_file): Update comments; update.
	* cgraphunit.c: Update comments.
	(cgraph_expand_all_functions): Rename to ...
	(expand_all_functions): ... this one; update.
	(cgraph_mark_functions_to_output): Rename to ...
	(mark_functions_to_output): ... this one; cleanup.
	(cgraph_output_pending_asms): Remove prototype.
	(asm_nodes, asm_last_node): New static vars.
	(cgraph_process_new_functions): Update.
	(cgraph_reset_node): Cleanup; add comment.
	(cgraph_add_new_function): Update.
	(cgraph_output_pending_asms): Rename to ...
	(output_asm_statements): ... this one.
	(add_asm_node): New function.
	(fixup_same_cpp_alias_visibility): New function based on code
	in cgraph_analyze_function.
	(cgraph_analyze_function): Use it.
	(cgraph_order_sort): Update.
	(cgraph_output_in_order): Update.
	(cgraph_function_versioning): Update.
	(cgraph_optimize): Rename to ...
	(compile): ... this one; initialize streamer hooks here.
	(cgraph_finalize_compilation_unit): Rename to ...
	(finalize_compilation_unit): ... this one; do not initialize streamer
	hook here.
	* lto-streamer-out.c (lto_output_toplevel_asms): Update.
	* dwarf2out.c: Update ocmment.
	* optimize.c (maybe_clone_body): Use symtab_add_to_same_comdat_group.
	* method.c (use_thunk): Likewise.
	* semantics.c (maybe_add_lambda_conv_op): Likewise.
	* decl2.c (maybe_emit_vtables): Likewise.
	(cp_write_global_declarations): Use finalize_compilation_unit.
	* parser.c (cp_parser_asm_definition): Use add_asm_node.
	* lto-streamer-in.c (lto_input_toplevel_asms): Use add_asm_node
	* c-decl.c (c_write_global_declarations): Use
	finalize_compilation_unit.
	* langhooks.c (write_global_declarations): Update.
	* ipa.c (cgraph_externally_visible_p): Update.
	(dissolve_same_comdat_group_list): Remove.
	(function_and_variable_visibility): Update.
	* symtab.c: Inlcude lto-streamer.h and rtl.h
	(ld_plugin_symbol_resolution_names): New.
	(symtab_add_to_same_comdat_group): New.
	(symtab_dissolve_same_comdat_group_list): New.
	(resolution_used_from_other_file_p): Move here from cgraph.c
	(symtab_used_from_object_file_p): New.
	(symtab_make_decl_local): New.
	* passes.c (register_pass): Update comments.
	* c-parser.c (c_parser_asm_definition): Update.
	* varpool.c (varpool_analyze_node): Use
	fixup_same_cpp_alias_visibility.
	(varpool_remove_unreferenced_decls): Make static.
	(varpool_assemble_pending_decls): Rename to ...
	(varpool_output_variables): ... this one; call
	varpool_remove_unreferenced_decls.
	(varpool_used_from_object_file_p): Remove.

2012-04-30  Marc Glisse  <marc.glisse@inria.fr>

	PR c++/51033
	* c-typeck.c (build_array_ref): Call
	convert_vector_to_pointer_for_subscript.
	* doc/extend.texi (Vector Extensions): Subscripting not just for C.

2012-04-30  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.md (and<mode>3): Change runtime operand mode checks
	to compile-time "mode == <MODE>mode" checks.
	(and splitter): Ditto.

2012-04-30  Richard Henderson  <rth@redhat.com>

	* config/arm/arm.md (UNSPEC_LL): New.
	* config/arm/sync.md (atomic_loaddi, atomic_loaddi_1): New.
	(arm_load_exclusivedi): Use %H0.

2012-04-30  Jason Merrill  <jason@redhat.com>

	* dwarf2out.c (comdat_symbol_id): Add const.
	(union die_symbol_or_type_node): Add const to die_symbol.
	(output_die_symbol, output_die, output_comp_unit): Adjust.

2012-04-30  Andrew Stubbs  <ams@codesourcery.com>

	* config/arm/arm.md (negdi2): Use gen_negdi2_neon.
	* config/arm/neon.md (negdi2_neon): New insn.
	Also add splitters for core and NEON registers.

2012-04-30  Andrew Stubbs  <ams@codesourcery.com>

	* config/arm/arm.c (neon_valid_immediate): Allow const_int.
	(arm_print_operand): Add 'x' format.
	* config/arm/constraints.md (Dn): Allow const_int.
	* config/arm/neon.md (neon_mov<mode>): Use VDX to allow DImode.
	Use 'x' format to print constants.
	* config/arm/predicates.md (imm_for_neon_mov_operand): Allow const_int.
	* config/arm/vfp.md (movdi_vfp): Disable for const_int when neon
	is enabled.
	(movdi_vfp_cortexa8): Likewise.

2012-04-30  Ian Bolton  <ian.bolton@arm.com>
	    Sameera Deshpande  <sameera.deshpande@arm.com>
	    Greta Yorsh	 <greta.yorsh@arm.com>

	* config/arm/arm-protos.h (ldm_stm_operation_p): New declaration.
	* config/arm/arm.c (ldm_stm_operation_p): New function.
	* config/arm/predicates.md (load_multiple_operation): Update predicate.
	(store_multiple_operation): Likewise.

	* config/arm/arm-protos.h (ldm_stm_operation_p): New parameters.
	* config/arm/arm.c (ldm_stm_operation_p): New parameters.
	* config/arm/predicates.md (load_multiple_operation): Add arguments.
	(store_multiple_operation): Likewise.

2012-04-30  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.md (and<mode>3): Expand masking operations with
	0xff, 0xffff or 0xffffffff immediates to corresponding zero_extend RTX.
	(and splitter): Split to DImode zero_extend RTX for DImode operand[0].

2012-04-30  Dodji Seketeli  <dodji@redhat.com>

	Add -Wvarargs option
	* builtins.c (fold_builtin_next_arg):  Use OPT_Wvarargs as an
	argument for the various warning_at calls.
	* docs/invoke.texi: Update the documentation.

2012-04-30  Dodji Seketeli  <dodji@redhat.com>

	Switch -ftrack-macro-expansion=2 on by default.
	* docs/cppopts.texi: Adjust for enabling -ftrack-macro-expansion=2
	by default.

	Fix va_start related location
	* builtins.c (fold_builtin_next_arg): Unwinds to the first
	location in real source code.

	Make conversion warnings work on NULL with -ftrack-macro-expansion
	* input.h (expansion_point_location_if_in_system_header): Declare
	new function.
	* input.c (expansion_point_location_if_in_system_header): Define it.

	Fix -Wuninitialized for -ftrack-macro-expansion
	* tree-ssa.c (warn_uninit): Use the spelling location of the variable
	declaration.  Use linemap_location_before_p for source locations.

	Strip "<built-in>" loc from displayed expansion context
	* input.c (expand_location_1): When expanding to spelling location
	in a context of a macro expansion, skip reserved system header
	locations.  Update comments.  * tree-diagnostic.c
	(maybe_unwind_expanded_macro_loc): Likewise.

	Make expand_location resolve to locus in main source file
	* input.c (expand_location_1): New.  Takes a parameter to choose
	whether to resolve the location to spelling or expansion point.
	Was factorized from ...
	(expand_location): ... here.
	(expand_location_to_spelling_point): New.  Implemented in terms of
	expand_location_1.
	* diagnostic.c (diagnostic_build_prefix): Use the new
	expand_location_to_spelling_point instead of expand_location.

	Fix PCH crash on GTYed pointer-to-scalar field of a struct
	* gengtype.c (write_types_process_field): Force second argument of
	the call to the PCH object hierarchy walker to be 'x'.

2012-04-30  Eric Botcazou  <ebotcazou@adacore.com>

	* config/i386/i386.c (ix86_handle_struct_attribute): Use the proper
	predicate to discriminate types.

2012-04-30  Manuel López-Ibáñez  <manu@gcc.gnu.org>

	* doc/invoke.texi (Wmissing-format-attribute): Document as an
	alias of Wsuggest-attribute=format.
	* c-typeck.c (convert_for_assignment): Replace
	Wmissing-format-attribute with Wsuggest-attribute=format.
	(digest_init): Likewise.

2012-04-29  Manuel López-Ibáñez  <manu@gcc.gnu.org>

	* opts.c (finish_options): Do not handle -Wmissing-noreturn here.
	* common.opt (Wmissing-noreturn): Alias of
	-Wsuggest-attribute=noreturn.

2012-04-29  Hans-Peter Nilsson  <hp@axis.com>

	PR target/53156
	* config/cris/cris.md (andqu): New peephole2.
	(andu): Tweak head comment.

2012-04-28  Joern Rennecke  <joern.rennecke@embecosm.com>
	    Steven Bosscher  <steven@gcc.gnu.org>
	    Maxim Kuvyrkov  <maxim@codesourcery.com>

	PR tree-optimization/38785
	* common.opt (ftree-partial-pre): New option.
	* doc/invoke.texi: Document it.
	* opts.c (default_options_table): Initialize flag_tree_partial_pre.
	* tree-ssa-pre.c (do_partial_partial_insertion): Insert only if it will
	benefit speed path.
	(execute_pre): Use flag_tree_partial_pre.

2012-04-27  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>

	PR target/52999
	* config/pa/pa.c (pa_legitimate_constant_p): Don't put function labels
	in constant pool.

2012-04-27  Ollie Wild  <aaw@google.com>

	* doc/invoke.texi (Wliteral-suffix): Document new option.

2012-04-27  Tom Tromey  <tromey@redhat.com>

	* dwarf2out.c (dwarf_stack_op_name): Use get_DW_OP_name.
	(dwarf_tag_name): Use get_DW_TAG_name.
	(dwarf_attr_name): Use get_DW_AT_name.
	(dwarf_form_name): Use get_DW_FORM_name.
	* dwarf2cfi.c (dwarf_cfi_name): Use get_DW_CFA_name.

2012-04-27  Paolo Bonzini  <bonzini@gnu.org>

	* tree-ssa-phiopt.c (conditional_replacement): Replace PHIs whose
	arguments are -1 and 0, by negating the result of the conditional.

2012-04-27  Paolo Bonzini  <bonzini@gnu.org>

	PR target/53138
	* config/i386/i386.md (x86_mov<mode>cc_0_m1_neg): Add clobber.

2012-04-27  Richard Guenther  <rguenther@suse.de>

	* tree-flow.h (is_hidden_global_store): Remove.
	* tree-ssa-sink.c (is_hidden_global_store): Likewise.
	* tree-ssa-alias.h (ref_may_alias_global_p): Declare.
	(stmt_may_clobber_global_p): Likewise.
	* tree-ssa-alias.c (ref_may_alias_global_p): New function.
	(stmt_may_clobber_global_p): Likewise.
	* tree-ssa-dce.c (mark_stmt_if_obviously_necessary): Call
	stmt_may_clobber_global_p.
	* tree-ssa-dse.c (dse_possible_dead_store_p): Likewise.

2012-04-27  Steven Bosscher  <steven@gcc.gnu.org>

	* cfg.c (disconnect_src): Do df_mark_solutions_dirty in the right
	place.

	* tree-switch-conversion.c (struct switch_conv_info): Add range_max,
	reorganize some fields and update comments.  Rename bit_test_uniq
	and bit_test_count to uniq resp. count.  Remove bit_test_bb.
	(collect_switch_conv_info): New function, collects info about a
	GIMPLE_SWITCH into a struct switch_conv_info.
	(check_range): Simplify to use pre-recorded info.  Fix think-o in
	range-branch ratio check.
	(check_process_case): Remove function.
	(check_all_empty_except_final): New function, verifies that all
	non-final basic blocks are empty.
	(process_switch): Simplify to use pre-recorded info.  Call
	collect_switch_conv_info to do that.  Assert that degenerate switch
	statements have been cleaned up.

2012-04-27  Marc Glisse  <marc.glisse@inria.fr>

	PR middle-end/27139
	* tree-ssa-forwprop.c (combine_conversions): Handle INT->FP->INT.

2012-04-25  Manuel López-Ibáñez  <manu@gcc.gnu.org>

	PR c/53130
	* c-typeck.c (pop_init_level): Use %qD instead of %qT.

2012-04-27  Tom de Vries  <tom@codesourcery.com>

	PR tree-optimization/51879
	* tree-ssa-sccvn.h (struct vn_reference_s): Add result_vdef field.
	* tree-ssa-sccvn.c (mark_use_processed): New function, factored out
	of ...
	(defs_to_varying): ... here.  Don't set use_processed.
	(visit_reference_op_call): Handle gimple_vdef.
	Handle case that lhs is NULL_TREE.
	(visit_use): Use mark_use_processed.  Handle calls with side-effect
	using visit_reference_op_call.

2012-04-26  Richard Sandiford  <richard.sandiford@linaro.org>

	* sched-deps.c (fixup_sched_groups): Rename to...
	(chain_to_prev_insn): ...this.
	(chain_to_prev_insn_p): New function.
	(deps_analyze_insn): Use it instead of SCHED_GROUP_P.

2012-04-26  Richard Sandiford  <richard.sandiford@linaro.org>

	* sched-int.h (_haifa_insn_data): Move priority_status.
	Add model_index.
	(INSN_MODEL_INDEX): New macro.
	* haifa-sched.c (insn_delay): New function.
	(sched_regno_pressure_class): Update commentary.
	(mark_regno_birth_or_death): Pass the liveness bitmap and
	pressure array as arguments, instead of using curr_reg_live and
	curr_reg_pressure.  Only update the pressure if the bit in the
	liveness set has changed.
	(initiate_reg_pressure_info): Always trust the live-in set for
	SCHED_PRESSURE_MODEL.
	(initiate_bb_reg_pressure_info): Update call to
	mark_regno_birth_or_death.
	(dep_list_size): Take the list as argument.
	(calculate_reg_deaths): New function, extracted from...
	(setup_insn_reg_pressure_info): ...here.
	(MODEL_BAR): New macro.
	(model_pressure_data, model_insn_info, model_pressure_limit)
	(model_pressure_group): New structures.
	(model_schedule, model_worklist, model_insns, model_num_insns)
	(model_curr_point, model_before_pressure, model_next_priority):
	New variables.
	(MODEL_PRESSURE_DATA, MODEL_MAX_PRESSURE, MODEL_REF_PRESSURE)
	(MODEL_INSN_INFO, MODEL_INSN): New macros.
	(model_index, model_update_limit_points_in_group): New functions.
	(model_update_limit_points, model_last_use_except): Likewise.
	(model_start_update_pressure, model_update_pressure): Likewise.
	(model_recompute, model_spill_cost, model_excess_group_cost): Likewise.
	(model_excess_cost, model_dump_pressure_points): Likewise.
	(model_set_excess_costs): Likewise.
	(rank_for_schedule): Extend SCHED_PRIORITY_WEIGHTED ordering to
	SCHED_PRIORITY_MODEL.  Use insn_delay.  Use the order in the model
	schedule as an alternative tie-breaker.  Update the call to
	dep_list_size.
	(ready_sort): Call model_set_excess_costs.
	(update_register_pressure): Update call to mark_regno_birth_or_death.
	Rely on that function to check liveness rather than doing it here.
	(model_classify_pressure, model_order_p, model_add_to_worklist_at)
	(model_remove_from_worklist, model_add_to_worklist, model_promote_insn)
	(model_add_to_schedule, model_analyze_insns, model_init_pressure_group)
	(model_record_pressure, model_record_pressures): New functions.
	(model_record_final_pressures, model_add_successors_to_worklist)
	(model_promote_predecessors, model_choose_insn): Likewise.
	(model_reset_queue_indices, model_dump_pressure_summary): Likewise.
	(model_start_schedule, model_finalize_pressure_group): Likewise.
	(model_end_schedule): Likewise.
	(schedule_insn): Say when we're scheduling the next instruction
	in the model schedule.
	(schedule_insn): Handle SCHED_PRESSURE_MODEL.
	(queue_to_ready): Do not add instructions that are
	MAX_SCHED_READY_INSNS beyond the current point of the model schedule.
	Always allow the next instruction in the model schedule to be added.
	(debug_ready_list): Print the INSN_REG_PRESSURE_EXCESS_COST_CHANGE
	and delay for SCHED_PRESSURE_MODEL too.
	(prune_ready_list): Extend SCHED_PRIORITY_WEIGHTED handling to
	SCHED_PRIORITY_MODEL, but also take the DFA into account.
	(schedule_block): Call model_start_schedule and model_end_schedule.
	Extend SCHED_PRIORITY_WEIGHTED stall handling to SCHED_PRIORITY_MODEL.
	(sched_init): Extend INSN_REG_PRESSURE_EXCESS_COST_CHANGE handling
	to SCHED_PRESSURE_MODEL, but don't allocate saved_reg_live or
	region_ref_regs.
	(sched_finish): Update accordingly.
	(fix_tick_ready): Extend INSN_REG_PRESSURE_EXCESS_COST_CHANGE handling
	to SCHED_PRESSURE_MODEL.
	(add_jump_dependencies): Update call to dep_list_size.
	(haifa_finish_h_i_d): Fix leak of max_reg_pressure.
	(haifa_init_insn): Extend INSN_REG_PRESSURE_EXCESS_COST_CHANGE handling
	to SCHED_PRESSURE_MODEL.
	* sched-deps.c (init_insn_reg_pressure_info): Likewise, but don't
	allocate INSN_MAX_REG_PRESSURE for SCHED_PRESSURE_MODEL.
	(sched_analyze_insn): Extend INSN_REG_PRESSURE_EXCESS_COST_CHANGE
	handling to SCHED_PRESSURE_MODEL.

2012-04-26  Richard Sandiford  <richard.sandiford@linaro.org>

	* common.opt (fsched-pressure-algorithm=): New option.
	* flag-types.h (sched_pressure_algorithm): New enum.
	* sched-int.h (sched_pressure_p): Replace with...
	(sched_pressure): ...this new variable.
	* haifa-sched.c (sched_pressure_p): Replace with...
	(sched_pressure): ...this new variable.
	(sched_regno_pressure_class, rank_for_schedule, ready_sort)
	(update_reg_and_insn_max_reg_pressure, schedule_insn)
	(debug_ready_list, prune_ready_list, schedule_block, sched_init)
	(sched_finish, fix_tick_ready, haifa_init_insn): Update accordingly.
	* sched-deps.c (init_insn_reg_pressure_info): Likewise.
	(sched_analyze_insn): Likewise.
	* sched-rgn.c (schedule_region): Likewise.
	* config/m68k/m68k.c (m68k_sched_variable_issue): Likewise.

2012-04-26  Bernd Schmidt  <bernds@codesourcery.com>

	* PR middle-end/52997
	* ira.c (find_moveable_pseudos): Call resize_reg_info.

	PR middle-end/52940
	* machmode.h (CLASS_HAS_WIDER_MODES_P): True for MODE_PARTIAL_INT.
	* expr.c (convert_move): Honor unsignedp when extending partial int
	modes.
	* genmodes.c (complete_mode): Don't clear component field of partial
	int modes.
	(emit_mode_inner): Don't emit it however.
	(calc_wider_mode): Partial int modes widen to their component.

2012-04-26  David S. Miller  <davem@davemloft.net>

	* config/sparc/niagara4.md: New file.
	* config/sparc/sparc.md: Include it.
	* config/sparc/sparc.c (niagara4_costs): New processor costs.
	(sparc_option_override): Use it.
	(sparc_use_sched_lookahead): Return 2 for niagara4.
	(sparc_issue_rate): Likewise.

	* config/sparc/sparc.md (attr type): Delete 'fgm_cmp'.
	(fpack16_vis, fpackfix_vis, fpack32_vis): Set type to fgm_pack.
	(fmul8x16_vis, fmul8x16au_vis, fmul8x16al_vis, fmul8sux16_vis,
	fmul8ulx16_vis, fmuld8sux16_vis, fmuld8ulx16_vis): Set type to fgm_mul.
	(alignaddrsi_vis, alignaddrdi_vis, alignaddrlsi_vis,
	alignaddrldi_vis): Set type to gsr.
	(pdist_vis, pdistn<mode>_vis): Set type to fgm_pdsit.
	(fcmp<code><GCM:gcm_name><P:mode>_vis, cmask8<P:mode>_vis,
	cmask16<P:mode>_vis, cmask32<P:mode>_vis, fchksm16_vis,
	v<vis3_shift_patname><mode>3, fmean16_vis,
	fp<plusminus_insn>64_vis, <vis3_addsub_ss_patname><mode>3,
	fucmp<code>8<P:mode>_vis): Set type to fga.
	* config/sparc/ultra1_2.md: Remove refrences to fgm_cmp.
	* config/sparc/niagara.md: Likewise.
	* config/sparc/niagara2.md: Likewise.
	* config/sparc/ultra3.md: Likewise, and fix type matching for
	us3_ialuX reservation.

2012-04-26  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>

	* reload.c (find_reloads): Change the loop nesting when trying an
	alternative with swapped operands.

2012-04-26  Manuel López-Ibáñez  <manu@gcc.gnu.org>

	* tree-diagnostic.c (maybe_unwind_expanded_macro_loc): Fix
	comment. Delete unused parameter first_exp_point_map.
	(virt_loc_aware_diagnostic_finalizer): Update call.

2012-04-26  Michael Hope  <michael.hope@linaro.org>
	    Richard Earnshaw  <rearnsha@arm.com>

	* config/arm/linux-eabi.h (GLIBC_DYNAMIC_LINKER_SOFT_FLOAT): Define.
	(GLIBC_DYNAMIC_LINKER_HARD_FLOAT): Define.
	(GLIBC_DYNAMIC_LINKER_DEFAULT): Define.
	(GLIBC_DYNAMIC_LINKER):	Redefine to use the hard float path.

2012-04-25  Sriraman Tallam  <tmsriram@google.com>

	* doc/extend.texi: Document avx2 support.
	* config/i386/i386.c (fold_builtin_cpu): Add avx2.

2012-04-26  Hans-Peter Nilsson  <hp@axis.com>

	PR target/53120
	* config/cris/cris.md ("*andhi_lowpart_v32")
	("*andqi_lowpart_v32"): Change first input-only operand from
	a (match_operand ...) to (match_dup 0).  Drop alternatives with
	const_int-matching constraints for redundancy.
	("*andhi_lowpart_non_v32", "*andqi_lowpart_non_v32"): Ditto.  Drop
	three-operand alternative.

2012-04-25  Jakub Jelinek  <jakub@redhat.com>

	PR target/53110
	* config/i386/i386.md (and<mode>3): For andq $0xffffffff, reg
	instead expand it as zero extension.

2012-04-25  H.J. Lu  <hongjiu.lu@intel.com>

	PR debug/52857
	* dwarf2out.c (dbx_reg_number): Assert return value != INVALID_REGNUM.

2012-04-25  Jakub Jelinek  <jakub@redhat.com>

	* common.opt (flag_debug_types_section): Default to 0.
	(dwarf_version): Default to 4.
	(dwarf_record_gcc_switches): Default to 1.
	(dwarf_strict): Default to 0.
	* toplev.c (process_options): Don't handle dwarf_strict
	or dwarf_version here.
	* config/vxworks.c (vxworks_override_options): Don't
	test whether dwarf_strict or dwarf_version are negative,
	instead test !global_options_set.x_dwarf_*.
	* config/darwin.c (darwin_override_options): Default to
	dwarf_version 2.
	* doc/invoke.texi: Note that -gdwarf-4, -grecord-gcc-switches
	and -fno-debug-types-section are now the default.

2012-04-25  Jan Hubicka  <jh@suse.cz>

	* cgraphunit.c: Update toplevel comment.
	(tree_rest_of_compilation): Merge into cgraph_expand_function.
	(cgraph_analyze_function): Make static.
	(cgraph_decide_is_function_needed): Make static.
	(cgraph_add_new_function): Use expand_function instead of
	rest_of_compilation.
	(clone_of_p, verify_edge_count_and_frequency, cgraph_debug_gimple_stmt,
	verify_edge_corresponds_to_fndecl, verify_cgraph_node, verify_cgraph):
	Move to cgraph.c
	(cgraph_inline_p): Remove.
	(cgraph_preserve_function_body_p): Move to ipa-inline-transform.
	(init_cgraph): Add comment.
	* cgraphbuild.c (record_reference, mark_address, mark_load,
	mark_store): Do not call analyze_expr hook.
	* cgraph.c: Update toplevel comment.
	(clone_of_p, verify_edge_count_and_frequency, cgraph_debug_gimple_stmt,
	verify_edge_corresponds_to_fndecl, verify_cgraph_node, verify_cgraph):
	Move fere from cgraphunit.c
	(cgraph_mark_force_output_node): Move to cgraph.h
	* cgraph.h: Reorder so the comments match the function placement.
	(cgraph_analyze_function, cgraph_decide_is_function_needed): Remove.
	(cgraph_mark_force_output_node): Move here from cgraph.c
	* tree.c (free_lang_data): Do not clear analyze_expr hook.
	* ipa-inline-transform.c (preserve_function_body_p): New function.
	(inline_transform): Update.
	* langhooks.c (lhd_callgraph_analyze_expr): Remove.
	* langhooks.h (lang_hooks_for_callgraph): Remove.
	(lang_hooks): Remove callgraph.
	* tree-inline.c (expand_call_inline): Do not use cgraph_inline_p.
	* varpool.c: Remove out of date comment.
	* langhooks-def.h (lhd_callgraph_analyze_expr): Remove.
	(LANG_HOOKS_CALLGRAPH_ANALYZE_EXPR): Remove.

2012-04-25  Jan Hubicka  <jh@suse.cz>

	PR middle-end/53089
	* cgraphunit.c (referred_to_p): Move ahead in file to avoid
	forward declaration.
	(cgraph_finalize_function): Finalize them here.
	* symtab.c (dump_symtab): Dump ctors and dtors.

2012-04-25  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/52979
	* stor-layout.c (get_best_mode): Don't return mode with bitsize
	larger than maxbits.  Don't compute maxbits modulo align.
	Also check that unit bytes long store at bitpos / unit * unit
	doesn't affect bits beyond bitregion_end.
	* expmed.c (store_bit_field_1): Avoid trying insv if OP_MODE MEM
	would not fit into bitregion_start ... bitregion_end + 1 bit region.
	(store_split_bit_field): Decrease unit close to end of bitregion_end
	if access is restricted in order to avoid mutual recursion.

	PR tree-optimization/53058
	* double-int.h (double_int_max_value, double_int_min_value): New
	prototypes.
	* double-int.c (double_int_max_value, double_int_min_value): New
	functions.
	* tree-vrp.c (register_edge_assert_for_2): Compare mask for LE_EXPR
	or GT_EXPR with double_int_max_value instead of double_int_mask.

2012-04-25  Richard Guenther  <rguenther@suse.de>

	* tree-vectorizer.h (vect_loop_versioning): Adjust prototype.
	* tree-vect-loop.c (vect_transform_loop): Adjust.
	* tree-vect-loop-manip.c (vect_do_peeling_for_loop_bound): Record
	the maximum number of iterations for the epilogue loop.
	(vect_loop_versioning): Remove case re-using the peeled epilogue loop.

2012-04-25  Jakub Jelinek  <jakub@redhat.com>

	PR c/52880
	* c-typeck.c (set_nonincremental_init,
	set_nonincremental_init_from_string): Pass true instead of false
	as IMPLICIT to add_pending_init.

2012-04-25  Manuel López-Ibáñez  <manu@gcc.gnu.org>

	* c-typeck.c (pop_init_level): Improve diagnostics.

2012-04-25  Uros Bizjak  <ubizjak@gmail.com>

	* compare-elim.c (try_eliminate_compare): Also handle operands with
	implicit extensions.

2012-04-25  Alan Modra  <amodra@gmail.com>

	* config/rs6000/rs6000 (SAVE_INLINE_VRS, REST_INLINE_VRS,
	V_SAVE_INLINE, SAVRES_LR, SAVRES_SAVE, SAVRES_REG,
	SAVRES_GPR, SAVRES_FPR, SAVRES_VR): Define.
	(no_global_regs_above): Delete.
	(no_global_regs): New function.
	(rs6000_savres_strategy): Handle vector regs.  Use proper lr_save_p
	value for load multiple test.
	(savres_routine_syms): Increase size.
	(rs6000_savres_routine_name, rs6000_savres_routine_sym,
	ptr_regno_for_savres, rs6000_emit_savres_rtx): Pass in int selector
	rather than a number of boolean flags.  Update all callers.
	(rs6000_savres_routine_name): Generate vector save/restore names.
	(rs6000_savres_routine_sym): Handle vector regs.  Delete forward decl.
	(ptr_regno_for_savres, rs6000_emit_savres_rtx): Likewise.
	(rs6000_emit_prologue): Delete saving_FPRs_inline, saving_GPRs_inline
	and using_store_multiple.  Expand uses.  Don't always use r11 as
	frame reg when needed for out-of-line saves.  Set up initial offset
	for out-of-line vector saves when buying stack frame.  Handle pointer
	reg setup for out-of-line fp save.  Emit call to out-of-line vector
	save function.  Choose r11 or r12 for vrsave reg when available for
	better scheduling.
	(rs6000_output_function_prologue): Don't emit .extern for ELF.
	(rs6000_emit_epilogue): Choose a better frame reg when restoring
	from back-chain to suit out-of-line vector restore functions.  Emit
	call to out-of-line vector restore function.  Adjust register used
	for cr restore.  Tweak pointer register setup for gpr restore.
	* config/rs6000/rs6000.h (FIRST_SAVED_GP_REGNO): Take into account
	FIXED_R13.
	* config/rs6000/sysv4.h (FP_SAVE_INLINE, GP_SAVE_INLINE): Simplify.
	(V_SAVE_INLINE): Define.
	* config/rs6000/altivec.md (save_vregs_*, restore_vregs_*): New insns.

2012-04-25  Alan Modra  <amodra@gmail.com>

	* config/rs6000/rs6000.c (rs6000_savres_strategy): Allow
	out-of-line save/restore for large frames.  Don't disable
	out-of-line saves on ABI_AIX when using static chain reg.
	(rs6000_emit_prologue): Adjust cr_save_regno on ABI_AIX to not
	clobber static chain reg, and tweak for out-of-line gpr saves
	that use r1.

2012-04-25  Alan Modra  <amodra@gmail.com>

	* config/rs6000/rs6000.c (START_USE, END_USE, NOT_INUSE): Define.
	(rs6000_emit_prologue): Use the above to catch register overlap.

2012-04-25  Alan Modra  <amodra@gmail.com>

	* config/rs6000/rs6000.c (rs6000_emit_stack_reset): Delete forward
	decl.  Move logic selecting update reg to callers.  Update all callers.
	(rs6000_emit_allocate_stack): Add copy_off param.
	(emit_frame_save): Don't handle reg+reg addressing.
	(ptr_regno_for_savres): New function, extracted from..
	(rs6000_emit_savres_rtx): ..here.  Add lr_offset param.
	(rs6000_emit_prologue): Generate frame_ptr_rtx as we need it.
	Set frame_reg_rtx to r11 whenever r11 is needed, and merge
	frame offset adjustment for out-of-line save with copy from sp.
	Simplify condition controlling whether cr is saved early or
	late.  Use ptr_regno_for_savres to verify correct reg is set
	up for out-of-line saves.  Pass the actual pointer reg used to
	rs6000_emit_savres_rtx so rtl matches insns in out-of-line
	function.  Rearrange spe vars so code is similar to that
	elsewhere in this function.  Don't update frame_off when spe
	save code will restore r11.  Use emit_frame_save for spe and
	gpr saves.  Consolidate darwin out-of-line gpr setup with that
	for other abis.  Don't assume frame_offset is zero and frame
	reg is sp when setting up altivec reg saves, and calculate
	exact offset requirement.
	(rs6000_emit_epilogue): Use HOST_WIDE_INT for frame_off.  Tidy
	spe restore code.  Consolidate darwin out-of-line gpr setup
	with that for other abis.

2012-04-25  Alan Modra  <amodra@gmail.com>

	* config/rs6000/rs6000.c (rs6000_frame_related): Don't emit a
	REG_FRAME_RELATED_EXPR note when the instruction exactly matches
	the replacement.
	(emit_frame_save): Delete frame_ptr param.  Rename total_size to
	frame_reg_to_sp.
	(rs6000_emit_prologue): Add sp_off.  Update rs6000_frame_related
	and emit_frame_save calls.  Cope with possibly missing note.

2012-04-24  Sriraman Tallam  <tmsriram@google.com>

	* config/i386/i386.c (build_processor_model_struct): New function.
	(make_var_decl): New function.
	(fold_builtin_cpu): New function.
	(ix86_fold_builtin): New function.
	(make_cpu_type_builtin): New function.
	(ix86_init_platform_type_builtins): New function.
	(ix86_expand_builtin): Expand new builtins by folding them.
	(ix86_init_builtins): Make new builtins to detect CPU type.
	(TARGET_FOLD_BUILTIN): New macro.
	(IX86_BUILTIN_CPU_INIT): New enum value.
	(IX86_BUILTIN_CPU_IS): New enum value.
	(IX86_BUILTIN_CPU_SUPPORTS): New enum value.
	* config/i386/i386-builtin-types.def: New function type.
	* testsuite/gcc.target/builtin_target.c: New testcase.
	* doc/extend.texi: Document builtins.

2012-04-24  Olivier Hainque  <hainque@adacore.com>

	* common.opt (gdwarf-): Initialize dwarf_version to -1 instead of 2.
	* toplev.c (process_options): Default to dwarf_version 2.
	* config/vxworks.c (vxworks_override_options): Default to strict-dwarf
	and dwarf_version 2.

2012-04-24  Manuel López-Ibáñez  <manu@gcc.gnu.org>

	* tree-pretty-print.h (default_tree_printer): Do not declare.
	* tree-diagnostic.c: Include tree-pretty-print.h, tree-pass.h and
	intl.h.
	(default_tree_diagnostic_starter): Make static.
	(default_tree_printer): Move to here. Make static.
	(tree_diagnostics_defaults): New.
	* tree-diagnostic.h (default_tree_diagnostic_starter): Do not declare.
	* tree.c (free_lang_data): Use tree_diagnostics_defaults.
	* toplev.c: Do not include tree-pass.h.
	(default_tree_printer): Move from here.
	(general_init): Use tree_diagnostics_defaults.

2012-04-24  Chao-ying Fu  <fu@mips.com>

	* config.gcc (mips64*-*-linux*): Append mips/linux-common.h to tm_file.
	(mips*-*-linux*): Append mips/linux-common.h to tm_file.
	* config/mips/gnu-user.h
	(SUBTARGET_CC1_SPEC): Use GNU_USER_TARGET_CC1_SPEC directly.
	(GNU_USER_TARGET_LINK_SPEC): New define.
	(LINK_SPEC): Use GNU_USER_TARGET_LINK_SPEC.
	(LIB_SPEC): Use GNU_USER_TARGET_LIB_SPEC directly.
	(GNU_USER_TARGET_MATHFILE_SPEC): New define.
	(ENDFILE_SPEC): Use GNU_USER_TARGET_MATHFILE_SPEC and
	GNU_USER_TARGET_ENDFILE_SPEC.
	* config/mips/gnu-user64.h (LIB_SPEC): Remove.
	(GNU_USER_TARGET_LINK_SPEC): New define.
	(LINK_SPEC): Use GNU_USER_TARGET_LINK_SPEC.
	* config/mips/linux-common.h: New file.

2012-04-24  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>

	PR target/47197
	* config/rs6000/rs6000-c.c (fully_fold_convert): New function.
	(altivec_build_resolved_builtin): Call fully_fold_convert.

2012-04-24  Georg-Johann Lay  <avr@gjlay.de>

	PR target/53065
	* config/avr/avr.h (HARD_REGNO_CALL_PART_CLOBBERED): New hook define.

2012-04-24  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/53085
	* tree-ssa-pre.c (eliminate): Do not eliminate volatile redundant
	stores.

2012-04-24  Richard Guenther  <rguenther@suse.de>

	* tree-if-conv.c (main_tree_if_conversion): Move bb under
	ENABLE_CHECKING.

2012-04-24  Jim Meyering  <meyering@redhat.com>

	* genattrtab.c (gen_attr): Avoid NULL-deref after diagnosing
	absence of an define_enum call.

2012-04-24  Richard Guenther  <rguenther@suse.de>

	* tree-vect-loop-manip.c (vect_do_peeling_for_loop_bound): If
	the epilogue loop is not re-used as unvectorized version
	record the its maximum number of iterations.

2012-04-24  Andrew Pinski  <apinski@cavium.com>

	* tree-ssa-forwprop.c (simplify_bitwise_binary):
	Don't directly use def1/def2.

2012-04-24  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/53098
	* tree-vect-loop.c (vect_analyze_loop_operations): Fixup
	comparison sign.

2012-04-24  Andrew Pinski  <apinski@cavium.com>

	PR tree-opt/33512
	* tree-ssa-forwprop.c (defcodefor_name): New function.
	(simplify_bitwise_binary): Use defcodefor_name instead of manually
	Simplify "( X | Y) & X" to X and "( X & Y) | X" to X.
	Simplify "(~X | Y) & X" to "X & Y" and
	"(~X & Y) | X" to "X | Y".

2012-04-24  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>

	* recog.c (insn_invalid_p): Add IN_GROUP parameter and use
	validate_change to add clobbers if IN_GROUP is nonzero.
	(verify_changes): Call insn_invalid_p with IN_GROUP set to true.
	* recog.h (insn_invalid_p): Add IN_GROUP parameter to function
	prototype.
	* gcse.c (process_insert_insn): Call insn_invalid_p with IN_GROUP
	set to false.
	* config/s390/s390.c (insn_invalid_p): Likewise.

2012-04-24  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/53084
	* varasm.c (compute_reloc_for_constant): Handle ADDR_EXPR of MEM_REF.
	(output_addressed_constants): Likewise.

	PR middle-end/52999
	* varasm.c (get_section): Don't ICE for section conflicts with
	built-in section kinds.

2012-04-23  DJ Delorie  <dj@redhat.com>

	* config/s390/s390.h (LINK_SPEC): Remove, no longer needed.
	(LIBSTDCXX): Change to CPP2.

2012-04-23  H.J. Lu  <hongjiu.lu@intel.com>

	PR bootstrap/52878
	* opth-gen.awk: Check if MASK_ and TARGET_ macros are defined for
	extra_masks.

2012-04-23  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.md (*add<mode>_2): Add r/r/0 alternative.
	(*addsi_2_zext): Ditto.
	(*add<mode>_3): Ditto.
	(*addsi_3_zext): Ditto.
	(*add<mode>_5): Ditto.

2012-04-23  Andrew Pinski  <apinski@cavium.com>

	* tree-ssa-forwprop.c (simplify_bitwise_binary): Simplify (A & B) OP0
	(C & B) to (A OP0) & B.

2012-04-23  Martin Jambor  <mjambor@suse.cz>

	* expr.c (expand_expr_real_1): Remove setting parent's alias set for
	temporaries created for a bitfield (reverting revision 122014).

2012-04-23  Richard Guenther  <rguenther@suse.de>

	* tree-vect-loop-manip.c (slpeel_add_loop_guard): Gimplify
	the condition using is_gimple_condexpr and avoid the not necessary
	boolification.
	(set_prologue_iterations): Likewise.
	(vect_loop_versioning): Likewise.

2012-04-23  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/53070
	* tree-if-conv.c (combine_blocks): Free predicates in all blocks.
	(main_tree_if_conversion): Verify we succeeded in that.

2012-04-23  Jan Hubicka  <jh@suse.cz>

	* lto-symtab.c (lto_cgraph_replace_node): Do not call
	mark_reahcable_node.
	* cgraph.c (cgraph_remove_node): Do not clear reachable.
	(cgraph_mark_reachable_node): Remove.
	(cgraph_mark_force_output_node): Do not set reachable.
	(dump_cgraph_node): Do not dump reachable.
	(cgraph_create_virtual_clone): Do not set reachable.
	* cgraph.h (cgraph_node): Remove reachable flag.
	(varpool_node): Remove reachable flag.
	(cgraph_mark_if_needed): Remove.
	(cgraph_mark_reachable_node): Remove.
	* tree-emutls.c (ipa_lower_emutls): Do not check reachable.
	* cgraphunit.c (cgraph_finalize_function): Do not mark node as
	reachable.
	(cgraph_add_new_function): Likewise.
	(cgraph_mark_if_needed): Remove.
	(cgraph_analyze_function): Do not set target as reachable.
	(process_function_and_variable_attributes): Do not care about
	dllexport.
	(cgraph_analyze_functions): Do not set reachable flags.
	(cgraph_mark_functions_to_output): Do not check reachability.
	(cgraph_copy_node_for_versioning): Do not set reachable flag.
	(dbxout_expand_expr): Update.
	* c-decl.c (merge_decls): Do not track changed externs.
	* ipa.c: Include pointer-set.h
	(enqueue_cgraph_node): Use reachable pointer set.
	(process_references): Likewise.
	(cgraph_remove_unreachable_nodes): Likewise.
	(whole_program_function_and_variable_visibility): Do not recompute
	reachable.
	* trans-mem.c (ipa_tm_execute): Do not check reachable flag.

2012-04-23  Georg-Johann Lay  <avr@gjlay.de>

	* doc/extend.texi (AVR Named Address Spaces): Fix typos.

2012-04-23  Richard Guenther  <rguenther@suse.de>

	PR c/53060
	* c-typeck.c (build_binary_op): Fix typo.

2012-04-23  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimizations/52891
	* tree-vect-patterns.c (adjust_bool_pattern): Use
	build_nonstandard_type even if rhs1 has unsigned INTEGER_TYPE,
	but with non-standard precision.

2012-04-22  Jan Hubicka  <jh@suse.cz>

	* tree-ssa-loop-ivopts.c (expr_invariant_in_loop_p): Bail out at NULL
	tree refs.

2012-04-22  Jan Hubicka  <jh@suse.cz>

	* lto-symtab.c (lto_varpool_replace_node): Do not merge needed flags.
	* cgraphbuild.c (record_reference, record_type_list, mark_address,
	mark_load, mark_store): Do not mark varpool nodes as needed.
	* cgraph.c (cgraph_new_nodes): Remove.
	(cgraph_create_function_alias): Do not mark nodes as reachable.
	(cgraph_add_thunk): Likewise.
	(cgraph_mark_reachable_node): Do not manage the queue.
	* cgraph.h (cgraph_node): Remove next_needed.
	(varpool_nodes_queue): Remove next_needed and prev_needed.
	(x_cgraph_nodes_queue, x_cgraph_nodes_queue, cgraph_new_nodes): Remove.
	(cgraph_new_nodes): Declare.
	(x_varpool_nodes_queue, varpool_nodes_queue); Remove.
	(varpool_analyze_pending_decls): Remove.
	(varpool_analyze_node): New.
	(varpool_mark_needed_node): Remove.
	(varpool_first_variable, varpool_next_variable): New inlines.
	(varpool_first_static_initializer, varpool_next_static_initializer):
	Update.
	(FOR_EACH_STATIC_VARIABLE): Remove unused walker.
	(varpool_first_defined_variable): New inline.
	(varpool_next_defined_variable): New inline
	(FOR_EACH_VARIABLE): Reimplement.
	(FOR_EACH_DEFINED_VARIABLE): Reimplement.
	* toplev.c (wrapup_global_declaration_2): Use analyzed instead of
	needed flag.
	* cgraphunit.c (cgraph_new_nodes): Declare here.
	(enqueue_node): New function.
	(cgraph_process_new_functions): update for new
	node set; when constructing cgraph enqueue node for processing.
	(cgraph_add_new_function): Use new node set.
	(process_function_and_variable_attributes): Do not set varpool needed
	flags.
	(referred_to_p): New function.
	(varpool_finalize_decl): Move here from varpool.c; enqueue needed node
	when varpool is in construction.
	(cgraph_analyze_functions): Rewrite.
	(cgraph_expand_all_functions): Update.
	(cgraph_output_in_order): Do not analyze pending decls; do not set
	needed flags.
	(cgraph_optimize): Do not analyze pending decls.
	* lto-cgraph.c (input_varpool_node): Clear analyzed flag for objects
	in other partition; do not mark node as needed.
	* dwarf2out.c (reference_to_unused): Use analyzed flag.
	(premark_types_used_by_global_vars_helper): Likewise.
	* ipa.c (process_references): Do not call varpool_mark_needed_node.
	(cgraph_remove_unreachable_nodes): Do not rely on varpool and
	cgrpah queues.
	(function_and_variable_visibility): Do not mark node as needed.
	(whole_program_function_and_variable_visibility): Likewise.
	* Makefile.in (gt-varpool.h): No longer needed.
	* passes.c (execute_one_pass, execute_ipa_pass_list): Update.
	(ipa_write_summaries): Do not use needed flag.
	* varpool.c: Do not include gt-varpool.h
	(x_varpool_nodes_queue, x_varpool_last_needed_node,
	x_varpool_last_needed_node, x_varpool_first_unanalyzed_node,
	x_varpool_first_unanalyzed_node, varpool_assembled_nodes_queue):
	Remove.
	(varpool_remove_node): Do not update the lists.
	(dump_varpool_node): Do not dump needed flag.
	(varpool_enqueue_needed_node): Remove.
	(varpool_mark_needed_node): Remove.
	(varpool_reset_queue): Remove.
	(varpool_finalize_decl): Move to cgraphunit.c
	(varpool_analyze_node): New functions based on former
	varpool_analyze_pending_decls.
	(varpool_analyze_pending_decls): Remove.
	(varpool_assemble_decl): Do not update the lists.
	(enqueue_node): New function.
	(varpool_remove_unreferenced_decls): Rewrite.
	(varpool_empty_needed_queue): Remove.
	(add_new_static_var): Do not mark node as needed.
	(varpool_create_variable_alias): Handle expansion state
	creation.
	* except.c (output_ttype): Do not mark node as needed.
	* varasm.c (mark_decl_referenced): Do not use mark_needed_node.
	* tree-profile.c (init_ic_make_global_vars, init_ic_make_global_vars):
	Likewise.
	* tree-switch-conversion.c (build_one_array): Likewise.

2012-04-22  Manuel López-Ibáñez  <manu@gcc.gnu.org>

	PR c/44774
	* doc/invoke.texi (pedantic): Rename to Wpedantic.
	* common.opt (Wpedantic): New.
	(pedantic): Alias Wpedantic.
	* diagnostic.c (warning_at): Likewise.
	* c-decl.c (diagnose_mismatched_decls): Likewise.
	(build_array_declarator): Likewise.
	(mark_forward_parm_decls):
	(check_bitfield_type_and_width): Likewise.
	(grokdeclarator): Likewise.
	(grokfield): Likewise.
	(finish_struct): Likewise.
	(build_enumerator): Likewise.
	(store_parm_decls_oldstyle): Likewise.
	(declspecs_add_qual): Likewise.
	(declspecs_add_type): Likewise.
	(finish_declspecs): Likewise.
	* c-typeck.c (composite_type): Likewise.
	(comp_target_types): Likewise.
	(build_array_ref): Likewise.
	(pointer_diff): Likewise.
	(build_unary_op): Likewise.
	(build_conditional_expr): Likewise.
	(build_c_cast): Likewise.
	(convert_for_assignment): Likewise.
	(maybe_warn_string_init): Likewise.
	(digest_init): Likewise.
	(pop_init_level): Likewise.
	(set_init_index): Likewise.
	(c_finish_goto_label): Likewise.
	(c_finish_return): Likewise.
	(do_case): Likewise.
	(build_binary_op): Likewise.
	* c-parser.c (static): Likewise.
	(c_parser_external_declaration): Likewise.
	(c_parser_declaration_or_fndef): Likewise.
	(c_parser_static_assert_declaration_no_se): Likewise.
	(c_parser_enum_specifier): Likewise.
	(c_parser_struct_or_union_specifier): Likewise.
	(c_parser_struct_declaration): Likewise.
	(c_parser_alignas_specifier): Likewise.
	(c_parser_braced_init): Likewise.
	(c_parser_initelt): Likewise.
	(c_parser_compound_statement_nostart): Likewise.
	(c_parser_conditional_expression): Likewise.
	(c_parser_alignof_expression): Likewise.
	(c_parser_postfix_expression): Likewise.
	(c_parser_postfix_expression_after_paren_): Likewise.
	(c_parser_objc_class_instance_variables): Likewise.
	(c_parser_objc_method_definition): Likewise.
	(c_parser_objc_methodprotolist): Likewise.

2012-04-22  Ian Lance Taylor  <iant@google.com>

	* godump.c (go_output_typedef): Dump size of structs.

2012-04-22  Razya Ladelsky  <razya@il.ibm.com>

	Correcting transform_to_exit_first_loop + fix to PR46886
	* tree-parloops.c (transform_to_exit_first_loop): Remove
	setting of number of iterations according to the loop pattern.
	Duplicate from entry to exit->src instead of loop->latch.
	(pallelize_loops): Remove the condition preventing do-while loops.
	* tree-cfg.c (bool bb_in_region_p): New.
	(gimple_duplicate_sese_tail): Adjust duplication of the the subloops.
	Adjust redirection of the duplicated iteration.

2012-04-21  Richard Sandiford  <rdsandiford@googlemail.com>

	PR bootstrap/53021
	* rtl.def (ADDRESS): Use "i" rather than "w".
	* rtl.h (find_base_term): Delete.
	(may_be_sp_based_p): Declare.
	* rtl.c (rtx_code_size): Remove ADDRESS special case.
	* alias.h (UNIQUE_BASE_VALUE_SP, UNIQUE_BASE_VALUE_ARGP)
	(UNIQUE_BASE_VALUE_FP, UNIQUE_BASE_VALUE_HFP): Move to...
	* alias.c: ...here.
	(find_base_term): Make static.
	(may_be_sp_based_p): New function.
	* dse.c (record_store): Use it.
	* store-motion.c (store_killed_in_insn): Likewise.

2012-04-21  Richard Sandiford  <rdsandiford@googlemail.com>

	* fold-const.c (fold_checksum_tree): Fix VECTOR_CST case.

2012-04-21  Manuel López-Ibáñez  <manu@gcc.gnu.org>

	PR 35441
	* c-typeck.c (inform_declaration): New.
	(build_function_call_vec):  Do not pretty-print
	expressions when caret is enabled.
	(convert_arguments): Use inform_declaration.

2012-04-20  Jim Meyering  <meyering@redhat.com>

	* genmodes.c (make_complex_modes): Don't truncate a mode name of
	length 7 or more when prepending a "C".  Suggested by Richard Guenther.

2012-04-20  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>

	PR rtl-optimization/44214
	* fold-const.c (exact_inverse): New function.
	(fold_binary_loc): Fold vector and complex division by constant into
	multiply by recripocal with flag_reciprocal_math; fold vector division
	by constant into multiply by reciprocal with exact inverse.

2012-04-20  Jan Hubicka  <jh@suse.cz>

	* lto-symtab.c (lto_cgraph_replace_node): Merge needed instead of
	force flags.
	* cgraph.c (cgraph_add_thunk): Use mark_reachable_node.
	(cgraph_remove_node): Update.
	(cgraph_mark_needed_node): Remove.
	(cgraph_mark_force_output_node): New.
	(dump_cgraph_node): Do not dump needed flag.
	(cgraph_node_cannot_be_local_p_1): Update.
	(cgraph_can_remove_if_no_direct_calls_and_refs): Update.
	* cgraph.h (symtab_node_base): Add force_output flag.
	(cgraph_node): Remove needed flag.
	(varpool_node): Remove force_output flag.
	(cgraph_mark_needed_node): Remove.
	(cgraph_mark_force_output_node): New.
	(cgraph_only_called_directly_or_aliased_p,
	varpool_can_remove_if_no_refs, varpool_all_refs_explicit_p): Update.
	* ipa-cp.c (ipcp_generate_summary): Remove out of date assert.
	* cgraphunit.c (cgraph_decide_is_function_needed): rewrite.
	(cgraph_add_new_function): Update.
	(cgraph_mark_if_needed): Update.
	(verify_cgraph_node): Update.
	(cgraph_analyze_function): Alias target is reachable.
	(process_function_and_variable_attributes): Update: externally_visible
	flag makes function reachable.
	(cgraph_analyze_functions): Update dumping.
	* lto-cgraph.c (lto_output_node, lto_output_varpool_node,
	input_overwrite_node, input_varpool_node): Update streaming.
	* lto-streamer-out.c (produce_symtab): Use force_output.
	* ipa.c (process_references): Weakrefs must be processed.
	(cgraph_remove_unreachable_nodes): Likewise; update for new
	force_output flag.
	(varpool_externally_visible_p): Weakrefs are externally visible
	even if they are not.
	(function_and_variable_visibility): Update; when processing alias
	pair force the targets to be output.
	(whole_program_function_and_variable_visility): Use
	mark_reachable_node.
	* trans-mem.c (ipa_tm_mark_needed_node): Remove
	(ipa_tm_mark_force_output_node): New function.
	(ipa_tm_create_version_alias, ipa_tm_create_version): Update.
	* gimple-fold.c (can_refer_decl_in_current_unit_p): Be lax about
	aliases.
	* varasm.c (mark_decl_referenced): Update.
	(find_decl_and_mark_needed): Remove.
	(find_decl): New function.
	(weak_finish, finish_aliases_1, assemble_alias): Update; do not mark
	alias targets as needed.
	(dump_tm_clone_pairs): Update.
	* tree-inline.c (copy_bb): Update check.
	* symtab.c (dump_symtab_base): Dump force_output.
	* tree-ssa-structalias.c (ipa_pta_execute): Use force_output.
	* passes.c (execute_todo): Fix dumping.
	* varpool.c (decide_is_variable_needed, varpool_finalize_decl): Update.
	(varpool_analyze_pending_decls): Alias target is reachable.
	(varpool_create_variable_alias): Finalize weakrefs.

2012-04-20  Jakub Jelinek  <jakub@redhat.com>

	PR bootstrap/53021
	* alias.h (UNIQUE_BASE_VALUE_SP, UNIQUE_BASE_VALUE_ARGP,
	UNIQUE_BASE_VALUE_FP, UNIQUE_BASE_VALUE_HFP): Define.
	* alias.c (init_alias_targets): Use UNIQUE_BASE_VALUE_*
	macros instead of constants.
	* dse.c (record_store): Check for SP ADDRESS by comparing
	XWINT to UNIQUE_BASE_VALUE_SP instead of expecting
	XEXP to be stack_pointer_rtx.

2012-04-20  Richard Guenther  <rguenther@suse.de>

	* tree-ssa-copy.c (propagate_tree_value_into_stmt): Use
	update_call_from_tree when propagating into a call.

2012-04-20  Alan Modra  <amodra@gmail.com>

	* config/rs6000/rs6000.c (rs6000_emit_savres_rtx): Formatting.
	(rs6000_emit_prologue, rs6000_emit_epilogue): Likewise.  Rename
	sp_offset to frame_off.  Move world save code earlier.

2012-04-20  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/53050
	* tree-ssa-forwprop.c (ssa_forward_propagate_and_combine):
	Do only one transform on COND_EXPRs at the same time.

2012-04-19  Jan Hubicka  <jh@suse.cz>

	* symtab.c (dump_symtab_base): Revert accidental checkin.

2012-04-20  Alan Modra  <amodra@gmail.com>

	PR target/53040
	* config/rs6000/rs6000.c (rs6000_savres_strategy): When using
	static chain, set REST_INLINE_FPRS too.

2012-04-20  Thomas Schwinge  <thomas@codesourcery.com>

	* tree-dump.c (dequeue_and_dump) <BIT_FIELD_REF>: Dump the three child
	nodes.

2012-04-20  Richard Guenther  <rguenther@suse.de>

	* tree-vect-loop.c (vect_analyze_loop_operations): Do not vectorize
	loops that can never run more often than the vectorization factor.

2012-04-19  Jan Hubicka  <jh@suse.cz>

	* symtab.c (dump_symtab_base): Fix dumping of asm lists.

2012-04-19  David Edelsohn  <dje.gcc@gmail.com>

	* config/rs6000/sync.md (fetchop_name): Change ior attribute to "or".

2012-04-19  Jim Meyering  <meyering@redhat.com>

	* genmodes.c (make_complex_modes): Avoid unnecessary use of strncpy.
	We verified above that the string(including trailing NUL) fits in buf,
	so just use memcpy.

2012-04-19  Richard Guenther  <rguenther@suse.de>

	* symtab.c (dump_symtab_base): Use TREE_STRING_POINTER
	for dumping DECL_SECTION_NAME.

2012-04-19  Michael Matz  <matz@suse.de>

	PR middle-end/52977
	* tree.h (VECTOR_CST_NELTS): Use part number of types again.
	(struct tree_vector): Adjust GTY length.
	* tree.c (make_vector_stat): Don't set VECTOR_CST_NELTS.

	* gengtype.c (struct walk_type_data): Add in_record_p and loopcounter
	members.
	(walk_type, <TYPE_POINTER, TYPE_ARRAY>): Handle case where our
	caller emitted the length calulation already.
	(walk_type, <TYPE_UNION, TYPE_STRUCT>): Emit length calculations
	before handling any of the fields for structs.

2012-04-19  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/53031
	* tree-vrp.c (adjust_range_with_scev): Revert back to
	using max_loop_iterations.

2012-04-19  Michael Matz  <matz@suse.de>

	* diagnostic.c (emit_diagnostic): Move va_end call after user
	of the va_list.
	(warning, warning_at, pedwarn, permerror): Ditto.

2012-04-19  Richard Guenther  <rguenther@suse.de>

	* ira-int.h (ira_allocno_object_iter_cond): Avoid out-of-bound
	array access.

2012-04-19  Georg-Johann Lay  <avr@gjlay.de>

	PR target/53033
	* config/avr/avr.c (avr_out_load_psi): Fix assembler template for
	the case *(X+const).

2012-04-19  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>

	* config/arm/sync.md (sync_optab): Change ior attribute to "or".

2012-04-19  Manuel López-Ibáñez  <manu@gcc.gnu.org>

	PR c/52283/37985
	* stmt.c (warn_if_unused_value): Skip NOP_EXPR.
	* convert.c (convert_to_integer): Don't set TREE_NO_WARNING.

2012-04-19  Richard Guenther  <rguenther@suse.de>

	PR rtl-optimization/44688
	* loop-iv.c (determine_max_iter): Only return max_iter.
	(iv_number_of_iterations): Also use the recorded loop bound
	on the maximum number of iterations.
	* loop-unroll.c (decide_unroll_runtime_iterations): Use
	max_iter to avoid unrolling loops that do not roll.
	(decide_unroll_stupid): Likewise.

2012-04-18  Steven Bosscher  <steven@gcc.gnu.org>

	* targhooks.c (default_case_values_threshold): Fix code style nit.

	* stmt.c (add_case_node, expand_case): Move logic to remove/reduce
	case range and type folding from here...
	* gimplify.c (gimplify_switch_expr): ... to here.  Expect NULL_TREE
	type, as documented in tree.def.

2012-04-18  Jan Hubicka  <jh@suse.cz>

	* cgraph.h (verify_symtab, verify_symtab_node, verify_symtab_base):
	Declare.
	* cgraphunit.c (verify_cgraph_node): Verify symtab base; do not verify
	cgraph hash and same comdat groups.
	(cgraph_optimize): Verify symbol table.
	* ipa.c (cgraph_remove_unreachable_nodes): Verify symbol table.
	(dissolve_same_comdat_group_list): Work on symtab nodes.
	(function_and_variable_visibility): Dissolve variable same comdat group
	lists, too.
	* symtab.c: Include timevar.h
	(verify_symtab_base, verify_symtab_node, verify_symtab): New functions.

2012-04-18  Steven Bosscher  <steven@gcc.gnu.org>

	* tree-switch-conversion.c (info): Remove global pass info.
	(check_range, check_process_case, check_final_bb, create_temp_arrays,
	free_temp_arrays, gather_default_values, build_constructors,
	array_value_type, build_one_array, build_arrays, gen_def_assigns,
	fix_phi_nodes, gen_inbound_check): Pass info around from ...
	(process_switch): ... here.  Unify message format.  Return a const
	char pointer to the failure reason message.
	(do_switchconv): Unify message format.  Update process_switch usage.

	* tree.def (CASE_LABEL_EXPR): Fix documentation, mention all operands.
	* tree-cfg.c (edge_to_cases): Fix documentation.

2012-04-18  Uros Bizjak  <ubizjak@gmail.com>

	* config/alpha/sync.md (fetchop_name): Change ior attribute to "or".

2012-04-18  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>

	PR tree-optimization/52976
	* tree-ssa-reassoc.c (add_to_ops_vec_max_rank): Delete.
	(possibly_move_powi): New function.
	(rewrite_expr_tree): Call possibly_move_powi.
	(rewrite_expr_tree_parallel): Likewise.
	(attempt_builtin_powi): Change call of add_to_ops_vec_max_rank to
	call add_to_ops_vec instead.

2012-04-18  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>

	PR tree-optimization/52976
	* tree-ssa-reassoc.c (stmt_is_power_of_op): New function.
	(decrement_power): Likewise.
	(propagate_op_to_single_use): Likewise.
	(zero_one_operation): Handle __builtin_pow* calls in linearized
	expression trees; factor logic into propagate_op_to_single_use.
	(undistribute_ops_list): Allow operands with repeat counts > 1.

2012-04-18  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/44688
	* cfgloop.h (record_niter_bound): Declare.
	* tree-ssa-loop-niter.c (record_niter_bound): Export.
	Update the estimation with the upper bound here...
	(estimate_numbers_of_iterations_loop): ... instead of here.
	Do not forcefully reset a recorded upper bound.
	* tree-vect-loop-manip.c (vect_do_peeling_for_alignment):
	Record the maximum number of loop iterations of the prologue loop.

2012-04-18  Jan Hubicka  <jh@suse.cz>

	* lto-symtab.c (lto_cgraph_replace_node): Update.
	* cgraphbuild.c (record_reference, record_type_list,
	record_eh_tables, mark_address, mark_load, mark_store): Update.
	* cgraph.c (cgraph_same_body_alias, dump_cgraph_node,
	cgraph_create_virtual_clone, cgraph_for_node_thunks_and_aliases):
	Update.
	* cgraph.h (symtab_node_def, symtab_node, const_symtab_node): Remove.
	(cgraph_alias_aliased_node, varpool_alias_aliased_node): Update.
	* reload.c: Fix typo in comment.
	* rtlanal.c: Likewise.
	* tree-emultls.c (gen_emutls_addr): Update.
	* ipa-reference.c (analyze_function): Update.
	* cgraphunit.c (cgraph_analyze_function,
	cgraph_process_same_body_aliases, assemble_thunks_and_aliases):
	Update.
	* ipa-ref.c (ipa_record_reference): Reorg to avoid reference types.
	(ipa_remove_reference): Likewise.
	(ipa_remove_all_refering): Rename to ...
	(ipa_remove_all_referring): ... this one; update.
	(ipa_dump_references): Update.
	(ipa_dump_referring): Update.
	(ipa_clone_references): Update.
	(ipa_clone_refering): Rename to ...
	(ipa_clone_referring): ... this one; update.
	(ipa_ref_cannot_lead_to_return): Update.
	(ipa_ref_has_aliases_p): Update.
	* ipa-ref.h (symtab_node_def, symtab_node, const_symtab_node): New
	forward typedefs.
	(ipa_ref_type): Remove.
	(ipa_ref_ptr_u): Remove.
	(ipa_ref): Remove referencing, refered, refered_index, refering_type
	and refered_type; add referring, referred and referred_index.
	(ipa_ref_list): Rename refering to referring.
	(ipa_record_reference, ipa_remove_all_referring, ipa_dump_referring,
	ipa_clone_references, ipa_clone_referring): Update prototypes.
	* lto-cgraph.c (referenced_from_other_partition_p): Update.
	(lto_output_ref): Update.
	(add_references): Update.
	(input_varpool_node): Update.
	(input_refs): Update.
	* ipa-ref-inline.h (ipa_ref_node): Update.
	(ipa_ref_varpool_node): Update.
	(ipa_ref_referring_node): Update.
	(ipa_ref_referring_varpool_node): Update.
	(ipa_ref_referring_ref_list): Update.
	(ipa_ref_referred_ref_list): Update.
	(ipa_ref_list_first_referring): Update.
	(ipa_empty_ref_list): Update.
	(ipa_ref_list_refering_iterate): Rename to ...
	(ipa_ref_list_referring_iterate): ... this one.
	* cse.c: Update comment.
	* ipa-utils.c (ipa_reverse_postorder): Update.
	* tree-ssa-alias.c: Update.
	* ipa-inline.c (reset_edge_caches): Update.
	(update_caller_keys): Update.
	* ipa-inline.h: Update comments.
	* jump.c: Update comment.
	* alias.c: Likewise.
	* ipa.c (process_references): Update.
	(cgraph_remove_unreachable_nodes): Likewise.
	(ipa_discover_readonly_nonaddressable_var): Likewise.
	(cgraph_address_taken_from_non_vtable_p): Likewise.
	* trans-mem.c (ipa_tm_execute): Update.
	* simplify-rtx.c: Fix comment.
	* rtl.c: Fix comment.
	* symtab.c (symtab_unregister_node): Update.
	* varpool.c (dump_varpool_node): Update.
	(varpool_analyze_pending_decls): Update.
	(assemble_aliases): Update.
	(varpool_for_node_and_aliases): Update.

2012-04-18  Richard Guenther  <rguenther@suse.de>

	* cfgloop.h (estimate_numbers_of_iterations_loop): Remove
	use_undefined_p parameter.
	* tree-flow.h (estimate_numbers_of_iterations): Likewise.
	* tree-ssa-loop-niter.c (estimate_numbers_of_iterations_loop):
	Likewise.
	(estimate_numbers_of_iterations): Likewise.
	(estimated_loop_iterations): Adjust.
	(max_loop_iterations): Likewise.
	(scev_probably_wraps_p): Likewise.
	* tree-ssa-loop.c (tree_ssa_loop_bounds): Likewise.
	* tree-vrp.c (adjust_range_with_scev): Use max_stmt_executions,
	not max_loop_iterations.
	(execute_vrp): Remove explicit number of iterations estimation.

2012-04-18  Enkovich Ilya  <ilya.enkovich@intel.com>

	* config/i386/linux-common.h: New.

	* config.gcc: Add i386/linux-common.h before
	all i386/linux.h and i386/linux64.h usages.

	* config/i386/gnu-user.h (GNU_USER_TARGET_LINK_SPEC): New.
	(LINK_SPEC): Use GNU_USER_TARGET_LINK_SPEC.
	* config/i386/gnu-user64.h: Likewise.

	* config/i386/gnu-user.common.h (GNU_USER_TARGET_CC1_SPEC): New.
	(CC1_SPEC): Use GNU_USER_TARGET_CC1_SPEC.
	(GNU_USER_TARGET_MATHFILE_SPEC): New.
	(ENDFILE_SPEC): Use GNU_USER_TARGET_MATHFILE_SPEC.

2012-04-18  Jan Hubicka  <jh@suse.cz>

	* cgraph.c (cgraph_node_name): Remove.
	(dump_cgraph_node): Use dump_symtab_base; reformat.
	* cgraph.h (symtab_node_asm_name, symtab_node_name, dump_symtab,
	debug_symtab, dump_symtab_node, debug_symtab_node, dump_symtab_base):
	Declare.
	(cgraph_node_name, varpool_node_name): Remove.
	(cgraph_node_asm_name, varpool_node_asm_name,
	cgraph_node_name, varpool_node_name): New.
	* tree-pass.h (TODO_dump_cgraph): Rename to ...
	(TODO_dump_symtab): ... this one.
	* ipa-cp (pass_ipa_cp): Update.
	* ia-reference.c (generate_summary, read_write_all_from_decl,
	propagate, ipa_reference_read_optimization_summary): Update.
	* cgraphunit.c (cgraph_analyze_functions): Update.
	(cgraph_optimize): Update.
	* ipa-ref.c (ipa_dump_references): Update.
	(ipa_dump_refering): Update.
	* ipa-inline.c (pass_ipa_inline): Update.
	* matrix-reorg.c (pass_ipa_matrix_reorg): Update.
	* ipa.c (pass_ipa_function_visibility,
	pass_ipa_whole_program_visibility): Update.
	* tree-sra.c (pass_early_ipa_sra): Update.
	* symtab.c: Include langhooks.h
	(symtab_node_asm_name): New.
	(symtab_node_name): New.
	(symtab_type_names): New static var.
	(dump_symtab_base): New.
	(dump_symtab_node, dump_symtab): New.
	(debug_symtab_node,  debug_symtab): New.
	* tree-ssa-structalias.c: Dump symbol table.
	* pases.c (execute_todo): Handle TODO_dump_symtab instead
	of TODO_dump_cgraph.
	* varpoo.c (varpool_node_name): Remove.
	(dump_varpool_node): Use dump_symtab_base; reformat.

2012-04-18  Manuel López-Ibáñez  <manu@gcc.gnu.org>

	* doc/invoke.texi (Language Independent Options): @item should be
	before @opindex.

2012-04-17  Richard Sandiford  <rdsandiford@googlemail.com>

	PR bootstrap/53021
	* rtl.c (rtx_code_size): Handle ADDRESS.

2012-04-17  Tom de Vries  <tom@codesourcery.com>

	* tree-iterator.c (append_to_statement_list_1): Handle case that *list_p
	is not a STMT_LIST.

2012-04-17  Uros Bizjak  <ubizjak@gmail.com>

	PR target/53020
	* config/i386/sync.md (atomic_<code><mode>): Rename to
	atomic_<logic><mode>.

2012-04-17  Richard Sandiford  <rdsandiford@googlemail.com>

	* rtl.def (ADDRESS): Turn operand into a HOST_WIDE_INT.
	* alias.c (reg_base_value): Expand and update comment.
	(arg_base_value): New variable.
	(unique_id): Move up file.
	(unique_base_value, unique_base_value_p, known_base_value_p): New.
	(find_base_value): Use arg_base_value and known_base_value_p.
	(record_set): Document REG_NOALIAS handling.  Use unique_base_value.
	(find_base_term): Use known_base_value_p.
	(base_alias_check): Use unique_base_value_p.
	(init_alias_target): Initialize arg_base_value.  Use unique_base_value.
	(init_alias_analysis): Use 1 as the first id for REG_NOALIAS bases.

2012-04-17  Pat Haugen <pthaugen@us.ibm.com>

	* config/rs6000/rs6000.h (SLOW_UNALIGNED_ACCESS): Remove DImode.

2012-04-17  Michael Matz  <matz@suse.de>

	PR tree-optimization/18437
	* tree-vectorizer.h (_stmt_vec_info.stride_load_p): New member.
	(STMT_VINFO_STRIDE_LOAD_P): New accessor.
	(vect_check_strided_load): Declare.
	* tree-vect-data-refs.c (vect_check_strided_load): New function.
	(vect_analyze_data_refs): Use it to accept strided loads.
	* tree-vect-stmts.c (vectorizable_load): Ditto and handle them.

2012-04-17  Richard Guenther  <rguenther@suse.de>

	PR middle-end/53011
	* tree-eh.c (cleanup_empty_eh_merge_phis): Properly discard
	loops when redirecting an entry or latch edge.

2012-04-17  Bernd Schmidt  <bernds@codesourcery.com>

	* sel-sched.c (sel_global_init): Revert previous change.

2012-04-17  Richard Guenther  <rguenther@suse.de>

	* tree-flow.h (array_at_struct_end_p): Move declaration ...
	* tree.h (array_at_struct_end_p): ... here.
	* tree-ssa-loop-niter.c (array_at_struct_end_p): Move ...
	* expr.c (array_at_struct_end_p): ... here.  Rewrite.

2012-04-17  Steven Bosscher  <steven@gcc.gnu.org>

	* stmt.c (cost_table_, use_cost_table, cost_table_initialize,
	COST_TABLE): Remove.
	(estimate_case_costs): Remove.
	(expand_case): Do not call estimate_case_costs
	to set use_cost_table.
	(balance_case_nodes): Do not use use_cost_table.

2012-04-16  Jan Hubicka  <jh@suse.cz>

	* cgraph.c (cgraph_hash, assembler_name_hash): Remove.
	(hash_node, eq_node): Remove.
	(cgraph_create_node): Do not handle hashtable.
	(cgraph_get_node): Remove.
	(cgraph_insert_node_to_hashtable): Remove.
	(hash_node_by_assembler_name): Remove.
	(eq_assembler_name): Remove.
	(cgraph_node_for_asm): Rewrite.
	(cgraph_find_replacement_node): Break out from ...
	(cgraph_remove_node): ... here; do not maintain hashtables.
	(change_decl_assembler_name): Remove.
	(cgraph_clone_node): Do not maintain hashtables.
	* cgraph.h (const_symtab_node): New typedef.
	(cgraph_insert_node_to_hashtable): Remove.
	(symtab_get_node, symtab_node_for_asm,
	symtab_insert_node_to_hashtable): Declare.
	(cgraph_find_replacement_node): Declare.
	(cgraph_get_node, varpool_get_node): Turn into inlines.
	(cgraph, varpool): Work sanely on NULL pointers.
	(FOR_EACH_SYMBOL): New walker.
	* ipa-inline-transform.c (save_inline_function_body): Use
	symtab_insert_node_to_hashtable.
	* symtab.c: Include ggc.h and diagnostics.h
	(symtab_hash, assembler_name_hash): New static vars;
	(hash_node, eq_node, hash_node_by_assembler_name,
	eq_assembler_name, insert_to_assembler_name_hash,
	unlink_from_assembler_name_hash): New.
	(symtab_register_node): Update hashtables.
	(symtab_insert_node_to_hashtable): New.
	(symtab_unregister_node): Update hashtables.
	(symtab_get_node): New.
	(symtab_node_for_asm): New.
	(change_decl_assembler_name): New.
	* Makefile.in (symtab.o): Needs GTY.
	* varpool.c (varpool_hash): Remove.
	(hash_varpool_node, eq_varpool_node, varpool_get_node): Remove.
	(varpool_node): Rewrite using varpool_get_node.
	(varpool_remove_node): DO not maintain hashtables.
	(varpool_node_for_asm): Rewrite.

2012-04-16  Sandra Loosemore  <sandra@codesourcery.com>

	* doc/invoke.texi:  Copy-edit to put verbs in the present tense
	when describing the current behavior of GCC.

2012-04-16  Richard Sandiford  <rdsandiford@googlemail.com>

	* genemit.c (gen_exp): Remove ADDRESS handling.
	* genoutput.c (scan_operands): Likewise.
	* genpeep.c (match_rtx): Likewise.
	* genrecog.c (add_to_sequence): Likewise.

2012-04-16  David Edelsohn  <dje.gcc@gmail.com>

	* doc/install.texi (Specific, *-ibm-aix*): Update assembler bug status.

2012-04-16  Martin Jambor  <mjambor@suse.cz>

	* tree-sra.c (build_ref_for_model): Create COMPONENT_REFs only for
	bit-fields.

2012-04-16  Ulrich Weigand  <ulrich.weigand@linaro.org>

	PR target/51819
	* config/arm/arm.c (arm_print_operand): Fix invalid alignment
	hints for 'A' operand types.

2012-04-16  Jan Hubicka  <jh@suse.cz>

	* cgraph.h (symtab_node_base): Add next and previous pointers.
	(cgraph_node): Remove next and preivous pointers.
	(varpool_node): Likewise; remove next/previous GTY marker;
	it is not type safe.
	(symtab_node_def): Update GTY marker
	(x_cgraph_nodes, cgraph_nodes): Remove.
	(symtab_nodes): New function.
	(cgraph_order): Rename to ...
	(symtab_order): ... this one.
	(symtab_register_node, symtab_unregister_node, symtab_remove_node):
	Declare.
	(x_varpool_nodes, varpool_nodes): Remove.
	(FOR_EACH_STATIC_VARIABLE): Update.
	(symtab_function_p, symtab_variable_p): New function.
	(FOR_EACH_VARIABLE): Update.
	(varpool_first_variable, varpool_next_variable): New functions.
	(FOR_EACH_VARIABLE): Update.
	(cgraph_first_defined_function): Update.
	(cgraph_next_defined_function, cgraph_next_defined_function): Update.
	(FOR_EACH_DEFINED_FUNCTION, FOR_EACH_FUNCTION): Update.
	(cgraph_first_function, cgraph_next_function): New.
	(FOR_EACH_FUNCTION): Update.
	(cgraph_first_function_with_gimple_body,
	cgraph_next_function_with_gimple_body): Update.
	* symtab.c: New file.
	* cgraph.c: Update copyright dates.
	(x_cgraph_nodes, cgraph_order): Remove.
	(NEXT_FREE_NODE): Update.
	(SET_NEXT_FREE_NODE): New.
	(cgraph_create_node_1): Remove common code.
	(cgraph_create_node): Remove common code; call symtab_register_node.
	(cgraph_remove_node): Remove common code; call symtab_unregister-node.
	(cgraph_add_asm_node): Update.
	(cgraph_clone_node): Register new node.
	* cgraphunit.c (process_function_and_variable_attributes): Update.
	(cgraph_analyze_functions): Update.
	(cgraph_analyze_functions): Update.
	(cgraph_output_in_order): Update.
	* lto-cgraph.c (input_node, input_varpool_node, input_cgraph_1):
	Update.
	* ipa-inline.c (recursive_inlining): Update.
	* lto-streamer-in.c (lto_input_toplevel_asms): Update.
	* ipa.c (cgraph_remove_unreachable_nodes): Update.
	* Makefile.in: Add symtab.o
	* varpool.c (x_varpool_nodes): Remove
	(varpool_node): Remove common code; call symtab_register_node.
	(varpool_remove_node): Remove common code; call symtab_unregister_node.

2012-04-16  Richard Guenther  <rguenther@suse.de>

	PR middle-end/52977
	* tree.h (VECTOR_CST_NELTS): Adjust.
	(struct tree_vector): Add explicit length field.
	(make_vector_stat): Declare.
	(make_vector): Define.
	* tree.c (make_vector_stat): New function.
	(build_vector_stat): Use it.
	* tree-streamer-in.c (streamer_alloc_tree): Likewise.

2012-04-16  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>

	PR tree-optimization/52976
	* tree-ssa-reassoc.c (add_to_ops_vec_max_rank): New function.
	(undistribute_ops_list): Ops with repeat counts aren't eligible for
	undistribution.
	(attempt_builtin_powi): Call add_to_ops_vec_max_rank.

2012-04-16  Jan Hubicka  <jh@suse.cz>

	* cgraph.h (FOR_EACH_VARIABLE, FOR_EACH_VARIABLE, FOR_EACH_FUNCTION):
	New macros.
	* lto-symtab.c (lto_symtab_merge_cgraph_nodes): Use FOR_EACH
	walkers to walk cgraph and varpool.
	* cgraph.c (cgraph_node_for_asm): Likewise.
	(dump_cgraph): Likewise.
	* value-prof.c (init_node_map): Likewise.
	* tree.c (free_lang_data_in_cgraph): Likewise.
	* tree-emutls.c: (ipa_lower_emutls): Likewise.
	* ipa-reference.c (generate_summary, propagate): Likewise.
	* cgraphunit.c (verify_cgraph, cgraph_process_same_body_aliases,
	cgraph_mark_functions_to_output, cgraph_output_in_order,
	output_weakrefs, cgraph_materialize_all_clones,
	cgraph_optimize): Likewise.
	* lto-cgraph.c (merge_profile_summaries): Likewise.
	(input_cgraph): Likewise.
	* ipa-pure-const.c (generate_summary): Likewise.
	(propagate): Likwise.
	* ipa-utils.c (ipa_reduced_postorder): Likewise.
	(ipa_free_postorder_info): Likewise.
	(ipa_reverse_postorder): Likewise.
	* ipa-inline.c (ipa_inline): Likewise.
	* matrix-reorg.c (find_matrices_decl): Likewise.
	(matrix_reorg): Likewise.
	* tree-vectorizer.c (increase_alignment): Likewise.
	* ipa.c (cgraph_remove_unreachable_nodes): Likewise.
	(function_and_variable_visibility): Likewise.
	(whole_program_function_and_variable_visibility): Likewise.
	(ipa_cdtor_merge): Likewise.
	* trans-mem.c (ipa_tm_execute): Likewise.
	* ipa-inline-analysis.c (dump_inline_summaries): Likewise.
	* ipa-prop.c (ipa_print_all_jump_functions): Likewise.
	(ipa_print_all_params): Likewise.
	(ipa_update_after_lto_read): Likewise.
	* tree-profie.c (tree_profiling): Likewise.
	* tree-ssa-structalias.c (ipa_pta_execute): Likewise.
	* passes.c (dump_passes): Likewise.
	(do_per_function): Likewise.
	(ipa_write_summaries): Likewise.
	* varpool.c (dump_varpool): Likewise.
	(varpool_node_for_asm): Likewise.
	(varpool_assemble_pending_decls): Likewise.

2012-04-16  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/52975
	* tree-if-conv.c (predicate_bbs): Do not simplify inverted
	condition but always mark it with TRUTH_NOT_EXPR.

2012-04-16  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/52975
	* tree-ssa-forwprop.c (combine_cond_exprs): New function.
	(ssa_forward_propagate_and_combine): Call it for COND_EXPRs
	and VEC_COND_EXPRs.  Also combine into VEC_COND_EXPRs condition.
	* fold-const.c (operand_equal_p): Handle TARGET_MEM_REF.

2012-04-14  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/sse.md (ssse3_plusminus): New code iterator.
	(avx2_ph<plusminus_mnemonic>wv16hi3): Macroize insn from
	avx2_ph{add,adds,sub,subs}wv16hi3 using ssse3_plusminus code iterator.
	(ssse3_ph<plusminus_mnemonic>wv8hi3): Macroize insn from
	ssse3_ph{add,adds,sub,subs}wv8hi3 using ssse3_plusminus code iterator.
	(ssse3_ph<plusminus_mnemonic>wv4hi3): Macroize insn from
	ssse3_ph{add,adds,sub,subs}wv4hi3 using ssse3_plusminus code iterator.

	(avx2_ph<plusminus_mnemonic>dv8si3): Macroize insn from
	avx2_ph{add,adds,sub,subs}dv8si3 using plusminus code iterator.
	(ssse3_ph<plusminus_mnemonic>dv4si3): Macroize insn from
	ssse3_ph{add,adds,sub,subs}dv4si3 using plusminus code iterator.
	(ssse3_ph<plusminus_mnemonic>dv2si3): Macroize insn from
	ssse3_ph{add,adds,sub,subs}dv2si3 using plusminus code iterator.

	(xop_plus): New code iterator.
	(macs): New code attribute.
	(macds): Ditto.
	(xop_p<macs><ssemodesuffix><ssemodesuffix>): Macroize insn from
	xop_pmacs{,s}{ww,dd} using xop_plus code iterator and VI24_128 mode
	iterator.
	(xop_p<macs>dql): Macroize insn from xop_pmacs{,s}dql using
	xop_plus code iterator.
	(xop_p<macs>dqh): Macroize insn from xop_pmacs{,s}dqh using
	xop_plus code iterator.
	(xop_p<macs>wd): Macroize insn from xop_pmacs{,s}wd using
	xop_plus code iterator.
	(xop_p<madcs>wd): Macroize insn from xop_pmadcs{,s}wd using
	xop_plus code iterator.

	(xop_phadd<u>bw): Macroize insn from xop_phadd{,u}bw usign
	any_extend code iterator.
	(xop_phadd<u>bd): Macroize insn from xop_phadd{,u}bd usign
	any_extend code iterator.
	(xop_phadd<u>bq): Macroize insn from xop_phadd{,u}bq usign
	any_extend code iterator.
	(xop_phadd<u>wd): Macroize insn from xop_phadd{,u}wd usign
	any_extend code iterator.
	(xop_phadd<u>wq): Macroize insn from xop_phadd{,u}wq usign
	any_extend code iterator.
	(xop_phadd<u>dq): Macroize insn from xop_phadd{,u}dq usign
	any_extend code iterator.

2012-04-14  Tom de Vries  <tom@codesourcery.com>

	* cfgcleanup.c (try_optimize_cfg): Replace call to delete_insn_chain by
	call to delete_insn.  Remove code to reorder BASIC_BLOCK note and
	DELETED_LABEL note, and move it to ...
	* cfgrtl.c (delete_insn): ... here.  Change return type to void.
	(delete_insn_and_edges): Likewise.
	(delete_insn_chain): Handle new return type of delete_insn.  Delete
	chain backwards rather than forwards.
	* rtl.h (delete_insn, delete_insn_and_edges): Change return type to
	void.
	* cfglayout.c (fixup_reorder_chain): Delete unused label.

2012-04-14  Jan Hubicka  <jh@suse.cz>

	* cgraph.h: Update copyrights;
	(symtab_node): Turn to union typedef.
	(symtab_node_base): New structure.
	(symtab_type): Add SYMTAB_SYMBOL tag.
	(cgraph_node): Annotate some pinters with nested_ptr.
	(varpool_node): Likewise.
	(cgraph_local_info): Remove lto_file_data
	and externally_visible.
	(cgraph_node): Remove decl; same_comdat_group list;
	aux; ref_list; order; address_taken; reachable_from_other_parittion,
	in_other_partition; resolution.
	(varpool_node): Remove decl; same_comdat_group;
	ref_list; lto_file_data; aux; order; resolution; externally_visible;
	used_from_other_partition; in_other_partition.
	(symtab_node_def): New union.
	(cgraph, varpool): Update.
	(varpool_first_static_initializer, varpool_next_static_initializer,
	cgraph_only_called_directly_or_aliased_p,
	varpool_can_remove_if_no_refs, varpool_can_remove_if_no_refs,
	varpool_all_refs_explicit_p, cgraph_alias_aliased_node,
	varpool_alias_aliased_node, cgraph_edge_recursive_p): Update
	field references.
	* cgraph.c: Likewise.
	(cgraph_hash, assembler_name_hash): Turn into symtab_node.
	* cgraphbuild.c: Likewise.
	* lto-symtab.c: Likewise.
	* c-gimplify.c: Likewise.
	* value-prof.c: Likewise.
	* tree.c: Likewise.
	* ipa-cp.c: Likewise.
	* tree-emutls.c: Likewise.
	* ipa-inline-transform.c: Likwise.
	* ipa-reference.c: Likewise.
	* cgraphunit.c: Likewise.
	* ipa-ref.c: Likewise.
	* lto-cgraph.c: Likewise.
	* ipa-ref-inline.h: Likewise.
	* ipa-pure-const.c: Likewise.
	* lto-streamer-out.c: Likewise.
	* ipa-utils.c: Likewise.
	* ipa-inline.c: Likewise.
	* matrix-reorg.c: Likewise.
	* tree-eh.c: Likewise.
	* tree-vectorizer.c: Likewise.
	* ipa-split.c: Likewise.
	* ipa.c: Likewise.
	* trans-mem.c: Likewise.
	* ipa-inline-analysis.c: Likewise.
	* gimplify.c: Likewise.
	* cfgexpand.c: Likewise.
	* tree-sra.c: Likewise.
	* ipa-prop.c: Likewise.
	* varasm.c: Likewise.
	* tree-nested.c: Likewise.
	* tree-inline.c: Likewise.
	* tree-profile.c: Likewise.
	* tree-ssa-structalias.c: Likewise.
	* passes.c: Likewise.
	* varpool.c: Likewise.

2012-04-14  Tom de Vries  <tom@codesourcery.com>

	* tree-ssa-tail-merge.c (stmt_local_def): New function, factored out of
	same_succ_hash, with local_def inlined.  Use SINGLE_SSA_DEF_OPERAND.
	Use FOR_EACH_IMM_USE_FAST instead of FOR_EACH_IMM_USE_STMT.  Remove use
	of find_edge.
	(gsi_advance_fw_nondebug_nonlocal): New function.
	(local_def): Removed function.
	(same_succ_hash): Use stmt_local_def.
	(same_succ_equal): Use gsi_advance_fw_nondebug_nonlocal.
	(gsi_advance_bw_nondebug_nonlocal): Use stmt_local_def.

2012-04-13  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386-c.c (ix86_target_macros): Define _ILP32
	and __ILP32__ for x32.

2012-04-13  Martin Jambor  <mjambor@suse.cz>

	PR middle-end/52939
	* gimple-fold.c (gimple_get_virt_method_for_binfo): Bail out if
	fold_ctor_reference returns a zero constant.

2012-04-13  Enkovich Ilya  <ilya.enkovich@intel.com>

	* config.gcc: Add i386/gnu-user-common.h before all
	i386/gnu-user.h and i386/gnu-user64.h usages.

	* config/i386/gnu-user-common.h: New.

	* config/i386/gnu-user.h (CPP_SPEC): Moved to gnu-user-common.h.
	(CC1_SPEC): Likewise.
	(ENDFILE_SPEC): Likewise.
	(DEFAULT_PCC_STRUCT_RETURN): Likewise.
	(TARGET_TLS_DIRECT_SEG_REFS_DEFAULT): Likewise.
	(TARGET_OS_CPP_BUILTINS): Likewise.
	(LIBGCC2_HAS_TF_MODE): Likewise.
	(LIBGCC2_TF_CEXT): Likewise.
	(TF_SIZE): Likewise.
	(TARGET_ASM_FILE_END): Likewise.
	(STACK_CHECK_MOVING_SP): Likewise.
	(STACK_CHECK_STATIC_BUILTIN): Likewise.
	* config/i386/gnu-user64.h: Likewise.

2012-04-13  Martin Jambor  <mjambor@suse.cz>

	* expr.c (expand_expr_real_1): Pass type, not the expression, to
	set_mem_attributes for a memory temporary. Do not call the function
	for the memory temporary created for a bitfield.

2012-04-13  Alexandre Oliva  <aoliva@redhat.com>

	PR debug/48866
	* df.h (enum debug_temp_where): New.
	(dead_debug_init, dead_debug_finish) Declare.
	(dead_debug_add, dead_debug_insert_temp): Declare.
	(struct dead_debug_use, struct dead_debug): Moved from...
	* df-problems.c: ... here.
	(df_set_unused_notes_for_mw): Bind debug uses of unused regno
	to a debug temp.
	(df_create_unused_note): Likewise.
	(df_set_dead_notes_for_mw): Move comment where it belongs.
	(dead_debug_init): Export.
	(dead_debug_reset_uses): New, factored out of...
	(dead_debug_finish): ...this.  Export.
	(dead_debug_reset): Remove.
	(dead_debug_add): Export.
	(dead_debug_insert_before): Rename to...
	(dead_debug_insert_temp): ... this.  Add where argument.  Export.
	Locate stored value for BEFORE_WITH_VALUE.  Avoid repeat inserts.
	Return insertion count.
	(df_note_bb_compute): Adjust.
	* dce.c (word_dce_process_block): Adjust dead debug uses.
	(dce_process_block): Likewise.

2012-04-13  Alexandre Oliva  <aoliva@redhat.com>

	* df-problems.c (df_note_bb_compute): Do not take note of
	debug uses for whose REGs we won't emit DEAD or UNUSED notes.

2012-04-13  Alexandre Oliva  <aoliva@redhat.com>

	PR debug/51570
	* var-tracking.c (expand_depth): New type.
	(onepart_aux, expand_loc_callback_data): Change depth type to it.
	(loc_exp_dep_alloc): Adjust initializer.
	(update_depth): Use new type.  Add entryvals.
	(vt_expand_var_loc_chain): Take note of expansions with
	ENTRY_VALUEs, but don't accept them right away.  Run an optional
	second pass accepting the minimum ENTRY_VALUE count found in the
	first pass.
	(vt_expand_loc_callback, INIT_ELCD): Adjust.

2012-04-13  Tom de Vries  <tom@codesourcery.com>

	* tree-ssa-tail-merge.c (gsi_advance_bw_nondebug_nonlocal): Add
	parameters vuse and vuse_escaped.
	(find_duplicate): Init vuse1, vuse2 and vuse_escaped.  Pass to
	gsi_advance_bw_nondebug_nonlocal.  Return if vuse_escaped and
	vuse1 != vuse2.

2012-04-13  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/52969
	* tree-if-conv.c (predicate_mem_writes): Properly gimplify
	the condition for the COND_EXPR and handle predicate negation
	by swapping the COND_EXPR arms.

2012-04-13  Nick Clifton  <nickc@redhat.com>

	* config/rl78/rl78.c (rl78_devirt_pass): Remove use of
	TODO_dump_func flag.

2012-04-13  Andrey Belevantsev  <abel@ispras.ru>

	PR rtl-optimization/52203
	PR rtl-optimization/52715

	Revert the 2012-03-07 fix for PR 52203.
	* sel-sched.c (reset_sched_cycles_in_current_ebb): Check that
	the insn does not modify DFA right before issuing, adjust
	issue_rate accordingly.

2012-04-13  Richard Guenther  <rguenther@suse.de>

	PR c/52549
	* c-typeck.c (pointer_diff): Remove bogus assert.

2012-04-13  Richard Guenther  <rguenther@suse.de>

	PR c/52862
	* convert.c (convert_to_pointer): Remove special-casing of zero.

2012-04-13  Joey Ye  <joey.ye@arm.com>

	* config/arm/constraints.md (Pe): New constraint.
	* config/arm/arm.md: New split for imm 256-510.

2012-04-13  Terry Guo  <terry.guo@arm.com>

	* config/arm/arm-cores.def: Added core cortex-m0plus.
	* config/arm/arm-tune.md: Regenerated.
	* config/arm/arm-tables.opt: Regenerated.
	* doc/invoke.texi: Added entry for cpu ARM cortex-m0plus.

2012-04-13  Alan Modra  <amodra@gmail.com>

	PR target/52828
	* config/rs6000/rs6000.c (rs6000_emit_stack_tie): Rewrite with
	tie regs on destination of sets.  Delete forward declaration.
	(rs6000_emit_stack_reset): Update rs6000_emit_stack_tie calls.
	(rs6000_emit_prologue): Likewise.
	(rs6000_emit_epilogue): Likewise.  Use in place of gen_frame_tie
	and gen_stack_tie.
	(is_mem_ref): Use tie_operand to recognise stack ties.
	* config/rs6000/predicates.md (tie_operand): New.
	* config/rs6000/rs6000.md (restore_stack_block): Generate new
	stack tie rtl.
	(restore_stack_nonlocal): Likewise.
	(stack_tie): Update.
	(frame_tie): Delete.

2012-04-12  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>

	* tree-ssa-reassoc.c (attempt_builtin_powi_stats): Change %ld to
	HOST_WIDE_INT_PRINT_DEC in format strings.

2012-04-12  Uros Bizjak  <ubizjak@gmail.com>

	PR target/52932
	* config/i386/avx2intrin.h (_mm256_permutevar8x32_ps): Change second
	argument type to __m256i.  Update call to __builtin_ia32_permvarsf256.
	* config/i386/sse.md (UNSPEC_VPERMVAR): New.
	(UNSPEC_VPERMSI, UNSPEC_VPERMSF): Remove.
	(avx2_permvarv8sf, avx2_permvarv8si): Switch operands 1 and 2.
	(avx2_permvar<mode>): Macroize insn from avx2_permvarv8sf and
	avx2_permvarv8si using VI4F_256 mode iterator.
	* config/i386/i386.c (bdesc_args) <__builtin_ia32_permvarsf256>:
	Update builtin type to V8SF_FTYPE_V8SF_V8SI.
	(ix86_expand_vec_perm): Update calls to gen_avx2_permvarv8si and
	gen_avx2_permvarv8sf.
	(expand_vec_perm_pshufb): Ditto.

2012-04-12  Michael Meissner  <meissner@linux.vnet.ibm.com>

	PR target/52775
	* config/rs6000/rs6000.h (TARGET_FCFID): Add TARGET_PPC_GPOPT to
	the list of options to enable the FCFID instruction.
	(TARGET_EXTRA_BUILTINS): Adjust comment.

2012-04-12  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>

	PR tree-optimization/18589
	* tree-ssa-reassoc.c (reassociate_stats): Add two fields.
	(operand_entry): Add count field.
	(add_repeat_to_ops_vec): New function.
	(completely_remove_stmt): Likewise.
	(remove_def_if_absorbed_call): Likewise.
	(remove_visited_stmt_chain): Remove feeding builtin pow/powi calls.
	(acceptable_pow_call): New function.
	(linearize_expr_tree): Look for builtin pow/powi calls and add operand
	entries with repeat counts when found.
	(repeat_factor_d): New struct and associated typedefs.
	(repeat_factor_vec): New static vector variable.
	(compare_repeat_factors): New function.
	(get_reassoc_pow_ssa_name): Likewise.
	(attempt_builtin_powi): Likewise.
	(reassociate_bb): Call attempt_builtin_powi.
	(fini_reassoc): Two new calls to statistics_counter_event.

2012-04-12  Richard Guenther  <rguenther@suse.de>

	* Makefile.in (cgraphunit.o): Add $(EXCEPT_H) dependency.
	* cgraph.h (tree_rest_of_compilation): Remove.
	* cgraph.c (cgraph_add_new_function): Move ...
	* cgraphunit.c (cgraph_add_new_function): ... here.
	(tree_rest_of_compilation): Make static.
	(cgraph_expand_function): Do not set cgraph_function_flags_ready.
	* tree-optimize.c (gate_all_optimizations, pass_all_optimizations,
	gate_all_early_local_passes, execute_all_early_local_passes,
	pass_early_local_passes, gate_all_early_optimizations,
	pass_all_early_optimizations): Move ...
	* passes.c (gate_all_optimizations, pass_all_optimizations,
	gate_all_early_local_passes, execute_all_early_local_passes,
	pass_early_local_passes, gate_all_early_optimizations,
	pass_all_early_optimizations): ... here.
	* tree-optimize.c (execute_free_datastructures): Remove.
	* tree-flow.h (execute_free_datastructures): Remove.
	* tree-optimize.c (execute_init_datastructures,
	pass_init_datastructures): Move ...
	* tree-ssa.c (execute_init_datastructures,
	pass_init_datastructures): ... here.
	* cfgexpand.c (gimple_expand_cfg): Inline-expand call to
	execute_free_datastructures.

2012-04-12  Bernd Schmidt  <bernds@codesourcery.com>

	* dbgcnt.def (ira_move): New counter.
	* ira-int.h (ira_create_new_reg): Declare function.
	(first_moveable_pseudo, last_moveable_pseudo): Declare variables.
	* ira-emit.c (ira_create_new_reg): Renamed from craete_new_reg and
	no longer static.  All callers changed.
	* ira.c: Include "dbgcnt.h".
	(rtx_moveable_p, insn_dominated_by_p, find_moveable_pseudos,
	move_unallocated_pseudos): New static functions.
	(first_moveable_pseudo, last_moveable_pseudo): New global variables.
	(pseudo_replaced_reg, pseudo_move_insn): New static variables.
	(ira): Call find_moveable_pseudos and move_unallocated_pseudos.
	* ira-costs.c (find_costs_and_classes): Assign a memory cost of zero
	to the pseudos generated in find_moveable_pseudos.
	* Makefile.in (ira.o): Add $(DBGCNT_H).

2012-04-12  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/52943
	* tree-chrec.h (chrec_is_positive): Remove.
	* tree-scalar-evolution.c (chrec_is_positive): Move ...
	* tree-data-ref.c (chrec_is_positive): ... here.  Make static.
	Return false for a constant zero instead of negative.
	(analyze_siv_subscript_cst_affine): Handle zero difference
	in the initial condition explicitely.

2012-04-12  Richard Guenther  <rguenther@suse.de>

	* tree-parloops.c (parallelize_loops): Also consult the upper
	bound for the number of iterations.
	* tree-ssa-loop-prefetch.c (determine_loop_nest_reuse): Likewise.
	(loop_prefetch_arrays): Likewise.

2012-04-12  Richard Guenther  <rguenther@suse.de>

	* cfgloop.h (estimated_loop_iterations_int): Ditch
	'conservative' parameter.
	(max_stmt_executions_int): Likewise.
	(estimated_loop_iterations): Likewise.
	(max_stmt_executions): Likewise.
	(max_loop_iterations): Declare.
	(max_loop_iterations_int): Likewise.
	(estimated_stmt_executions): Likewise.
	(estimated_stmt_executions_int): Likewise.
	* tree-ssa-loop-niter.c (estimated_loop_iterations):
	Split parts to ...
	(max_loop_iterations): ... this.
	(estimated_loop_iterations_int): Split parts to ...
	(max_loop_iterations_int): ... this.
	(max_stmt_executions_int): Split parts to ...
	(estimated_stmt_executions_int): ... this.
	(max_stmt_executions): Split parts to ...
	(estimated_stmt_executions): ... this.
	* graphite-sese-to-poly.c (build_loop_iteration_domains): Adjust.
	* predict.c (predict_loops): Likewise.
	* tree-data-ref.c (max_stmt_executions_tree): Likewise.
	(analyze_siv_subscript_cst_affine): Likewise.
	(compute_overlap_steps_for_affine_1_2): Likewise.
	(analyze_subscript_affine_affine): Likewise.
	(init_omega_for_ddr_1): Likewise.
	* tree-parloops.c (parallelize_loops): Likewise.
	* tree-ssa-loop-ivopts.c (avg_loop_niter): Likewise.
	(may_eliminate_iv): Likewise.
	* tree-ssa-loop-prefetch.c (determine_loop_nest_reuse): Likewise.
	(loop_prefetch_arrays): Likewise.
	* tree-vrp.c (adjust_range_with_scev): Likewise.

2012-04-12  Oleg Endo  <olegendo@gcc.gnu.org>

	* config/sh/sh.h (RETURN_ADDR_RTX): Use NULL_RTX instead of 0.
	* config/sh/sh.c (INSN_REGMODE_WEIGHT, CURR_REGMODE_PRESSURE):
	Fix line width.
	(dump_table): Use bool type for need_align and have_df variables.
	(find_barrier, sfunc_uses_reg): Use NULL_RTX instead of 0.
	(regs_used): Remove register modifier.
	(barrier_align): Move variables slot, credit, jump_to_next
	into if block above for loop.  Use bool type for jump_to_next.
	(sh_function_arg): Use NULL_RTX instead of 0.

2012-04-11  Andreas Schwab  <schwab@linux-m68k.org>

	* config/m68k/m68k.md (rotrhi3+1): Name it rotrhi_lowpart.
	(bswapsi2): New expander.

2012-04-11  H.J. Lu  <hongjiu.lu@intel.com>

	* config/host-linux.c (TRY_EMPTY_VM_SPACE): Defined to
	0x60000000 if __x86_64 is defined and __LP64__ isn't defined.

2012-04-11  H.J. Lu  <hongjiu.lu@intel.com>

	PR rtl-optimization/52876
	* emit-rtl.c (set_reg_attrs_from_value): Handle arbitrary value.
	Don't call mark_reg_pointer for incompatible pointer sign extension.

	* reginfo.c (reg_scan_mark_refs): Call set_reg_attrs_from_value
	directly.

2012-04-11  Bernd Schmidt  <bernds@codesourcery.com>

	* fold-const.c (fold_unary_loc): Use GET_MODE_PRECISION for
	comparisons against TYPE_PRECISION.
	* tree-ssa-forwprop.c (combine_conversions): Likewise.

2012-04-11  Xinliang David Li  <davidxl@google.com>

	* tree-passes.h: Remove TODO_dump_func.
	* tree-ssa-tail-merge.c (tail_merge_optimize): Remove TODO_dump_func.
	* trans-mem.c: Remove TODO_dump_func.
	* ira.c: Remove TODO_dump_func.

2012-04-11  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.c (ix86_option_override_internal): Check
	SUBTARGET_OVERRIDE_OPTIONS and SUBSUBTARGET_OVERRIDE_OPTIONS
	after TARGET_64BIT is updated.

2012-04-11  Oleg Endo  <olegendo@gcc.gnu.org>

	* config/sh/sh.h: Remove old secondary reload code.

2012-04-11  Oleg Endo  <olegendo@gcc.gnu.org>

	* config/sh/sh.c (SCHED_REORDER): Merge macro into ...
	(ready_reorder): ... this function.

2012-04-11  Bernd Schmidt  <bernds@codesourcery.com>

	* sel-sched.c (sel_global_init): Swap order of sched_rgn_init and
	sched_init calls.

	* haifa-sched.c (prune_ready_list): Rework handling of SCHED_GROUP_P
	insns so that no other insn is queued for a time before them.

	* config/c6x/c6x.md (load_got_gotoff): Set op_pattern attribute to
	unknown.

2012-04-11  Richard Guenther  <rguenther@suse.de>

	PR middle-end/52621
	* tree-chrec.c (evolution_function_is_invariant_rec_p): Properly
	consider loop nesting.
	(evolution_function_is_univariate_p): Properly check the remainder
	for chrecs.

2012-04-11  Richard Guenther  <rguenther@suse.de>

	PR middle-end/52918
	* except.c (sjlj_emit_dispatch_table): Properly update loop structure.

2012-04-11  Nick Clifton  <nickc@redhat.com>

	* config/rl78/rl78.c (rl78_expand_prologue): Set stack use
	information, if requested.

	* config/rx/rx.c (rx_expand_prologue): Likewise.

2012-04-11  Peter Bergner  <bergner@vnet.ibm.com>
	    Michael Matz  <matz@suse.de>

	PR target/16458
	* rtlanal.c (unsigned_reg_p): New function.
	Update copyright notice dates.
	* rtl.h (unsigned_reg_p): Prototype it.
	Update copyright notice dates.
	* config/rs6000/rs6000.c (rs6000_generate_compare): Use it.
	Update comment.
	* expr.c (expand_expr_real_1): Set register attributes.
	* stmt.c (expand_case): Likewise.

2012-04-11  Oleg Endo  <olegendo@gcc.gnu.org>

	PR target/50751
	* config/sh/sh-protos.h (sh_legitimate_index_p): Add new arguments
	consider_sh2a and allow_zero.
	* config/sh/sh.c (sh_legitimate_index_p): Likewise.
	(disp_addr_displacement): New function.
	(sh_address_cost): Use disp_addr_displacement function instead
	of DISP_ADDR_OFFSET.
	(sh_legitimate_address_p): Adapt to changed
	sh_legitimate_index_p declaration.
	(sh_find_mov_disp_adjust): Remove HImode check.
	(sh_secondary_reload): Add HImode case.  Use satisfies_constraint_Sdd,
	disp_addr_displacement and max_mov_insn_displacement.
	(max_mov_insn_displacement): Remove HImode check.
	* config/sh/sh.h (CONST_OK_FOR_K04, CONST_OK_FOR_K12,
	DISP_ADDR_P, DISP_ADDR_OFFSET): Remove.
	* config/sh/constraints.md (K05, K13): New constraints.
	(K12): Correct comment.
	(Sdd): Do not use DISP_ADDR_P macro.
	(Snd, Sbw): Use satisfies_constraint_Sdd.
	* config/sh/sh.md (extendhisi2): Remove constraints from expander.
	(*extendhisi2_compact, movhi_i): Remove.
	(*extendhisi2_compact_reg, *extendhisi2_compact_mem_disp,
	*extendhisi2_compact_mem_disp, *extendhisi2_compact_snd,
	*movhi_reg_reg, *movhi_store_mem_disp05, *movhi_store_mem_disp13,
	*movhi_load_mem_disp, *movhi_load_mem_disp, *movhi): New insns.
	(*extendqisi2_compact_mem_disp, *extendqisi2_compact_mem_disp,
	*movqi_store_mem_disp04, *movqi_store_mem_disp12, *movqi_load_mem_disp,
	*movqi_load_mem_disp): Use sh_legitimate_index_p instead of
	CONST_OK_FOR_Kxx.
	Add new peepholes for HImode displacement addressing.

2012-04-11  Oleg Endo  <olegendo@gcc.gnu.org>

	* config/sh/sh.h (SIDI_OFF): Remove.
	* config/sh/sh.md: Use gen_highpart and gen_lowpart to access
	DImode subregs instead of gen_rtx_REG or simplifly_gen_subreg
	or operand_subword.

2012-04-11  Eric Botcazou  <ebotcazou@adacore.com>

	PR target/52624
	* doc/extend.texi (Other Builtins): Document __builtin_bswap16.
	(PowerPC AltiVec/VSX Built-in Functions): Remove it.
	* doc/md.texi (Standard Names): Add bswap.
	* builtin-types.def (BT_UINT16): New primitive type.
	(BT_FN_UINT16_UINT16): New function type.
	* builtins.def (BUILT_IN_BSWAP16): New.
	* builtins.c (expand_builtin_bswap): Add TARGET_MODE argument.
	(expand_builtin) <BUILT_IN_BSWAP16>: New case.  Pass TARGET_MODE to
	expand_builtin_bswap.
	(fold_builtin_bswap): Add BUILT_IN_BSWAP16 case.
	(fold_builtin_1): Likewise.
	(is_inexpensive_builtin): Likewise.
	* optabs.c (expand_unop): Deal with bswap in HImode specially.  Add
	missing bits for bswap to libcall code.
	* tree.c (build_common_tree_nodes): Build uint16_type_node.
	* tree.h (enum tree_index): Add TI_UINT16_TYPE.
	(uint16_type_node): New define.
	* config/rs6000/rs6000-builtin.def (RS6000_BUILTIN_BSWAP_HI): Delete.
	* config/rs6000/rs6000.c (rs6000_expand_builtin): Remove handling of
	above builtin.
	(rs6000_init_builtins): Likewise.
	* config/rs6000/rs6000.md (bswaphi2): Add TARGET_POWERPC predicate.

2012-04-11  Tristan Gingold  <gingold@adacore.com>

	* doc/extend.texi (Type Attributes): Move paragraph.

2012-04-11  Manuel López-Ibáñez  <manu@gcc.gnu.org>

	PR 24985
	* diagnostic.h (show_caret): Declare.
	(caret_max_width): Declare.
	(diagnostic_show_locus): Declare.
	* diagnostic.c (diagnostic_initialize): Initialize to false.
	(diagnostic_show_locus): New.
	(diagnostic_report_diagnostic): Call it.
	(getenv_columns): New.
	(adjust_line): New.
	(diagnostic_set_caret_max_width): New.
	* input.c (read_line): New.
	(location_get_source_line): New.
	* input.h (location_get_source_line): Declare.
	* toplev.c (general_init): Initialize show_caret from options.
	* dwarf2out.c (gen_producer_string): Handle fdiagnostics-show-caret.
	* opts.c (common_handle_option): Likewise.
	* pretty-print.h (pp_get_prefix): New.
	(pp_base_get_prefix): New.
	* common.opt (fdiagnostics-show-caret): New option.
	* doc/invoke.texi (fdiagnostics-show-caret): Document it.

2012-04-11  Richard Guenther  <rguenther@suse.de>

	PR rtl-optimization/52881
	* ifcvt.c (find_if_case_2): Avoid speculating loop latches.

2012-04-11  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/52912
	* tree-ssa-threadupdate.c (thread_block): Tell the cfg
	manipulation code we are threading through a loop header
	to an exit destination.

2012-04-10  Manuel López-Ibáñez  <manu@gcc.gnu.org>

	* tree.h (warn_if_unused_value): Move declaration from here.
	* stmt.c (warn_if_unused_value): Move definition from here.

2012-04-10  Michael Matz  <matz@suse.de>

	* tree-vectorizer.h (_loop_vec_info.strided_stores): Rename to
	grouped_stores.
	(LOOP_VINFO_STRIDED_STORES): Rename to LOOP_VINFO_GROUPED_STORES.
	(struce _bb_vec_info.strided_stores): Rename to grouped_stores.
	(BB_VINFO_STRIDED_STORES): Rename to BB_VINFO_GROUPED_STORES.
	(STMT_VINFO_STRIDED_ACCESS): Rename to STMT_VINFO_GROUPED_ACCESS.
	(vect_strided_store_supported): Rename to vect_grouped_store_supported.
	(vect_strided_load_supported): Rename to vect_grouped_load_supported.
	(vect_transform_strided_load): Rename to vect_transform_grouped_load.
	(vect_record_strided_load_vectors): Rename to
	vect_record_grouped_load_vectors.
	* tree-vect-data-refs.c (vect_update_misalignment_for_peel):
	Rename use of above macros.
	(vect_verify_datarefs_alignment): Ditto.
	(vector_alignment_reachable_p): Ditto.
	(vect_peeling_hash_get_lowest_cost): Ditto.
	(vect_enhance_data_refs_alignment): Ditto.
	(vect_analyze_group_access): Ditto and rename stride to groupsize.
	(vect_analyze_data_ref_access): Rename "strided" to "grouped".
	(vect_strided_store_supported): Rename to vect_grouped_store_supported.
	(vect_strided_load_supported): Rename to vect_grouped_load_supported.
	(vect_transform_strided_load): Rename to vect_transform_grouped_load.
	(vect_record_strided_load_vectors): Rename to
	vect_record_grouped_load_vectors.
	* tree-vect-loop.c (new_loop_vec_info): Rename use of above macros.
	(destroy_loop_vec_info): Ditto.
	(vect_transform_loop): Ditto and rename strided_store to grouped_store.
	* tree-vect-slp.c (vect_build_slp_tree): Rename use of above macros.
	(vect_analyze_slp): Ditto.
	(new_bb_vec_info): Ditto.
	(destroy_bb_vec_info): Ditto.
	(vect_schedule_slp_instance): Ditto and rename strided_store to
	grouped_store.
	* tree-vect-stmts.c (vect_cost_strided_group_size): Rename to
	vect_cost_group_size.
	(vect_model_store_cost): Rename use of above macros and call
	to vect_cost_strided_group_size.
	(vect_model_load_cost): Ditto.
	(vectorizable_store): Ditto, rename strided_store to grouped_store
	and calls to renamed tree-vectorizer.h functions.
	(vectorizable_load): Ditto.
	(vect_transform_stmt): Rename use of above macros and strided_store
	to grouped_store.

2012-04-10  Jan Hubicka  <jh@suse.cz>

	* cgraph.h: Remove misledaing comment on ipa-ref.h.
	(symtab_type): New enum.
	(symtab_node): New structure.
	(cgraph_node, varpool_node): Add symbol base type.
	(cgraph, varpool): New accestor functions.
	* cgraph.c (cgraph_create_node_1): Set symbol type.
	* varpool.c (varpool_node): Set symbol type.

2012-04-10  Ulrich Weigand  <ulrich.weigand@linaro.org>
	    Richard Sandiford  <rdsandiford@googlemail.com>

	* fwprop.c (propagate_rtx): Also set PR_CAN_APPEAR for subregs.

2012-04-10  Richard Guenther  <rguenther@suse.de>

	PR middle-end/52888
	* gimple-low.c (gimple_check_call_args): Properly account for
	compatible aggregate types.

2012-04-10  Richard Guenther  <rguenther@suse.de>

	* toplev.h (tree_rest_of_compilation): Remove.
	* tree-optimize.c (tree_rest_of_compilation): Likewise.
	* cgraph.h (tree_rest_of_compilation): Declare.
	* tree-optimize.c (tree_rest_of_compilation): Move ...
	* cgraphunit.c (tree_rest_of_compilation): ... here.
	* cgraph.c (cgraph_add_new_function): Adjust.
	* Makefile.in (tree-optimize.o): Adjust.
	(cgraphunit.o): Likewise.

2012-04-10  Ulrich Weigand  <ulrich.weigand@linaro.org>

	PR tree-optimization/52870
	* tree-vect-patterns.c (vect_recog_widen_mult_pattern): Verify that
	presumed pattern statement is within the same loop or basic block.

2012-04-10  Tristan Gingold  <gingold@adacore.com>

	* gengtype.c (main): Make uintptr_t a known type.

2012-04-10  Richard Guenther  <rguenther@suse.de>

	* tree-pass.h (tree_lowering_passes): Remove.
	* tree-optimize.c (tree_lowering_passes): Remove.
	* cgraph.c (cgraph_add_new_function): Inline relevant parts
	of tree_lowering_passes, avoid redundant call of early local passes.
	* cgraphunit.c (cgraph_lower_function): Fold into ...
	(cgraph_analyze_function): ... its single caller.  Inline
	relevant parts of tree_lowering_passes.

2012-04-09  H.J. Lu  <hongjiu.lu@intel.com>

	PR other/52777
	* config/pa/pa.opt: Remove SIO and GNU_LD.

2012-04-09  Jan Hubicka  <jh@suse.cz>

	PR lto/52722
	PR lto/51765
	PR lto/52634
	* lto-cgraph.c (compute_ltrans_boundary): When alias is in the
	boundary, add its target too.
	* lto.c (add_references_to_partition): Add also aliased nodes.
	(add_cgraph_node_to_partition,
	add_varpool_node_to_partition): Work on nodes, not functions/variables;
	when adding alias, add also the aliased object.

2012-04-09  Uros Bizjak  <ubizjak@gmail.com>

	PR target/52883
	* config/i386/predicates.md (x86_64_zext_general_operand): Prevent
	VOIDmode immediate operands.
	* config/i386/constraints.md (Wz): New constraint.
	* config/i386/i386.md (*zero_extendsidi2_rex64): Use Wz instead of Z.

2012-04-09  Eric Botcazou  <ebotcazou@adacore.com>

	PR target/52717
	* config/sparc/sparc.c (sparc_file_end): Set TREE_PUBLIC explicitly on
	the DECL generated for the special GOT helper.

2012-04-09  Oleg Endo  <olegendo@gcc.gnu.org>

	* config/sh/constraints.md: Update list of constraints in
	comment block.
	(Sr0): Remove unused memory constraint.

2012-04-08  Manuel López-Ibáñez  <manu@gcc.gnu.org>

	* tree-pretty-print.h: Update comment.

2012-04-08  Oleg Endo  <olegendo@gcc.gnu.org>

	* config/sh/sh.md: Use braced string notation where applicable.
	(*prefetch_i4, prefetch_m2a): Merge into ...
	(*prefetch): ... this new insn.

2012-04-07  Oleg Endo  <olegendo@gcc.gnu.org>

	* config/sh/sh.h (high_life_started): Remove
	* config/sh/predicates.md (general_movdst_operand): Use
	'reload_in_progress' instead of 'high_life_started'.
	* config/sh/sh.md (divsi_inv_call, *divsi_inv_call_combine,
	divsi_inv_fp): Likewise.

2012-04-07  Oleg Endo  <olegendo@gcc.gnu.org>

	* config/sh/sh-protos.h (prepare_move_operands): Return void
	instead of int.
	* config/sh/sh.c (prepare_move_operands): Likewise.
	* config/sh/sh.md: Remove return value checks of prepare_move_operands.

2012-04-07  Oleg Endo  <olegendo@gcc.gnu.org>

	* config/sh/sh-protos.h (fp_int_operand, symbol_ref_operand,
	general_movsrc_operand, general_movdst_operand, arith_reg_operand,
	fp_arith_reg_operand, arith_operand, arith_reg_or_0_operand,
	logical_operand, fpscr_operand, fpul_operand, expand_fp_branch,
	commutative_float_operator, noncommutative_float_operator,
	sh_handle_pragma): Remove.

2012-04-06  Sandra Loosemore  <sandra@codesourcery.com>

	* doc/invoke.texi:  Clean up Texinfo markup throughout the file.
	Use @option markup on command-line options.  Use @samp markup on
	literal keywords to options.  Use @code markup on code fragments.
	Use other markup in preference to quotation marks in the text.
	Add markup to some passages without any.

2012-04-06  Mike Stump  <mikestump@comcast.net>

	* gimple-fold.c (gimple_fold_stmt_to_constant_1): Avoid warning.

2012-04-06  Oleg Endo  <olegendo@gcc.gnu.org>

	* config/sh/sh.c (hi_const): Remove.
	(find_barrier, sh_reorg): Use satisfies_constraint_I16 instead
	of hi_const.

2012-04-06  Oleg Endo  <olegendo@gcc.gnu.org>

	* config/sh/sh-protos.h (sh_expand_t_scc): Change return type from int
	to bool.
	* config/sh/sh.c (sh_expand_t_scc): Likewise.
	* config/sh/sh.md (cstoresi4, cstoredi4): Remove GET_CODE checks before
	calling sh_expand_t_scc.

2012-04-06  Oleg Endo  <olegendo@gcc.gnu.org>

	* config/sh/sh-protos.h (fp_zero_operand, fp_one_operand,
	nonpic_symbol_mentioned_p, expand_block_move, expand_ashiftrt,
	sh_dynamicalize_shift_p, gen_shl_and, gen_shl_sext, system_reg_operand,
	reg_unused_after, sh_can_redirect_branch, sh_need_epilogue, fldi_ok,
	sh_hard_regno_rename_ok, sh_cfun_interrupt_handler_p,
	sh_cfun_resbank_handler_p, sh_attr_renesas_p, sh_cfun_attr_renesas_p,
	check_use_sfunc_addr, sh_contains_memref_p, sh_loads_bankedreg_p,
	sh2a_is_function_vector_call): Use bool as return type.
	(sh_pass_in_reg_p): Remove.
	* config/sh/sh.c (broken_move, mova_p, noncall_uses_reg, high_pressure,
	flow_dependent_p, sh2a_function_vector_p, expand_block_move,
	expand_ashiftrt, sh_dynamicalize_shift_p, gen_shl_and, gen_shl_sext,
	sh_need_epilogue, sh2a_is_function_vector_call, sh_attr_renesas_p,
	sh_cfun_attr_renesas_p, sh_cfun_interrupt_handler_p,
	sh_cfun_resbank_handler_p, system_reg_operand, fp_zero_operand,
	fp_one_operand, fldi_ok, reg_unused_after, sh_can_redirect_branch,
	sh_hard_regno_rename_ok, check_use_sfunc_addr, sh_contains_memref_p,
	sh_loads_bankedreg_p): Use bool as return type.
	(nonpic_symbol_mentioned_p): Use bool as return type.  Remove
	'register' modifier.

2012-04-06  Matt Turner  <mattst88@gmail.com>

	* doc/install.texi: Correct typo "-mno-lsc" -> "-mno-llsc".

2012-04-06  Eric Botcazou  <ebotcazou@adacore.com>

	* config/ia64/ia64.c (ia64_load_pair_ok): Return 0 if the second member
	of the destination isn't also a FP_REGS register.

2012-04-05  Teresa Johnson  <tejohnson@google.com>
	    H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.h (ix86_tune_indices): Add X86_TUNE_LCP_STALL.
	* config/i386/i386.md (move immediate to memory peephole2):
	Add cases for HImode move when LCP stall avoidance is needed.
	* config/i386/i386.c (initial_ix86_tune_features): Initialize
	X86_TUNE_LCP_STALL entry.

2012-04-05  Uros Bizjak  <ubizjak@gmail.com>

	PR target/52882
	* config/i386/i386.c (ix86_decompose_address): Allow VOIDmode
	CONST_INT operands, zero-extended with AND.

2012-04-05  Oleg Endo  <olegendo@gcc.gnu.org>

	PR target/50751
	* config/sh/sh.c (sh_find_mov_disp_adjust): Take machine_mode as the
	first argument instead of mode size.  Move displacement calculations
	to ...
	(mov_insn_size, max_mov_insn_displacement, mov_insn_alignment_mask):
	... these new functions.
	(disp_adjust): Remove max_mov_disp field.
	(sh_legitimate_index_p): Use max_mov_insn_displacement and
	mov_insn_alignment_mask.
	(sh_address_cost): Use max_mov_insn_displacement.

2012-04-05  Andrew Stubbs  <ams@codesourcery.com>

	* config/arm/arm.md (arch): Add neon_onlya8 and neon_nota8.
	(arch_enabled): Handle new arch types.
	(one_cmpldi2): Add NEON support.

2012-04-05  Richard Guenther  <rguenther@suse.de>

	* gimple.c (walk_gimple_op): Compute val_only for the LHS
	of an assigment in the canonical way, avoiding is_gimple_mem_rhs.
	(is_gimple_mem_rhs, is_gimple_reg_rhs, is_gimple_stmt): Move ...
	* gimplify.c (is_gimple_mem_rhs, is_gimple_reg_rhs, is_gimple_stmt):
	... here and make static.
	* gimple.h (is_gimple_mem_rhs, is_gimple_reg_rhs, is_gimple_stmt):
	Remove.

2012-04-05  Richard Guenther  <rguenther@suse.de>

	* tree-ssa-dse.c (dse_optimize_stmt): Remember the stmt
	basic-block before removing it.

2012-04-05  Richard Guenther  <rguenther@suse.de>

	* tree-ssanames.c (release_dead_ssa_names): Compact the SSA
	version namespace as we release the freelist.

2012-04-05  Richard Guenther  <rguenther@suse.de>

	* tree-nrv.c (tree_nrv): Release VDEFs.
	* tree-sra.c (sra_modify_constructor_assign): Likewise.
	(sra_modify_assign): Likewise.
	* tree-vect-stmts.c (vect_remove_stores): Likewise.
	* tree-vect-loop.c (vect_transform_loop): Likewise.
	* tree-ssa-dom.c (optimize_stmt): Likewise.
	* tree-vect-slp.c (vect_schedule_slp): Likewise.
	* tree-ssa-math-opts.c (execute_cse_sincos): Likewise.

2012-04-05  Richard Guenther  <rguenther@suse.de>

	* gimple-iterator.c (gsi_remove): Return whether EH edges need to be
	cleanup.
	* gimple.h (gsi_remove): Adjust.
	* tree-ssa-operands.c (unlink_stmt_vdef): Optimize.
	* tree-ssa-dom.c (optimize_stmt): Use gsi_remove result.
	* tree-ssa-dse.c (dse_optimize_stmt): Likewise.
	* tree-ssa-forwprop.c (remove_prop_source_from_use): Likewise.
	* tree-ssa-math-opts.c (execute_optimize_widening_mul): Likewise.
	* tree-ssa-pre.c (eliminate): Likewise.

2012-04-04  Mike Stump  <mikestump@comcast.net>

	* doc/rtl.texi (const_double): Document as sign-extending.
	* expmed.c (expand_mult): Ensure we don't use shift incorrectly.
	* emit-rtl.c (immed_double_int_const): Refine to state the
	value is signed.
	* simplify-rtx.c (mode_signbit_p): Add a fixme for wider than
	CONST_DOUBLE integers.
	(simplify_const_unary_operation, UNSIGNED_FLOAT): Ensure no
	negative values are converted.  Fix conversions bigger than
	HOST_BITS_PER_WIDE_INT.
	(simplify_binary_operation_1): Ensure we don't use shift incorrectly.
	(simplify_immed_subreg): Sign-extend CONST_DOUBLEs.
	* explow.c (plus_constant_mode): Add.
	(plus_constant): Implement with plus_constant_mode.
	* rtl.h (plus_constant_mode): Add.

2012-04-04  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/52808
	* tracer.c (tail_duplicate): Do not tail-duplicate loop header blocks.
	* Makefile.in (tracer.o): Depend on $(CFGLOOP_H).

2012-04-04  Tristan Gingold  <gingold@adacore.com>

	* expr.c (expand_expr_real_2): Handle larger sizetype in
	POINTER_PLUS_EXPR.

2012-04-03  Kaz Kojima  <kkojima@gcc.gnu.org>

	* config/sh/t-sh (MULTILIB_MATCHES): Match m2a-single-only
	to m2a-single instead of m2e.

2012-04-03  Eric Botcazou  <ebotcazou@adacore.com>

	* expr.c (get_bit_range): Add OFFSET parameter and adjust BITPOS.
	Change type of BITOFFSET to signed.  Make sure the lower bound of
	the computed range is non-negative by adjusting OFFSET and BITPOS.
	(expand_assignment): Adjust call to get_bit_range.

2012-04-03  Sandeep Kumar Singh  <Sandeep.Singh2@kpitcummins.com>

	* h8300/h8300.c (h8300_current_function_monitor_function_p):
	New function. Added to check monitor functions.
	(h8300_option_override): Modified to generate error/warning
	messages for invalid combinations of different command line
	options.
	* h8300/h8300.md: Generate 'rte' for monitor functions. Do not
	save EXR on stack for monitor function in case of H8S target
	when "-mno-exr" is passed.
	* h8300/h8300-protos.h (h8300_current_function_monitor_function_p):
	Add prototype.
	* doc/invoke.texi: Document H8S options.

2012-04-03  Tristan Gingold  <gingold@adacore.com>

	* configure.ac: Use GCC_AC_FUNC_MMAP_BLACKLIST instead
	of gcc_AC_FUNC_MMAP_BLACKLIST.
	* acinclude.m4 (gcc_AC_FUNC_MMAP_BLACKLIST): Remove.
	* Makefile.in (aclocal_deps): Add mmap.m4.
	* configure: Regenerate.
	* aclocal.m4: Regenerate.

2012-04-03  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/52808
	* tracer.c (tail_duplicate): Return whether we have duplicated
	any block.
	(tracer): If we have duplicated any block, cleanup the CFG.
	* cfghooks.c (duplicate_block): If we duplicated a loop
	header but not its loop, destroy the loop because it now has
	multiple entries.
	* tree-ssa-threadupdate.c (thread_through_loop_header): Tell
	the cfg manipulation routines we are not creating a multiple
	entry loop.

2012-04-03  Tristan Gingold  <gingold@adacore.com>

	* config/vms/vms-c.c (vms_pragma_nomember_alignment): Handle
	'byte' alignment.
	(vms_c_common_override_options): Allow parameterless variadic
	functions.

2012-04-03  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/52835
	* tree-data-ref.c (build_rdg): Return NULL if
	compute_data_dependences_for_loop failed.

2012-04-03  Eric Botcazou  <ebotcazou@adacore.com>

	* varasm.c (initializer_constant_valid_for_bitfield_p): Return true
	for REAL_CST as well.
	(output_constructor): Use RECORD_OR_UNION_TYPE_P predicate.
	In the bitfield case, if the value is a REAL_CST, convert it first to
	an INTEGER_CST.

2012-04-02  H.J. Lu  <hongjiu.lu@intel.com>

	* config.gcc: Use i386/biarchx32.h instead of i386/biarch64.h
	for --with-abi={x32|mx32} or --with-multilib-list=mx32.
	(supported_defaults): Add abi for i[34567]86-*-* and x86_64-*-*.

	* config/i386/biarchx32.h: New.

2012-04-02  Anatoly Sokolov  <aesok@post.ru>

	* config/arm/arm.h (PREFERRED_RELOAD_CLASS): Remove.
	* config/arm/arm.c (TARGET_PREFERRED_RELOAD_CLASS): Define.
	(arm_preferred_reload_class): New function.

2012-04-02  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/52756
	* tree-ssa-threadupdate.c (def_split_header_continue_p): New function.
	(thread_through_loop_header): After threading through the loop latch
	remove the split part from the loop and clear further threading
	opportunities that would create a multiple entry loop.

2012-04-02  Richard Guenther  <rguenther@suse.de>

	PR rtl-optimization/52800
	* cprop.c (execute_rtl_cprop): Call cleanup_cfg with
	CLEANUP_CFG_CHANGED.

2012-04-02  Richard Guenther  <rguenther@suse.de>

	PR middle-end/52803
	* loop-init.c (gate_handle_loop2): Destroy loops here if
	we don't enter RTL loop optimizers.

2012-04-02  Uros Bizjak  <ubizjak@gmail.com>

	Partially revert:
	2012-03-29  Richard Guenther  <rguenther@suse.de>

	* rtl.h (extended_count): Remove.
	* combine.c (extended_count): Remove.

2012-04-02  Dodji Seketeli  <dodji@redhat.com>

	PR c++/40942
	* pt.c (more_specialized_fn):  Don't apply decay conversion to
	types of function parameters.

2012-04-02  Tristan Gingold  <gingold@adacore.com>

	* ggc-page.c (PAGE_L1_SIZE, PAGE_L2_SIZE, LOOKUP_L1, LOOKUP_L2)
	(ggc_allocated_p, lookup_page_table_entry, set_page_table_entry)
	(alloc_page, init_ggc, clear_marks, struct ggc_pch_data)
	(ggc_pch_this_base): Use uintptr_t instead of size_t.

2012-03-31  H.J. Lu  <hongjiu.lu@intel.com>

	PR bootstrap/52784
	* config/i386/i386.c (ix86_option_override_internal): Don't
	check TARGET_64BIT if TARGET_64BIT_DEFAULT is false.

2012-03-31  Eric Botcazou  <ebotcazou@adacore.com>

	* tree-cfg.c (call_can_make_abnormal_goto): New predicate.
	(stmt_can_make_abnormal_goto): Use it.
	(is_ctrl_altering_stmt): Likewise.

2012-03-30  Naveen H.S  <naveen.S@kpitcummins.com>
	    Kaz Kojima  <kkojima@gcc.gnu.org>

	* config/sh/sh.c (push_regs): Skip banked registers when
	resbank attribute is specified.
	(sh_expand_epilogue): Likewise.

2012-03-30  Richard Henderson  <rth@redhat.com>

	PR debug/52727
	* combine-stack-adj.c (prev_active_insn_bb): New.
	(next_active_insn_bb): New.
	(force_move_args_size_note): New.
	(combine_stack_adjustments_for_block): Use it.

2012-03-30  Richard Henderson  <rth@redhat.com>

	* config/i386/i386.c (struct expand_vec_perm_d): Add one_operand_p.
	(ix86_expand_vector_init_duplicate): Initialize it.
	(expand_vec_perm_palignr): Likewise.
	(ix86_expand_vec_perm_const): Likewise.
	(ix86_vectorize_vec_perm_const_ok): Likewise.
	(expand_vec_perm_blend): Use it.
	(expand_vec_perm_vpermil): Likewise.
	(expand_vec_perm_pshufb): Likewise.
	(expand_vec_perm_1): Likewise.
	(expand_vec_perm_pshuflw_pshufhw): Likewise.
	(expand_vec_perm_interleave2): Likewise.
	(expand_vec_perm_vpermq_perm_1): Likewise.
	(expand_vec_perm_vperm2f128): Likewise.
	(expand_vec_perm_interleave3): Likewise.
	(expand_vec_perm_vperm2f128_vblend): Likewise.
	(expand_vec_perm_vpshufb2_vpermq): Likewise.
	(expand_vec_perm_vpshufb2_vpermq_even_odd): Likewise,.
	(expand_vec_perm_broadcast): Likewise.
	(expand_vec_perm_vpshufb4_vpermq2): Likewise.

2012-03-30  Richard Henderson  <rth@redhat.com>

	* dwarf2out.c (gen_variable_die): Initialize off.

2012-03-30  Tristan Gingold  <gingold@adacore.com>

	* config/vms/vms-f.c: New file.
	* config/vms/t-vms (vms-f.o): New rule.
	* config.gcc (*-*-*vms*): Define fortran_target_objs.

2012-03-30  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/52754
	* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Only
	propagate arbitrary addresses into really plain dereferences.

2012-03-30  Richard Guenther <rguenther@suse.de>

	PR middle-end/52772
	* except.c (emit_to_new_bb_before): Move loop updating ...
	(dw2_build_landing_pads): ... here.  Use a proper block for
	querying the loop father.

2012-03-30  Tristan Gingold  <gingold@adacore.com>

	* config/ia64/ia64.c (ia64_section_type_flags): Remove
	common_object attribute handling.
	(SECTION_VMS_OVERLAY): Remove
	(ia64_vms_common_object_attribute): Replace abort with an assert.
	Do not set DECL_SECTION_NAME.
	(ia64_vms_output_aligned_decl_common): Handle common_object
	attribute.
	(ia64_vms_elf_asm_named_section): Remove.
	* config/ia64/vms.h (TARGET_ASM_NAMED_SECTION): Remove.

2012-03-30  Richard Guenther  <rguenther@suse.de>

	PR middle-end/52786
	* double-int.c (rshift_double): Remove not needed cast.

2012-03-30  Richard Guenther  <rguenther@suse.de>

	* tree-affine.h (print_aff): Remove.
	* tree-affine.c (print_aff): Make static.
	* tree-data-ref.h (access_matrix_get_index_for_parameter): Remove.
	(get_references_in_stmt): Likewise.
	(print_direction_vector): Likewise.
	(print_dir_vectors): Likewise.
	(print_dist_vectors): Likewise.
	(dump_subscript): Likewise.
	(dump_ddrs): Likewise.
	(dump_dist_dir_vectors): Likewise.
	(dump_data_references): Likewise.
	(dump_data_dependence_relation): Likewise.
	(dump_data_dependence_direction): Likewise.
	(dump_rdg_vertex): Likewise.
	(dump_rdg_component): Likewise.
	(debug_ddrs): Declare.
	(struct data_ref_loc_d): Move ...
	* tree-data-ref.c (struct data_ref_loc_d): ... here.
	(get_references_in_stmt): Make static.
	(dump_data_references): Likewise.
	(dump_subscript): Likewise.
	(print_direction_vector): Likewise.
	(print_dir_vectors): Likewise.
	(print_dist_vectors): Likewise.
	(dump_data_dependence_relation): Likewise.
	(dump_dist_dir_vectors): Likewise.
	(dump_ddrs): Likewise.
	(dump_rdg_vertex): Likewise.
	(dump_rdg_component): Likewise.
	(debug_ddrs): New function.
	(access_matrix_get_index_for_parameter): Remove.

2012-03-30  Tristan Gingold  <gingold@adacore.com>

	* config/vms/vms.c (VMS_CRTL_FLOAT32): Rename.
	(VMS_CRTL_FLOAT64, VMS_CRTL_FLOAT64_VAXD): New.
	(VMS_CRTL_FLOAT128, VMS_CRTL_DPML, VMS_CRTL_NODMPL)
	(VMS_CRTL_32ONLY, VMS_CRTL_G_MASK, VMS_CRTL_G_NONE)
	(VMS_CRTL_GA, VMS_CRTL_GL, VMS_CRTL_FLOATV2): New.
	(vms_patch_builtins): Handle new flags
	* config/vms/vms-crtlmap.map: Completed using nm on
	c and math system libraries.
	* config/vms/make-crtlmap.awk: Handle any number of flags.

2012-03-30  Martin Jambor  <mjambor@suse.cz>

	* tree-ssa-ccp.c (insert_clobbers_for_var): Do not assert that there
	is a builtin_stack_save in a dominating BB.

2012-03-29  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/sse.md (avx_h<plusminus_insn>v4df3): Fix results
	crossing 128bit lane boundary.

2012-03-29  Vladimir Makarov  <vmakarov@redhat.com>

	* ira-color.c (setup_left_conflict_sizes_p): Process all
	conflicting objects.

2012-03-29  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/52760
	* tree-vect-slp.c (vect_get_constant_vectors): Convert constant_p
	shift count for {L,R}{SHIFT,ROTATE}_EXPR to TREE_TYPE (vector_type).

2012-03-29  Richard Guenther  <rguenther@suse.de>

	* cgraph.h (cgraph_materialize_all_clones): Remove.
	(reset_inline_failed): Likewise.
	* cgraphunit.c (cgraph_materialize_all_clones): Make static.
	* cgraphbuild.c (reset_inline_failed): Remove.
	* rtl.h (cse_main): Remove.
	(extended_count): Likewise.
	* cse.c (dump_class): Mark as DEBUG_FUNCTION.
	(cse_main): Make static.
	* combine.c (extended_count): Remove.
	(dump_combine_stats): Mark as DEBUG_FUNCTION.
	* basic-block.h (reorder_basic_blocks): Remove.
	* bb-reorder.c (reorder_basic_blocks): Make static.
	* Makefile.in (dse.o): Remove dse.h dependency.
	* dse.h: Remove.
	* dse.c (gate_dse): Remove.
	(clear_alias_mode_eq): Likewise.
	(clear_alias_mode_hash): Likewise.
	(dse_record_singleton_alias_set): Likewise.
	(dse_invalidate_singleton_alias_set): Likewise.

2012-03-29  H.J. Lu  <hongjiu.lu@intel.com>

	* config/linux-android.h (ANDROID_STARTFILE_SPEC): Use
	crtbegin_so%O%s for -shared.
	(ANDROID_ENDFILE_SPEC): Use crtend_so%O%s for -shared.

2012-03-29  Richard Guenther  <rguenther@suse.de>

	* tree-flow.h (struct pre_expr_d): Remove forward declaration.
	(add_to_value): Remove.
	(print_value_expressions): Likewise.
	* tree-ssa-pre.c (add_to_value): Make static.
	(print_value_expressions): Likewise.
	* gimple.h (gimple_adjust_this_by_delta): Remove.
	* gimple-fold.c (gimple_adjust_this_by_delta): Likewise.

2012-03-29  Richard Guenther  <rguenther@suse.de>

	PR middle-end/50708
	* double-int.h (rshift_double): Remove.
	* double-int.c (lshift_double): Use absu_hwi to make count positive.
	(rshift_double): Make static, take unsigned count argument,
	remove handling of negative count argument.
	(double_int_rshift): Dispatch to lshift_double.

2012-03-28  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/biarch64.h (TARGET_64BIT_DEFAULT): Add
	OPTION_MASK_ABI_64.

	* config/i386/gnu-user64.h (SPEC_64): Support TARGET_BI_ARCH == 2.
	(SPEC_X32): Likewise.
	(MULTILIB_DEFAULTS): Likewise.

	* config/i386/i386.c (isa_opts): Remove -m64.
	(ix86_target_string): Properly handle -m32/-m64/-mx32.
	(ix86_option_override_internal): Properly
	set OPTION_MASK_ISA_64BIT and OPTION_MASK_ISA_X32 as well as
	handle -m32, -m64 and -mx32.

	* config/i386/i386.h (TARGET_X32): Replace OPTION_ISA_X32
	with OPTION_ABI_X32.  Moved after TARGET_LP64.
	(TARGET_LP64): Changed to OPTION_ABI_64.

	* config/i386/i386.opt (m64): Replace ISA_64BIT with ABI_64.
	(mx32): Replace ISA_X32 with ABI_X32.

2012-03-28  Eric Botcazou  <ebotcazou@adacore.com>

	* tree.c (tree_size) <VECTOR_CST>: New case.

2012-03-28  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.c (ix86_modes_tieable_p): Handle 32bit AVX modes.
	(ix86_expand_vector_move_misalign): Remove un-needed gen_lowpart calls.

2012-03-28  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/52691
	* tree-ssa-ccp.c (optimize_stdarg_builtin): Optimize
	__builtin_va_start to __builtin_next_arg if the latter is
	builtin_decl_explicit_p rather than when it is not.

	PR middle-end/52750
	* tree-vect-generic.c (vector_element): Perform multiplication
	for pos in bitsizetype type instead of idx type.

2012-03-28  Richard Guenther  <rguenther@suse.de>

	* loop-init.c (loop_optimizer_init): If loops are preserved
	perform incremental initialization of required loop features.
	(loop_optimizer_finalize): If loops are to be preserved only
	clean up optional loop features.
	(rtl_loop_done): Forcefully free loops here.
	* cgraph.c (cgraph_release_function_body): Forcefully free loops.
	* cfgexpand.c (expand_gimple_cond): Properly add new basic-blocks
	to existing loops.
	(construct_init_block): Likewise.
	(construct_exit_block): Likewise.
	(gimple_expand_cfg): Clear LOOP_CLOSED_SSA loop state.  Cleanup
	the CFG after expanding.
	* cfgloop.c (verify_loop_structure): Calculate or verify dominators.
	If we needed to calculate them, free them afterwards.
	* tree-pass.h (PROP_loops): New define.
	* tree-ssa-loop.c (pass_tree_loop_init): Provide PROP_loops.
	* basic-block.h (CLEANUP_CFG_CHANGED): New.
	* cfgcleanup.c (merge_blocks_move): Protect loop latches.
	(cleanup_cfg): If we did something and have loops around, fix them up.
	* cse.c (rest_of_handle_cse_after_global_opts): Call cleanup_cfg
	with CLEANUP_CFG_CHANGED.
	* cfghooks.c (merge_blocks): If we merge a loop header into
	its predecessor, update the loop structure.
	(duplicate_block): If we copy a loop latch, adjust loop state
	to note we may have multiple latches.
	(delete_basic_block): Mark loops for fixup if we remove a loop.
	* cfganal.c (forwarder_block_p): Protect loop latches, headers
	and preheaders.
	* cfgrtl.c (rtl_can_merge_blocks): Protect loop latches.
	(cfg_layout_can_merge_blocks_p): Likewise.
	* cprop.c (bypass_block): If we create a loop with multiple
	entries, mark it for removal.
	* except.c (emit_to_new_bb_before): Add the new basic-block
	to existing loops.
	* tree-eh.c (lower_resx): Likewise.
	* omp-low.c (finalize_task_copyfn): Do not copy PROP_loops.
	(expand_omp_taskreg): Likewise.
	* tree-inline.c (initialize_cfun): Likewise.
	* tree-mudflap.c (add_bb_to_loop): Prototype.
	(mf_build_check_statement_for): Properly add new basic-blocks
	to existing loops.
	* tree-ssa-threadupdate.c (thread_block): Mark loops for fixup
	if we remove a loop.
	(thread_through_loop_header): Likewise.
	* trans-mem.c (tm_log_emit_save_or_restores): Properly add
	new basic-blocks to existing loops.
	(expand_transaction): Likewise.
	* Makefile.in (except.o): Add $(CFGLOOP_H).
	(expr.o): Likewise.
	(cgraph.o): Likewise.
	(cprop.o): Likewise.
	(cfgexpand.o): Likewise.
	(cfganal.o): Likewise.
	(trans-mem.o): Likewise.
	(tree-eh.o): Likewise.

2012-03-28  Georg-Johann Lay  <avr@gjlay.de>

	PR target/52692
	* config/avr/avr.c (TARGET_BUILTIN_DECL): New define.
	(avr_builtin_decl): New static function.
	(struct avr_builtin_description, avr_bdesc): Move up.
	Add GTY marker. Add field fndecl. Remove redundant field id.
	(avr_init_builtins): Initialize avr_bdesc[ID].fndecl.
	(avr_expand_builtin): Code cleanup because .id is removed.

2012-03-28  Georg-Johann Lay  <avr@gjlay.de>

	PR target/52737
	* config.gcc (tm_file): Remove avr/multilib.h.

	* doc/invoke.texi (AVR Options): Adjust documentation of -mtiny-stack.

	* config/avr/genmultilib.awk: Remove code to generate multilib.h.
	(BEGIN): Use -msp8 as multilib option instead of -mtiny-stack.
	* config/avr/t-avr: Remove generation of multilib.h.
	* config/avr/t-multilib: Regenerate.
	* config/avr/multilib.h: Remove.
	* config/avr/avr.opt (-msp8): New option.
	(avr_sp8): New variable.
	* config/avr/driver-avr.c (avr_device_to_sp8): New function.
	* config/avr/avr.h (AVR_HAVE_SPH): New define.
	(AVR_HAVE_8BIT_SP): Also set by avr_sp8 i.e. -msp8.
	(avr_device_to_sp8): New prototype.
	(EXTRA_SPEC_FUNCTIONS): Add { "device_to_sp8", avr_device_to_sp8 }
	(DRIVER_SELF_SPECS): New define.
	* config/avr/avr-c.c (avr_cpu_cpp_builtins): New built-in defines:
	__AVR_SP8__, __AVR_HAVE_SPH__.
	* config/avr/avr.c (output_movhi): Use AVR_HAVE_SPH instead of
	AVR_HAVE_8BIT_SP to decide if SP_H is present.
	(avr_file_start): Ditto.

2012-03-28  Jakub Jelinek  <jakub@redhat.com>

	PR target/52736
	* config/i386/sse.md (sse2_loadlpd splitter): Use offset 0
	instead of 8 in adjust_address.

2012-03-27  Aurelien Buhrig  <aurelien.buhrig.gcc@gmail.com>

	PR middle-end/51893
	* expmed.c (store_bit_field_1): Fix wordnum value for big-endian
	targets.

2012-03-27  Oleg Endo  <olegendo@gcc.gnu.org>

	PR target/50751
	* config/sh/sh.c (sh_legitimize_address, sh_legitimize_reload_address):
	Rearrange conditional logic.  Move displacement address calculations
	to ...
	(sh_find_mov_disp_adjust): ... this new function.

2012-03-27  H.J. Lu  <hongjiu.lu@intel.com>

	* config/arm/arm.opt (mapcs): Remove MaskExists.
	* config/cris/linux.opt (mno-gotplt): Likewise.
	* config/i386/i386.opt (mhard-float): Likewise.
	(msse4): Likewise.
	(mno-sse4): Likewise.
	* config/m68k/m68k.opt (mhard-float): Likewise.
	* config/mep/mep.op (mcop32): Likewise.
	* config/pa/pa-hpux.opt (msio): Likewise.
	* config/pa/pa64-hpux.opt (mgnu-ld): Likewise.
	* config/picochip/picochip.opt (mlittle): Likewise.
	* config/sh/sh.opt (mrenesas): Likewise.
	* config/sparc/long-double-switch.opt (mlong-double-128): Likewise.
	* config/sparc/sparc.opt (mhard-float): Likewise.
	* config/v850/v850.opt (mv850es): Likewise.
	* config/vax/vax.opt (mg-float): Likewise.

2012-03-27  Martin Jambor  <mjambor@suse.cz>

	PR middle-end/52693
	* tree-sra.c (sra_modify_assign): Do not call
	load_assign_lhs_subreplacements when working with an unscalarizable
	region.

2012-03-27  Uros Bizjak  <ubizjak@gmail.com>

	PR target/52698
	* config/i386/i386-protos.h (ix86_legitimize_reload_address):
	New prototype.
	* config/i386/i386.h (LEGITIMIZE_RELOAD_ADDRESS): New define.
	* config/i386/i386.c: Include reload.h.
	(ix86_legitimize_reload_address): New function.

2012-03-27  H.J. Lu  <hongjiu.lu@intel.com>

	* opth-gen.awk: Allocated a bit for Mask and InverseMask if it
	hasn't been allocated.  Define a target macro for Mask and
	InverseMask if it hasn't been defined.  Remove MaskExists handling.

	* doc/options.texi: Remove MaskExists.

2012-03-27  Chung-Lin Tang  <cltang@codesourcery.com>

	PR target/52667
	* config/sh/sh.c (find_barrier): Add equality check of last_got
	to avoid going above orig insn. Update comments.

2012-03-27  Richard Guenther  <rguenther@suse.de>

	PR middle-end/52720
	* fold-const.c (try_move_mult_to_index): Handle &x.array more
	explicitely.

2012-03-27  Eric Botcazou  <ebotcazou@adacore.com>

	* expmed.c (store_bit_field): Assert that BITREGION_START is a multiple
	of a unit before computing the offset in units.
	* expr.c (get_bit_range): Return the null range if the enclosing record
	is part of a larger bit field.

2012-03-27  Tristan Gingold  <gingold@adacore.com>

	* config/ia64/vms.h (CASE_VECTOR_MODE): Define.
	* config/ia64/ia64.md: Remove mode in template.
	Sign extend operand in expand_simple_binop.
	* config/ia64/ia64.h (ASM_OUTPUT_ADDR_DIFF_ELT): Use
	CASE_VECTOR_MODE instead of TARGET_ILP32.
	(ADDR_VEC_ALIGN): Make it depends on CASE_VECTOR_MODE.

2012-03-26  Steven Bosscher  <steven@gcc.gnu.org>

	* varasm.c (assemble_external): #if 0 out the new assert from the
	previous commit, it breaks the Java and Go front ends.

2012-03-26  Steven Bosscher  <steven@gcc.gnu.org>

	* toplev.c (check_global_declaration_1): Do not call assemble_external.
	* expr.c (emit_block_move_libcall_fn): Likewise.
	(clear_storage_libcall_fn): Likewise.
	(expand_expr_addr_expr_1): Likewise.
	(expand_expr_real_1): Likewise.
	* calls.c (rtx_for_function_call): Likewise.

	* varasm.c (assemble_external): Assert this function is only called
	during or after expanding to RTL.

2012-03-26  Martin Jambor  <mjambor@suse.cz>

	PR tree-optimization/50052
	* tree-sra.c (tree_non_aligned_mem_p): Removed.
	(tree_non_aligned_mem_for_access_p): Likewise.
	(build_accesses_from_assign): Removed strict alignment requirements
	checks.
	(access_precludes_ipa_sra_p): Likewise.

2012-03-26  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/52701
	* tree-vect-loop.c (vect_analyze_scalar_cycles_1): Always
	compute and set the evolution part of PHI nodes.

2012-03-26  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/52721
	* tree-vect-stmts.c (vect_init_vector): Handle scalars.

2012-03-26  Ulrich Weigand  <ulrich.weigand@linaro.org>

	PR tree-optimization/52686
	* tree-vect-data-refs.c (vect_get_smallest_scalar_type): Handle
	WIDEN_LSHIFT_EXPR.

2012-03-26  Tristan Gingold  <gingold@adacore.com>

	* config/alpha/vms.h (LINK_SPEC): Simplify.
	(STARTFILE_SPEC): Remove -mvms-return-codes handling.
	(NAME__MAIN, SYMBOL__MAIN): Remove.
	(VMS_DEBUG_MAIN_POINTER): Remove.
	* config/ia64/vms.h: Likewise.
	* config/alpha/alpha.c (alpha_start_function): Move vms_debug_main
	code to vms.c.  Call vms_start_function.
	* config/ia64/ia64.c (ia64_start_function): Likewise.
	* config/vms/vms-protos.h (vms_start_function): Declare.
	* config/vms/vms.c (vms_start_function): New function.
	* config/vms/vms.h (MATH_LIBRARY): Define.
	(VMS_DEBUG_MAIN_POINTER): Define.

2012-03-26  Eric Botcazou  <ebotcazou@adacore.com>

	PR rtl-optimization/52629
	* reload1.c (count_pseudo): Short-circuit common case.
	(count_spilled_pseudo): Return early for pseudos without hard regs.
	Assert that the pseudo has got a hard reg before manipulating it.

2012-03-24  Jan Hubicka  <jh@suse.cz>

	PR lto/51663
	* varpool.c (varpool_finalize_decl): Handle toplevel_reorder here.
	(decide_is_variable_needed): Do not handle toplevel reorder here.
	* cgraph.h (varpool_can_remove_if_no_refs): Likewise.
	* ipa.c (cgraph_remove_unreachable_nodes): Remove unreachable vars
	even at -O0.

2012-03-24  Eric Botcazou  <ebotcazou@adacore.com>

	* expr.c (optimize_bitfield_assignment_op) <BIT_IOR_EXPR>: Use str_mode
	and str_bitsize instead of more convoluted expressions.

2012-03-24  Eric Botcazou  <ebotcazou@adacore.com>

	PR target/52610
	* config/sparc/sparc.h (ASM_CPU_SPEC): Pass -Av8 if -mcpu=leon.

2012-03-24  Eric Botcazou  <ebotcazou@adacore.com>

	PR target/52656
	* config/sparc/sparc.c (sparc_handle_vis_mul8x16): Fix pasto.

2012-03-23  Martin Jambor  <mjambor@suse.cz>

	* tree-sra.c (build_accesses_from_assign): Remove FIXME comment.

2012-03-23  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/52678
	* tree-vectorizer.h (struct _stmt_vec_info): Add
	loop_phi_evolution_part member.
	(STMT_VINFO_LOOP_PHI_EVOLUTION_PART): New define.
	* tree-vect-loop.c (vect_analyze_scalar_cycles_1): Initialize
	STMT_VINFO_LOOP_PHI_EVOLUTION_PART.
	* tree-vect-loop-manip.c (vect_update_ivs_after_vectorizer):
	Use the cached evolution part and the PHI nodes value from
	the loop preheader edge instead of re-analyzing the evolution.

2012-03-22  Maxim Kuvyrkov  <maxim@codesourcery.com>

	* config/mips/mips-tables.opt: Update.
	* config/mips/mips.md (processor): Add xlp.
	* config/mips/mips-cpus.def: Add xlp.
	* config/mips/mips.c (mips_rtx_cost_data): Add costs for XLP, copy from
	5KF for now.
	* config/mips/mips.h (MIPS_ISA_LEVEL_SPEC): Handle xlp.
	* doc/invoke.texi: Mention XLP.

2012-03-22  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/52547
	* tree-nested.c (convert_tramp_reference_stmt): Call declare_vars
	on any new_local_var_chain vars declared during recursing on
	GIMPLE_OMP_PARALLEL or GIMPLE_OMP_TASK body.

2012-03-22  Uros Bizjak  <ubizjak@gmail.com>

	* config/alpha/alpha.h (ASM_OUTPUT_ALIGN): Move to config/alpha/elf.h
	(ASM_OUTPUT_SKIP): Move to config/alpha/vms.h
	(ASM_OUTPUT_LOCAL): Ditto.
	(ASM_OUTPUT_COMMON): Remove.
	* config/alpha/elf.h (ASM_OUTPUT_DEF_FROM_DECLS): Use ASM_OUTPUT_DEF.
	* config/alpha/vms.h (ASM_OUTPUT_ALIGN): Do not undefine before define.

2012-03-22  Jan Hubicka  <jh@suse.cz>

	PR middle-end/51737
	* cgraph.c (cgraph_remove_node_and_inline_clones): Add FORBIDDEN_NODE
	parameter.
	* cgraph.h (cgraph_remove_node_and_inline_clones): Update prototype.
	* ipa-inline-transform.c (save_inline_function_body): Remove
	copied clone if needed.
	* tree-inline.c (delete_unreachable_blocks_update_callgraph): Update.

2012-03-22  Richard Guenther  <rguenther@suse.de>

	PR middle-end/52666
	* fold-const.c (fold_ternary_loc): Fix typo.

2012-03-22  Georg-Johann Lay  <avr@gjlay.de>

	PR target/52496
	* config/avr/avr.md (unspec): Remove UNSPEC_MEMORY_BARRIER.
	(unspecv): Add UNSPECV_MEMORY_BARRIER.
	(cli_sei): Use unspec_volatile instead of unspec for memory barrier.
	(delay_cycles_1, delay_cycles_2): Ditto.
	(delay_cycles_3, delay_cycles_4): Ditto.
	(nopv, *nopv): Ditto.
	(sleep, *sleep): Ditto.
	(wdr, *wdr): Ditto.

2012-03-22  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/52548
	* tree-ssa-pre.c (valid_in_sets): Remove handling of invalidation
	because of clobbers.
	(prune_clobbered_mems): New function.
	(compute_antic_aux): Use it to prune ANTIC_OUT.
	(compute_partial_antic_aux): Use it to prune PA_IN.
	(compute_avail): Only insert expressions into EXP_GEN that are not
	invalidated when translated up to the beginning of the block.

2012-03-22  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/52638
	* tree-vect-stmts.c (vect_init_vector_1): New function, split
	out from ...
	(vect_init_vector): ... here.  Handle scalar vector inits.
	(vect_get_vec_def_for_operand): Adjust.
	(vectorizable_load): Likewise.

2012-03-22  Uros Bizjak  <ubizjak@gmail.com>

	* config.gcc (alpha*-*-linux*): Add elfos.h to tm_file.
	(alpha*-*-freebsd*): Ditto.
	(alpha*-*-netbsd*): Ditto.
	(alpha*-*-openbsd*): Ditto.
	* config/alpha/elf.h (OBJECT_FORMAT_ELF): Remove.
	(DWARF2_DEBUGGING_INFO): Remove.
	(PREFERRED_DEBUGGING_TYPE): Remove.
	(ASM_FINAL_SPEC): Remove.
	(IDENT_ASM_OP): Remove.
	(ASM_OUTPUT_IDENT): Remove.
	(SKIP_ASM_OP): Remove.
	(ASM_OUTPUT_SKIP): Remove.
	(ALIGN_ASM_OP): Remove.
	(ASM_OUTPUT_BEFORE_CASE_LABEL): Remove.
	(ASM_OUTPUT_CASE_LABEL): Remove.
	(ASM_OUTPUT_EXTERNAL_LIBCALL): Remove.
	(COMMON_ASM_OP): Remove.
	(ASM_OUTPUT_ALIGNED_COMMON): Remove.
	(ASCII_DATA_ASM_OP): Remove.
	(READONLY_DATA_SECTION_ASM_OP): Remove.
	(INIT_SECTION_ASM_OP): Remove.
	(FINI_SECTION_ASM_OP): Remove.
	(ASM_SECTION_START_OP): Remove.
	(ASM_OUTPUT_SECTION_START_FILE): Remove.
	(TARGET_ASM_NAMED_SECTION): Remove.
	(TARGET_ASM_SELECT_SECTION): Remove.
	(MAKE_DECL_ONE_ONLY): Remove.
	(TYPE_ASM_OP): Remove.
	(SIZE_ASM_OP): Remove.
	(ASM_WEAKEN_LABEL): Remove.
	(TYPE_OPERAND_FMT): Remove.
	(ASM_DECLARE_RESULT): Remove.
	(ASM_DECLARE_OBJECT_NAME): Remove.
	(ASM_FINISH_DECLARE_OBJECT): Remove.
	(ELF_ASCII_ESCAPES): Remove.
	(ELF_STRING_LIMIT): Remove.
	(STRING_ASM_OP): Remove.
	(ASM_OUTPUT_EXTERNAL): Remove.
	(TARGET_ASM_FILE_START_FILE_DIRECTIVE): Redefine to false.
	* config/alpha/alpha.h (PCC_BITFIELD_TYPE_MATTERS): Undefine
	before define.
	(ASM_DECLARE_FUNCTION_NAME): Ditto.
	(ASM_DECLARE_FUNCTION_SIZE): Ditto.
	(ASM_GENERATE_INTERNAL_LABEL): Ditto.
	(ASM_OUTPUT_SKIP): Ditto.
	(READONLY_DATA_SECTION_ASM_OP): Remove.
	(USER_LABEL_PREFIX): Remove.
	(ASM_OUTPUT_ASCII): Remove.
	(ASM_OUTPUT_CASE_LABEL): Remove.
	(NO_DOLLAR_IN_LABEL): Undefine.

2012-03-22  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/52459
	* tree-ssa-pre.c (inhibit_phi_insertion): Do not inhibit
	PHI insertion for calls.

2012-03-21  Steven Bosscher  <steven@gcc.gnu.org>

	* cse.c (invalidate_from_sets_and_clobbers, try_back_substitute_reg,
	find_sets_in_insn, canonicalize_insn): Split out from ...
	(cse_insn): ... here.
	(invalidate_from_clobbers): Take an insn instead of the pattern.

2012-03-21  Oleg Endo  <olegendo@gcc.gnu.org>

	PR target/52479
	* config/sh/sh-protos.h (sh_fsca_df2int): Remove.
	* config/sh/sh.c (sh_fsca_df2int_rtx, sh_fsca_df2int): Remove.
	* config/sh/sh.md (sindf2, cosdf2): Remove.

2012-03-21  Kaz Kojima  <kkojima@gcc.gnu.org>

	PR target/52642
	* config/sh/sh.c (sh_expand_prologue): Emit blockage at the end of
	prologue for unwinder and profiler.

2012-03-21  Andreas Tobler  <andreast@fgznet.ch>

	* configure.ac (HAVE_LD_NO_DOT_SYMBOLS): Add powerpc64-*-freebsd*.
	Introduce emul_name to select the right linker emulation for
	powerpc64-*-freebsd*.
	* configure: Regenerate.
	* config.gcc: Add bits to support powerpc64-*-freebsd*.
	* config/rs6000/freebsd.h (POWERPC_FREEBSD): Define.
	* config/rs6000/freebsd64.h: New file.
	* config/rs6000/rs6000.c (rs6000_option_override_internal): Use
	POWERPC_FREEBSD.
	(rs6000_savres_strategy): Likewise.
	(rs6000_savres_routine_name): Likewise.
	(rs6000_elf_file_end): Likewise.
	* config/rs6000/t-freebsd64: New file.
	* config/rs6000/sysv4.h (SUBTARGET_OVERRIDE_OPTIONS): Set the
	rs6000_current_abi for 64-bit FreeBSD to ABI_AIX.

	* config/rs6000/freebsd64.h: Remove duplicated entries from last
	commit.
	* config/rs6000/t-freebsd64: Likewise.

2012-03-21  Georg-Johann Lay  <avr@gjlay.de>

	PR rtl-optimization/52543
	PR target/52461
	* config/avr/avr-protos.h (avr_load_lpm): New prototype.
	* config/avr/avr.c (avr_mode_dependent_address_p): New function.
	(TARGET_MODE_DEPENDENT_ADDRESS_P): New define.
	(avr_load_libgcc_p): Restrict to __flash loads.
	(avr_out_lpm): Only handle 1-byte loads from __flash.
	(avr_load_lpm): New function.
	(avr_find_unused_d_reg): Remove.
	(avr_out_lpm_no_lpmx): Remove.
	(adjust_insn_length): Handle ADJUST_LEN_LOAD_LPM.
	* config/avr/avr.md (unspec): Add UNSPEC_LPM.
	(load_<mode>_libgcc): Use UNSPEC_LPM instead of MEM.
	(load_<mode>, load_<mode>_clobber): New insns.
	(mov<mode>): For multi-byte move from non-generic
	16-bit address spaces: Expand to load_<mode> resp.
	load_<mode>_clobber.
	(load<mode>_libgcc): Remove expander.
	(split-lpmx): Remove split.

2012-03-21  Richard Earnshaw  <rearnsha@arm.com>

	* neon.md (neon_vget_lanev2di): Use gen_lowpart and gen_highpart.
	* config/arm/neon.ml (Fixed_return_reg): Renamed to fixed_vector_reg.
	All callers changed.
	(Fixed_core_reg): New feature.
	(Vget_lane [sizes S64 and U64]): Add Fixed_core_reg.  Allow fmrrd in
	disassembly.
	* neon-testgen.ml: Handle Fixed_core_reg.

2012-03-21  Andrew Stubbs  <ams@codesourcery.com>

	* config/arm/arm.c (thumb2_reorg): Add complete support
	for 16-bit instructions.
	* config/arm/thumb2.md: Delete obsolete flag-clobbering peepholes.

2012-03-21  Richard Guenther  <rguenther@suse.de>

	PR tree-optimizer/52636
	* tree-vect-slp.c (vect_get_constant_vectors): Convert constants
	to the appropriate type.

2012-03-21  Richard Guenther  <rguenther@suse.de>

	* Makefile.in (cfgexpand.o): Add $(REGS_H) and $(INTEGRATE_H)
	dependencies.
	* cfgexpand.c (gimple_expand_cfg): Fold in pass_init_function,
	pass_jump, pass_initial_value_sets and pass_unshare_all_rtl.
	* passes.c (init_optimization_passes): Remove pass_init_function,
	pass_jump, pass_initial_value_sets and pass_unshare_all_rtl.
	* tree-pass.h (pass_init_function): Remove.
	(pass_jump): Remove.
	(pass_initial_value_sets): Remove.
	(pass_unshare_all_rtl): Remove.
	* integrate.c (pass_initial_value_sets): Remove.
	* emit-rtl.c (pass_unshare_all_rtl): Remove.
	* tree.h (init_function_for_compilation): Remove.
	* function.c (init_function_for_compilation): Remove.
	(pass_init_function): Remove.
	* cfgcleanup.c (rest_of_handle_jump): Remove.
	(pass_jump): Remove.

2012-03-20  Jason Merrill  <jason@redhat.com>

	* tree-streamer-in.c (streamer_alloc_tree): Call
	ggc_alloc_zone_cleared_tree_node instead of
	ggc_alloc_zone_cleared_tree_node_stat.

2012-03-20  Jonathan Wakely  <jwakely.gcc@gmail.com>

	* doc/extend.texi (Template Instantiation): Remove anachronisms.

2012-03-20  Jakub Jelinek  <jakub@redhat.com>

	PR target/52607
	* config/i386/i386.c (expand_vec_perm_vperm2f128): New function.
	(ix86_expand_vec_perm_const_1): Call it.

	* config/i386/i386.c (vselect_insn): New variable.
	(init_vselect_insn): New function.
	(expand_vselect, expand_vselect_insn): Add testing_p argument.
	Call init_vselect_insn if vselect_insn is NULL.  Adjust
	PATTERN (vselect_insn), instead of creating a new insn each time,
	only emit a copy of it if not testing and recog has been successful.
	(expand_vec_perm_pshufb, expand_vec_perm_1,
	expand_vec_perm_pshuflw_pshufhw, expand_vec_perm_broadcast_1): Adjust
	callers.

	PR target/52607
	* config/i386/i386.md ("isa" attribute): Add avx2 and noavx2.
	("enabled" attribute): Handle avx2 and noavx2 isas.
	* config/i386/sse.md (avx2_vec_dupv8sf_1, avx2_pbroadcast<mode>_1):
	New insns.
	(vec_dup<mode>): Add avx2 =x,x alternative.
	(vec_dup<mode> splitter): Don't split if TARGET_AVX2.
	(*avx_vperm_broadcast_<mode>): Don't split V4DFmode if TARGET_AVX2.
	For TARGET_AVX2, V8SFmode and elt == 0 split into vbroadcastss.
	* config/i386/i386.c (expand_vec_perm_pshufb): Emit also vpermps
	for V8SFmode.
	(expand_vec_perm_1): For broadcasts, use avx2_pbroadcast<mode>_1
	if possible, handle also V8SFmode.

2012-03-20  Richard Earnshaw  <rearnsha@arm.com>

	* arm/predicates.md (zero_operand, reg_or_zero_operand): New predicates.
	* arm/neon.md (neon_vceq<mode>, neon_vcge<mode>): Use
	reg_or_zero_operand predicate.
	(neon_vcle<mode>, neon_vclt<mode>): Use zero_operand predicate.

2012-03-20  Jakub Jelinek  <jakub@redhat.com>

	* config/i386/i386.c (ix86_decompose_address) <case ZERO_EXTEND>:
	If operand isn't UNSPEC, return 0.

2012-03-20  Richard Guenther  <rguenther@suse.de>

	* tree-pass.h (pass_rtl_eh): Remove.
	* except.c (gate_handle_eh): Likewise.
	(rest_of_handle_eh): Likewise.
	(pass_rtl_eh): Likewise.
	(finish_eh_generation): Export.
	* except.h (finish_eh_generation): Declare.
	* passes.c (init_optimization_passes): Remove pass_rtl_eh.
	* cfgexpand.c (gimple_expand_cfg): Call finish_eh_generation
	after expanding stack alignment.  Instead of compacting blocks
	call cleanup_cfg.

2012-03-20  Richard Guenther  <rguenther@suse.de>

	* stor-layout.c (finish_bitfield_representative): Fallback
	to conservative maximum size if the padding up to the next
	field cannot be computed as a constant.
	(finish_bitfield_layout): If we cannot compute the distance
	between the start of the bitfield representative and the
	bitfield member start a new representative.
	* expr.c (get_bit_range): The distance between the start of
	the bitfield representative and the bitfield member is zero
	if the field offsets are not constants.

2012-03-20  Tristan Gingold  <gingold@adacore.com>

	* tree.h (enum size_type_kind): Add stk_ prefix to constants,
	convert in lowercase.
	(sizetype_tab, sizetype, bitsizetype, ssizetype, sbitsizetype)
	(size_int, ssize_int, bitsize_int, sbitsize_int): Adjust.
	* stor-layout.c (sizetype_tab): Adjust.
	(initialize_sizetypes): Use SIZETYPE instead of SIZE_TYPE.
	* tree-streamer.c (preload_common_nodes): Use stk_type_kind_last
	instead of type_kind_last.
	* tree-scalar-evolution.c (interpret_rhs_expr): Use size_int
	instead of size_int_kind.
	* doc/tm.texi.in (Type Layout): Document SIZETYPE.
	* doc/tm.texi: Regenerate.
	* defaults.h (SIZETYPE): Provide a default value.
	* config/vms/vms.h (SIZE_TYPE): Define as "unsigned int".
	(SIZETYPE): Define.

2012-03-20  Oleg Endo  <olegendo@gcc.gnu.org>

	* config/sh/sh.md: Use braced string notation where applicable.

2012-03-19  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.md (allocate_stack): Simplify.

2012-03-19  Uros Bizjak  <ubizjak@gmail.com>

	* builtins.c (expand_builtin_cexpi): Use copy_addr_to_reg instead of
	copy_to_mode_reg (Pmode, ...).
	(expand_builtin_frame_address): Ditto.
	* expr.c (emit_block_move_via_libcall): Ditto.
	(set_storage_via_libcall): Ditto.

	* config/i386/i386.c (ix86_expand_movmem): Ditto.
	(ix86_expand_setmem): Ditto.
	(ix86_trampoline_init): DItto.
	* config/i386/i386.md (cmpstrnsi): Ditto.

2012-03-19  Sandra Loosemore  <sandra@codesourcery.com>

	* config/sh/sh.opt (madjust-unroll): Mark as ignored/obsolete.
	* config/sh/sh.h (TARGET_OPT_DEFAULT): Don't use MASK_ADJUST_UNROLL.
	* doc/invoke.texi (Option Summary): Remove -madjust-unroll.
	(SH Options): Likewise.

2012-03-19  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.c (get_thread_pointer): Add tp_mode argument.
	Generate ZERO_EXTEND in place if GET_MODE (tp) != tp_mode.
	(legitimize_tls_address) <TLS_MODEL_INITIAL_EXEC>: Always generate
	DImode UNSPEC_GOTNTPOFF references on TARGET_64BIT.
	(ix86_decompose_address): Allow zero extended UNSPEC_TP references.

	Revert:
	2012-03-13  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.h (TARGET_TLS_INDIRECT_SEG_REFS): New.
	* config/i386/i386.c (ix86_decompose_address): Use
	TARGET_TLS_INDIRECT_SEG_REFS to prevent %fs:(%reg) addresses.
	(legitimize_tls_address): Use TARGET_TLS_INDIRECT_SEG_REFS to load
	thread pointer to a register.

	Revert:
	2012-03-10  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.c (ix86_decompose_address): Disallow fs:(reg)
	if Pmode != word_mode.
	(legitimize_tls_address): Call gen_tls_initial_exec_x32 if
	Pmode == SImode for TARGET_X32.

	* config/i386/i386.md (UNSPEC_TLS_IE_X32): New.
	(tls_initial_exec_x32): Likewise.

2012-03-19  Oleg Endo  <olegendo@gcc.gnu.org>

	PR target/50751
	* config/sh/sh.h (CONST_OK_FOR_K04, CONST_OK_FOR_K12, DISP_ADDR_P,
	DISP_ADDR_OFFSET): New macros.
	* config/sh/sh.c (sh_address_cost): Add SH2A special case.
	(sh_legitimate_index_p): Allow QImode displacements for non-SH2A.
	(sh_legitimize_address): Add QImode displacement handling.
	(sh_cannot_change_mode_class): Disallow GENERAL_REGS for SFmode
	vector subregs.
	(sh_secondary_reload): Add QImode displacement handling.
	* config/sh/predicates.md (movsrc_no_disp_mem_operand): New predicate.
	* config/sh/constraints.md (K04, Snd, Sdd): New constraints.
	* config/sh/sh.md (extendqisi2): Remove constraints from expander.
	(*extendqisi2_compact): Rename to *extendqisi2_compact_reg, restrict
	to register operands only.
	(*extendqisi2_compact_mem_disp, *extendqisi2_compact_snd): New insns.
	(extendqihi2): Change insn to expander.
	(*extendqihi2_compact_reg): New insn.
	(movqi_i, movqi): Replace with ...
	(movqi, *movqi_reg_reg, *movqi_store_mem_disp12,
	*movqi_load_mem_disp, *movqi_load_mem_disp): ... these.
	Add new peepholes for QImode displacement addressing.

2012-03-19  Paolo Carlini  <paolo.carlini@oracle.com>

	PR c++/14710
	* doc/invoke.texi: Document -Wuseless-cast.

2012-03-19  Eric Botcazou  <ebotcazou@adacore.com>

	* tree.def (REALPART_EXPR, IMAGPART_EXPR, VIEW_CONVERT_EXPR): Move.
	* tree.h (handled_component_p): Reorder cases.
	* dwarf2out.c (loc_list_for_address_of_addr_expr_of_indirect_ref): Do
	not initialize unsignedp.
	(loc_list_from_tree): Likewise.
	(fortran_common): Likewise.
	* simplify-rtx.c (delegitimize_mem_from_attrs): Likewise.

2012-03-19  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.c (ix86_expand_prologue) <CM_LARGE_PIC>: Use Pmode
	mode consistently.  Use ix86_gen_add3.  Assert that Pmode == DImode.
	(ix86_expand_split_stack_prologue): Use ix86_gen_add3.
	(ix86_split_long_move): Ditto.
	(legitimize_tls_address): Use ix86_gen_sub3.
	(construct_plt_address): Assert that Pmode == DImode.

2012-03-18  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.md: Remove empty predicates and/or constraints.
	* config/i386/sync.md: Ditto.
	* config/i386/sse.md: Ditto.
	* config/i386/mmx.md: Ditto.
	* config/i386/pentium.md: Ditto.
	* config/i386/athlon.md: Ditto.

2012-03-16  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/52603
	* tree-vect-data-refs.c (vect_can_force_dr_alignment_p): Clarify
	comment.

	Revert
	2012-03-14  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/52571
	* tree-vect-data-refs.c (vect_compute_data_ref_alignment): Move
	flag_section_anchors check ...
	(vect_can_force_dr_alignment_p): ... here.

2012-03-16  Martin Jambor  <mjambor@suse.cz>

	* expr.c (expand_expr_real_1): Handle misaligned scalar reads from
	memory through MEM_REFs by calling extract_bit_field.

2012-03-16  Richard Guenther  <rguenther@suse.de>

	* fold-const.c (native_interpret_expr): Also support POINTER_TYPE
	and REFERENCE_TYPE interpretations.
	(can_native_interpret_type_p): New function.
	(fold_ternary_loc): Use native encode/interpret to fold
	BIT_FIELD_REFs of constants.

2012-03-16  Richard Guenther  <rguenther@suse.de>

	PR middle-end/52584
	* fold-const.c (fold_ternary_loc): Fold vector typed BIT_FIELD_REFs
	of vector constants and constructors.

2012-03-16  Richard Guenther  <rguenther@suse.de>

	* tree-vect-stmts.c (vect_get_vec_def_for_operand): Use
	VIEW_CONVERT_EXPR to convert constants.
	(vect_is_simple_use): Treat all constants as vec_constant_def.

2012-03-16  Richard Guenther  <rguenther@suse.de>
	    Kai Tietz  <ktietz@redhat.com>

	PR middle-end/48814
	* gimplify.c (gimplify_self_mod_expr): Evaluate postfix
	side-effects completely in the pre-queue and use a temporary
	for the result.

2012-03-16  Richard Guenther  <rguenther@suse.de>

	* stor-layout.c (finish_bitfield_representative): Fall back
	to the conservative maximum size if we cannot compute the
	size of the tail padding.

2012-03-16  Tristan Gingold  <gingold@adacore.com>

	* config/vms/vms.h (TARGET_OS_CPP_BUILTINS): Define
	__CRTL_VER and __VMS_VER.
	* config/vms/vms-protos.h: Declare vms_c_get_crtl_ver
	and vms_c_get_vms_ver.
	* config/vms/vms-c.c (vms_c_get_crtl_ver, vms_c_get_vms_ver): New
	functions.
	* config/alpha/vms.h (VMS_DEFAULT_CRTL_VER)
	(VMS_DEFAULT_VMS_VER): Define.
	* config/ia64/vms.h (VMS_DEFAULT_CRTL_VER)
	(VMS_DEFAULT_VMS_VER): Define.

2012-03-16  Richard Guenther  <rguenther@suse.de>

	* tree-vect-loop.c (get_initial_def_for_induction): Use
	build_constructor directly.
	* tree-vect-stmts.c (vect_get_vec_def_for_operand): Use
	build_vector_from_val.
	* tree.c (build_vector_from_val): Avoid creating a constructor
	first when we want a constant vector.

2012-03-16  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>

	* doc/install.texi (Specific, *-*-solaris2*): Improve wording.

2012-03-16  Richard Guenther  <rguenther@suse.de>

	* tree.h (TREE_VECTOR_CST_ELTS): Remove.
	(VECTOR_CST_NELTS, VECTOR_CST_ELTS, VECTOR_CST_ELT): New defines.
	(struct tree_vector): Remove elements member, add variable size
	elts array member.
	(build_vector_stat): Declare.
	(build_vector): Define in terms of build_vector_stat.
	* tree.c (build_vector): Rename to ...
	(build_vector_stat): ... this.  Take array of trees as parameter.
	(build_vector_from_ctor): Adjust.
	(integer_zerop, integer_onep, integer_all_onesp, iterative_hash_expr,
	initializer_zerop): Adjust.
	* cfgexpand.c (expand_debug_expr): Likewise.
	* expr.c (categorize_ctor_elements_1, expand_expr_real_1,
	const_vector_from_tree): Likewise.
	* fold-const.c (const_binop, operand_equal_p, native_encode_vector,
	native_interpret_vector, fold_unary_loc, vec_cst_ctor_to_array,
	fold_vec_perm, fold_binary_loc, fold_ternary_loc): Likewise.
	* tree-streamer-in.c (streamer_alloc_tree): Handle TS_VECTOR.
	(lto_input_ts_vector_tree_pointers): Adjust.
	* tree-streamer-out.c (streamer_write_tree_header): Handle TS_VECTOR.
	(write_ts_vector_tree_pointers): Adjust.
	* varasm.c (const_hash_1, compare_constant, copy_constant,
	output_constant): Adjust.
	* gimple-fold.c (gimple_fold_stmt_to_constant_1): Adjust.
	* print-tree.c (print_node): Adjust.
	* tree-pretty-print.c (dump_generic_node): Adjust.
	* tree-vect-generic.c (uniform_vector_p, vector_element,
	lower_vec_perm): Adjust.
	* tree-vect-loop.c (get_initial_def_for_reduction): Adjust.
	* tree-vect-slp.c (vect_get_constant_vectors,
	vect_transform_slp_perm_load): Adjust.
	* tree-vect-stmts.c (vect_gen_perm_mask): Adjust.
	* expmed.c (make_tree): Adjust.
	* config/i386/i386.c (ix86_expand_builtin): Adjust.
	* config/sparc/sparc.c (sparc_handle_vis_mul8x16): Adjust interface
	and implementation.
	(sparc_fold_builtin): Adjust.

2012-03-16  Tristan Gingold  <gingold@adacore.com>

	* config.gcc (*-*-*vms*): Define use_gcc_stdint and tm_file.
	* config/vms/vms-stdint.h: New file.

2012-03-16  Tristan Gingold  <gingold@adacore.com>

	* config.host (alpha64-dec-*vms*, alpha*-dec-*vms*)
	(ia64-hp-*vms*): Replaced by ...
	(*-*-*vms*): ... This new entry.

2012-03-15  Jakub Jelinek  <jakub@redhat.com>

	PR target/52568
	* config/i386/i386.c (expand_vec_perm_vperm2f128_vblend): New function.
	(ix86_expand_vec_perm_const_1): Use it.

	PR target/52568
	* config/i386/sse.md (UNSPEC_VPERMDF): Remove.
	(avx2_permv4df): Remove.
	(avx2_permv4di): Macroize into...
	(avx2_perm<mode>): ... this using VI8F_256 iterator.
	(avx2_permv4di_1): Macroize into...
	(avx2_perm<mode>_1): ... this using VI8F_256 iterator.

2012-03-15  Ulrich Weigand  <ulrich.weigand@linaro.org>

	* combine.c (apply_distributive_law): Do not distribute SUBREG.

2012-03-15  Ira Rosen  <irar@il.ibm.com>
	    Ulrich Weigand  <ulrich.weigand@linaro.org>

	* tree-vect-patterns.c (widened_name_p): Rename to ...
	(type_conversion_p): ... this.  Add new argument to determine
	if it's a promotion or demotion operation.  Check for
	CONVERT_EXPR_CODE_P instead of NOP_EXPR.
	(vect_recog_dot_prod_pattern): Call type_conversion_p instead
	widened_name_p.
	(vect_recog_widen_mult_pattern, vect_recog_widen_sum_pattern,
	vect_operation_fits_smaller_type, vect_recog_widen_shift_pattern):
	Likewise.
	(vect_recog_mixed_size_cond_pattern): Likewise and allow
	non-constant then and else clauses.

2012-03-15  Ira Rosen  <irar@il.ibm.com>
	    Ulrich Weigand  <ulrich.weigand@linaro.org>

	* tree-vectorizer.h (vect_pattern_recog): Add new argument.
	* tree-vect-loop.c (vect_analyze_loop_2): Update call to
	vect_pattern_recog.
	* tree-vect-patterns.c (widened_name_p): Pass basic block
	info to vect_is_simple_use.
	(vect_recog_dot_prod_pattern): Fail for basic blocks.
	(vect_recog_widen_sum_pattern): Likewise.
	(vect_handle_widen_op_by_const): Support basic blocks.
	(vect_operation_fits_smaller_type,
	vect_recog_over_widening_pattern): Likewise.
	(vect_recog_vector_vector_shift_pattern): Support basic blocks.
	Update call to vect_is_simple_use.
	(vect_recog_mixed_size_cond_pattern): Support basic blocks.
	Add printing.
	(check_bool_pattern): Add an argument, update call to
	vect_is_simple_use and the recursive calls.
	(vect_recog_bool_pattern): Update relevant function calls.
	Add printing.
	(vect_mark_pattern_stmts): Update calls to new_stmt_vec_info.
	(vect_pattern_recog_1): Check for reduction only in loops.
	(vect_pattern_recog): Add new argument.  Support basic blocks.
	* tree-vect-stmts.c (vectorizable_conversion): Pass basic block
	info to vect_is_simple_use_1.
	* tree-vect-slp.c (vect_get_and_check_slp_defs): Support basic blocks.
	(vect_slp_analyze_bb_1): Call vect_pattern_recog.

2012-03-15  Jakub Jelinek  <jakub@redhat.com>
	    Andrew Pinski  <apinski@cavium.com>

	PR middle-end/52592
	* builtins.c (expand_builtin_int_roundingfn_2): If expanding
	BUILT_IN_IR{INT,OUND}* using optab fails, emit lr{int,ound}*
	calls instead of __builtin_ir{int,ound}*.

2012-03-15  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>

	* doc/sourcebuild.texi (cleanup-modules, keep-modules): Update
	documentation.

2012-03-15  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>

	* config.gcc (target_type_format_char): New. Document it. Set it for
	arm*-*-* .
	* configure.ac (gnu_unique_option): Use target_type_format_char
	in test.  Comment rationale.
	* configure: Regenerate .

2012-03-15  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/52267
	* tree-vrp.c (masked_increment): New function.
	(register_edge_assert_for_2): Derive ASSERT_EXPRs
	from (X & CST1) cmp CST2 tests.

2012-03-15  Richard Guenther  <rguenther@suse.de>

	PR middle-end/52580
	* tree-data-ref.c (subscript_dependence_tester_1): Check
	all dimensions for non-conflicting access functions.

2012-03-15  Manuel López-Ibáñez  <manu@gcc.gnu.org>

	PR c++/44783
	* doc/invoke.texi [C++ Language Options]: Document
	-ftemplate-backtrace-limit.

2012-03-15  Tristan Gingold  <gingold@adacore.com>

	* c-parser.c (c_parser_parameter_declaration): Handle #pragma
	before a parameter.

2012-03-15  Tristan Gingold  <gingold@adacore.com>

	* dwarf2out.c (gen_subprogram_die): Require dwarf unwinding to
	use DW_OP_call_frame_cfa.

2012-03-14  H.J. Lu  <hongjiu.lu@intel.com>

	PR target/50797
	* config/i386/i386-opts.h (pmode): New.

	* config/i386/i386.c (ix86_option_override_internal): Properly
	check and set ix86_pmode.

	* config/i386/i386.h (Pmode): Check ix86_pmode instead of TARGET_64BIT.

	* config/i386/i386.opt (maddress-mode=): New.

	* doc/invoke.texi: Document -maddress-mode=short|long for x86.

2012-03-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>

	* dwarf2cfi.c (def_cfa_0): Remove MIPS_DEBUGGING_INFO handling.
	(dwarf2out_do_cfi_asm): Likewise.
	* dwarf2out.c (output_call_frame_info): Remove MIPS_DEBUGGING_INFO
	handling.
	(add_data_member_location_attribute): Likewise.
	(gen_array_type_die): Likewise.
	(gen_subprogram_die): Likewise.
	(gen_producer_string): Likewise.
	* sdbout.c (sdbout_begin_prologue): Declare unconditionally.
	Remove MIPS_DEBUGGING_INFO handling.
	(sdb_debug_hooks): Likewise.
	(sdbout_begin_block): Likewise.
	(sdbout_end_block): Likewise.
	(sdbout_begin_prologue): Likewise.
	(sdbout_start_source_file): Likewise.
	(sdbout_end_source_file): Likewise.
	(sdbout_init): Likewise.
	* system.h (MIPS_DEBUGGING_INFO): Poison.

2012-03-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>

	* config/alpha/alpha.c [HAVE_STAMP_H]: Remove.
	(alpha_file_start) [MS_STAMP]: Remove.

	* config/alpha/elf.h (TARGET_GAS): Remove.
	* config/alpha/freebsd.h (TARGET_DEFAULT): Remove.
	* config/alpha/linux.h (TARGET_DEFAULT): Remove.
	* config/alpha/netbsd.h (TARGET_DEFAULT): Remove.
	* config/alpha/vms.h (TARGET_DEFAULT): Remove.
	* config.gcc (alpha*-*-linux*): Remove target_cpu_default.
	(alpha*-*-freebsd*): Likewise.
	(alpha*-*-netbsd*): Likewise.
	(alpha*-*-openbsd*): Likewise.
	(alpha*-*-*): Remove target_cpu_default2.
	* config/alpha/alpha.c (alpha_output_filename): Remove !TARGET_GAS
	handling.
	* config/alpha/alpha.h (TARGET_AS_CAN_SUBTRACT_LABELS): Remove.
	(TARGET_AS_SLASH_BEFORE_SUFFIX): Remove.
	* config/alpha/alpha.c (print_operand): Always assume
	TARGET_AS_SLASH_BEFORE_SUFFIX.
	* config/alpha/alpha.md ("*builtin_setjmp_receiver_er_sl_1"):
	Remove TARGET_AS_CAN_SUBTRACT_LABELS.
	("*builtin_setjmp_receiver_er_1"): Remove.
	* config/alpha/alpha.opt (malpha-as): Remove.
	(mgas): Ignore.
	* doc/invoke.texi (Option Summary, DEC Alpha Options): Remove
	-malpha-as, -mgas.
	Remove DEC Unix reference.

	* config/alpha/alpha.h (OBJECT_FORMAT_COFF): Remove.
	(EXTENDED_COFF): Remove.
	* config/alpha/elf.h (OBJECT_FORMAT_COFF): Don't undef.
	(EXTENDED_COFF): Don't undef.
	* config/alpha/alpha.c (alpha_file_start): Always assume
	OBJECT_FORMAT_ELF.
	Don't set targetm.asm_file_start_file_directive.
	[!OBJECT_FORMAT_ELF]: Remove.
	(TARGET_ASM_FILE_START_FILE_DIRECTIVE): Remove.

	* config/alpha/alpha.h (SDB_DEBUGGING_INFO): Remove.
	(DBX_DEBUGGING_INFO): Remove.
	(MIPS_DEBUGGING_INFO): Remove.
	(PREFERRED_DEBUGGING_TYPE): Remove.
	(DBX_OUTPUT_SOURCE_LINE): Remove.
	(SDB_OUTPUT_SOURCE_LINE): Remove.
	(DBX_CONTIN_LENGTH): Remove.
	(NO_DBX_FUNCTION_END): Remove.
	(ASM_STABS_OP): Remove.
	(ASM_STABN_OP): Remove.
	(ASM_STABD_OP): Remove.
	(SDB_ALLOW_FORWARD_REFERENCES): Remove.
	(SDB_ALLOW_UNKNOWN_REFERENCES): Remove.
	(PUT_SDB_DEF): Remove.
	(PUT_SDB_PLAIN_DEF): Remove.
	(PUT_SDB_TYPE): Remove.
	(sdb_label_count): Remove.
	(PUT_SDB_BLOCK_START): Remove.
	(PUT_SDB_BLOCK_END): Remove.
	(PUT_SDB_FUNCTION_START): Remove.
	(PUT_SDB_FUNCTION_END): Remove.
	(PUT_SDB_EPILOGUE_END): Remove.
	* config/alpha/elf.h (SDB_DEBUGGING_INFO): Don't undef.
	(MIPS_DEBUGGING_INFO): Don't undef.
	(DBX_DEBUGGING_INFO): Don't undef.
	* config/alpha/vms.h (SDB_DEBUGGING_INFO): Don't undef.
	(MIPS_DEBUGGING_INFO): Don't undef.
	(DBX_DEBUGGING_INFO): Don't undef.
	* config/alpha/freebsd.h (DBX_CONTIN_CHAR): Remove.
	* config/alpha/alpha.c (alpha_option_override): Remove SDB_DEBUG
	handling.
	(alpha_start_function): Likewise.
	(sdb_label_count): Remove.
	(alpha_output_filename): Remove DBX_DEBUG handling.
	(alpha_file_start): Likewise.

2012-03-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>

	* config.gcc (enable_obsolete): Remove *-*-solaris2.8*.
	(*-*-solaris2.[0-8], *-*-solaris2.[0-8].*): Mark unsupported.
	(i[34567]86-*-solaris2*, x86_64-*-solaris2.1[0-9]*): Remove
	Solaris 8 support.
	* configure.ac (gcc_cv_ld_hidden): Remove *-*-solaris2.8*.
	(ld_tls_support): Remove Solaris 8 references.
	(lwp_dir, lwp_spec): Remove support for alternate thread library.
	* acinclude.m4 (gcc_cv_initfini_array): Remove *-*-solaris2.* tests.
	* configure: Regenerate.
	* config.in: Regenerate.

	* config/sol2.h (LINK_SPEC): Remove LIB_THREAD_LDFLAGS_SPEC.
	* config/i386/sol2.h: Remove Solaris 8 references.

	* doc/install.texi (Specific, i?86-*-solaris2.[89]): Rename to ...
	(i?86-*-solaris2.9): ... this.
	Remove Solaris 8 references.
	(Specific, *-*-solaris2*): Document Solaris 8 removal.
	Remove Solaris 8 references.

2012-03-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>

	* config.gcc (enable_obsolete): Remove mips-sgi-irix6.5.
	(mips-sgi-irix6.5*): Remove.
	* config.host (mips-sgi-irix*): Remove.
	* configure.ac (enable_fixed_point): Remove mips*-sgi-irix*.
	(set_have_as_tls): Remove *-*-irix6*.
	(gcc_cv_ld_static_dynamic): Remove mips-sgi-irix6*.
	* configure: Regenerate.

	* config/mips/iris6.h: Remove.
	* config/mips/iris6.opt: Remove.
	* config/mips/t-irix6: Remove.

	* config/mips/mips.h (TARGET_GPWORD): Remove IRIX 6 N64 handling.
	(TARGET_IRIX6): Remove.
	(TARGET_CPU_CPP_BUILTINS): Remove IRIX 6 handling.
	Don't define LANGUAGE_C, _LANGUAGE_C for Objective-C.
	* config/mips/mips.c (mips_build_builtin_va_list): Remove IRIX 6
	handling.
	(mips_file_start): Likewise.
	* config/mips/mips-protos.h (irix_asm_output_align): Remove.

	* config/mips/driver-native.c [__sgi__]: Remove.
	(host_detect_local_cpu) [__sgi__]: Remove.

	* config/mips/gnu-user.h: Remove iris5.h reference.

	* config/mips/mips-modes.def: Remove IRIX 6 reference.
	* config/mips/gnu-user64.h (MIPS_TFMODE_FORMAT): Remove.
	* config/mips/mips.c (mips_option_override) [MIPS_TFMODE_FORMAT]:
	Remove.

	* gcc.c (main): Move asm_debug initialization ...
	(asm_debug): ... here.

	* ginclude/stddef.h (__STDDEF_H__): Don't define.

	* defaults.h (LINK_ELIMINATE_DUPLICATE_LDIRECTORIES): Remove.
	* system.h (LINK_ELIMINATE_DUPLICATE_LDIRECTORIES): Poison.
	* collect2.c [LINK_ELIMINATE_DUPLICATE_LDIRECTORIES]: Remove.
	(main) [LINK_ELIMINATE_DUPLICATE_LDIRECTORIES]: Remove.
	[LINK_ELIMINATE_DUPLICATE_LDIRECTORIES] (is_in_args): Remove.
	* doc/tm.texi.in (Driver, LINK_ELIMINATE_DUPLICATE_LDIRECTORIES):
	Remove.
	* doc/tm.texi: Regenerate.

	* doc/invoke.texi (Debugging Options, -gdwarf-<version>): Remove
	IRIX 6 reference.
	(MIPS Options, -march): Remove IRIX reference.
	* doc/install.texi (Binaries, SGI IRIX): Remove.
	(Specific, mips-sgi-irix6): Document IRIX 6.5 removal, remove rest
	of section.
	* doc/trouble.texi (Interoperation): Remove -lgl_s handling.

2012-03-14  Martin Jambor  <mjambor@suse.cz>

	* expr.c (expand_assignment): Use expand_expr with EXPAND_WRITE
	when expanding MEM_REFs, MEM_TARGET_REFs and handled_component bases.
	(expand_expr_real_1): Do not handle misalignment if modifier is
	EXPAND_WRITE.

2012-03-14  Richard Guenther  <rguenther@suse.de>

	PR middle-end/52584
	* tree-vect-generic.c (type_for_widest_vector_mode): Take
	element type instead of mode, use build_vector_type_for_mode
	instead of the langhook, build a vector of proper signedness.
	(expand_vector_operations_1): Adjust.

2012-03-14  Richard Guenther  <rguenther@suse.de>

	PR middle-end/52582
	* gimple-fold.c (canonicalize_constructor_val): Make sure we have
	a cgraph node for a FUNCTION_DECL that comes from a constructor.
	(gimple_get_virt_method_for_binfo): Likewise.

2012-03-14  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/52571
	* tree-vect-data-refs.c (vect_compute_data_ref_alignment): Move
	flag_section_anchors check ...
	(vect_can_force_dr_alignment_p): ... here.  Do not re-align
	DECL_COMMON variables.

2012-03-14  Richard Guenther  <rguenther@suse.de>

	* tree.h (DECL_BIT_FIELD_REPRESENTATIVE): New define.
	* stor-layout.c (start_bitfield_representative): New function.
	(finish_bitfield_representative): Likewise.
	(finish_bitfield_layout): Likewise.
	(finish_record_layout): Call finish_bitfield_layout.
	* tree.c (free_lang_data_in_decl): Only free DECL_QUALIFIER
	for QUAL_UNION_TYPE fields.
	* tree-streamer-in.c (lto_input_ts_field_decl_tree_pointers):
	Stream DECL_BIT_FIELD_REPRESENTATIVE.
	* tree-streamer-out.c (write_ts_field_decl_tree_pointers): Likewise.

	PR middle-end/52080
	PR middle-end/52097
	PR middle-end/48124
	* expr.c (get_bit_range): Unconditionally extract bitrange
	from DECL_BIT_FIELD_REPRESENTATIVE.
	(expand_assignment): Adjust call to get_bit_range.

2012-03-14  Richard Guenther  <rguenther@suse.de>

	PR middle-end/52578
	* fold-const.c (fold_unary_loc): Fold (T1)(T2)x to (T1)x if
	the outermost conversion is a sign-change only.
	(fold_binary_loc): Disregard widening and sign-changing
	conversions when we determine if two variables are equal
	for reassociation.
	* tree-ssa-forwprop.c (combine_conversions): Fold (T1)(T2)x to
	(T1)x if the outermost conversion is a sign-change only.

2012-03-14  Uros Bizjak  <ubizjak@gmail.com>

	Revert:
	2012-03-14  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/predicates.md (constant_call_address_operand): Declare
	as special predicate.  Update all uses.

2012-03-13  Jakub Jelinek  <jakub@redhat.com>

	PR c/52577
	* c-parser.c (c_parser_postfix_expression)
	<case RID_BUILTIN_SHUFFLE>: Call mark_exp_read on argument values.

	* config/i386/smmintrin.h: Avoid /* within a comment.
	* config/i386/nmmintrin.h: Likewise.

2012-03-13  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.md (xbegin): Remove constraint from expander.

2012-03-13  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/predicates.md (constant_call_address_operand): Declare
	as special predicate.  Update all uses.
	* config/i386/i386.md: Remove mode from constant_call_address_operand
	predicates.
	* config/i386/i386.c (ix86_output_call_insn): Call
	constant_call_address_operand with VOIDmode.

2012-03-13  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.c (ix86_decompose_address): Handle subregs of
	AND zero extended address correctly.

2012-03-13  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/predicates.md (tls_symbolic_operand): Declare as
	special predicate.
	(tls_modbase_operand): Ditto.
	* config/i386/i386.md: Remove mode from tls_symbolic_operand and
	tls_modbase_operand predicates.

2012-03-13  Martin Jambor  <mjambor@suse.cz>

	* expr.c (expand_assignment): Handle misaligned scalar writes to
	memory through top-level MEM_REFs by calling store_bit_field.

2012-03-13  Richard Guenther  <rguenther@suse.de>

	PR middle-end/52134
	* fold-const.c (fold_binary_loc): Fold (X * Y) & -(1 << CST) to X * Y
	if Y is a constant multiple of 1 << CST.

2012-03-13  Georg-Johann Lay  <avr@gjlay.de>

	PR target/52488
	* config/avr/avr.c (avr_prologue_setup_frame): Cut down stack
	offset (size) to a value the insns can deal with.
	(expand_epilogue): Ditto.

2012-03-13  Matthew Gretton-Dann  <matthew.gretton-dann@arm.com>

	* config/arm/neon.ml (ops): Fixup expected instructions for
	unsigned vector compares.

2012-03-13  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.c (ix86_decompose_address): Prevent %fs:(%reg)
	addresses only when %reg is not in word mode.

2012-03-13  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>

	* config/microblaze/microblaze.md: Fix typo.
	* tree-if-conv.c: Likewise.
	* tree-vect-patterns.c: Likewise.

2012-03-13  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>

	* config.gcc (extra_passes): Remove.
	* configure.ac (extra_passes): Don't substitute.
	* configure: Regenerate.
	* Makefile.in (EXTRA_PASSES): Remove.
	(GCC_PASSES): Remove $(EXTRA_PASSES).
	(MOSTLYCLEANFILES): Likewise.
	(native): Likewise.
	(install-common): Likewise.

2012-03-13  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.h (TARGET_TLS_INDIRECT_SEG_REFS): New.
	* config/i386/i386.c (ix86_decompose_address): Use
	TARGET_TLS_INDIRECT_SEG_REFS to prevent %fs:(%reg) addresses.
	(legitimize_tls_address): Use TARGET_TLS_INDIRECT_SEG_REFS to load
	thread pointer to a register.

2012-03-12  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.md (*tls_global_dynamic_64_<mode>): Remove :P
	on tls_symbolic_operand.
	(tls_global_dynamic_64_<mode>): Likewise.

2012-03-12  Georg-Johann Lay  <avr@gjlay.de>

	PR other/52545
	* output.h (SECTION_EXCLUDE, SECTION_MACH_DEP): Don't use
	SECTION_MACH_DEP reserved bits for SECTION_EXCLUDE.

2012-03-12  Georg-Johann Lay  <avr@gjlay.de>

	PR target/52499
	* config/avr/avr.c (avr_mode_code_base_reg_class): Change return
	type from reg_class_t to enum reg_class.
	* config/avr/avr-protos.h (avr_mode_code_base_reg_class): Ditto.

2012-03-12  Andrew Pinski  <apinski@cavium.com>

	* tree-ssa-phiopt.c (single_non_singleton_phi_for_edges): New function.
	(tree_ssa_phiopt_worker): Use single_non_singleton_phi_for_edges.
	(value_replacement): Likewise.
	(empty_block_p): Check also if the PHIs for the block are empty.

2012-03-12  Georg-Johann Lay  <avr@gjlay.de>

	PR target/52148
	* config/avr/avr.c (avr_out_movmem): Fix typo in output template
	for the case ADDR_SPACE_FLASH and AVR_HAVE_LPMX introduced in
	r184615 from 2012-02-28.

2012-03-12  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.c (ix86_gen_tls_global_dynamic_64): New.
	(ix86_gen_tls_local_dynamic_base_64): Likewise.
	(ix86_option_override_internal): Set ix86_gen_tls_global_dynamic_64
	and ix86_gen_tls_local_dynamic_base_64.
	(legitimize_tls_address): Use ix86_gen_tls_global_dynamic_64 and
	ix86_gen_tls_local_dynamic_base_64.

	* config/i386/i386.md (*tls_global_dynamic_64): Renamed to ...
	(*tls_global_dynamic_64_<mode>): This.
	(tls_global_dynamic_64): Renamed to ...
	(tls_global_dynamic_64_<mode>): This.
	(*tls_local_dynamic_base_64): Renamed to ...
	(*tls_local_dynamic_base_64_<mode>): This.
	(tls_local_dynamic_base_64): Renamed to ...
	(tls_local_dynamic_base_64_<mode>): This.

2012-03-12  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.c (ix86_option_override_internal): Properly
	set ix86_gen_leave and ix86_gen_monitor.  Check Pmode == DImode,
	instead of TARGET_64BIT, to set ix86_gen_add3, ix86_gen_sub3,
	ix86_gen_one_cmpl2, ix86_gen_andsp, ix86_gen_allocate_stack_worker,
	ix86_gen_adjust_stack_and_probe and ix86_gen_probe_stack_range.

	* config/i386/sse.md (sse3_monitor64): Renamed to ...
	(sse3_monitor64_<mode>): This.

2012-03-12  Tristan Gingold  <gingold@adacore.com>

	* config/ia64/ia64.c (ia64_function_arg_1): Move code around.
	(ia64_function_arg_advance): Ditto.

2012-03-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>

	* config.gcc (mips*-*-openbsd*): Remove.
	* config/mips/openbsd.h: Remove.
	* config/mips/sdb.h: Remove.

	* config/mips/mips.h (SDB_OUTPUT_SOURCE_LINE): Remove.
	* config/mips/mips.c (sdb_label_count): Remove.
	(mips_debugger_offset): Remove #if 0 code.
	(mips_output_function_prologue) [SDB_DEBUGGING_INFO]: Remove.
	* config/mips/sde.h (SDB_DEBUGGING_INFO): Don't undef.

2012-03-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>

	* doc/install.texi (Specific, i?86-*-solaris2.[89]): Update
	binutils reference.
	(Specific, i?86-*-solaris2.10): Remove GCC 4.0 reference.
	Update binutils references.
	(Specific, *-*-solaris2*): Mention bundled GCC in Solaris 10 and 11.
	Update binutils reference.
	Update Sun as/GNU ld caveat.
	Document binutils largefile requirement for LTO plugin.
	Remove reference to alternate libpthread.

2012-03-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>

	* config.gcc (alpha*-dec-osf5.1*): Remove.
	* config.host (alpha*-dec-osf*): Remove.
	* configure.ac (*-*-osf*): Remove.
	(alpha*-dec-osf*): Remove.
	* configure: Regenerate.

	* config/alpha/host-osf.c, config/alpha/osf5.h, config/alpha/osf5.opt,
	config/alpha/va_list.h, config/alpha/x-osf: Remove.

	* config/alpha/alpha.h (TARGET_LD_BUGGY_LDGP): Remove.
	* config/alpha/alpha.c (struct machine_function): Update comment.
	(alpha_start_function): Remove Tru64 UNIX as handling for
	max_frame_size.
	* config/alpha/alpha.md ("exception_receiver"): Remove
	TARGET_LD_BUGGY_LDGP.
	("*exception_receiver_2"): Likewise.
	* except.c (finish_eh_generation): Remove Tru64 reference.
	* ginclude/stdarg.h [_HIDDEN_VA_LIST]: Don't undef _VA_LIST.
	* system.h (TARGET_HANDLE_PRAGMA_EXTERN_PREFIX): Poison.
	* target.def (handle_pragma_extern_prefix): Remove.

	* Makefile.in (mips-tfile.o-warn): Remove.
	(ALL_HOST_BACKEND_OBJS): Remove mips-tfile.o, mips-tdump.o.
	(mips-tfile, mips-tfile.o, mips-tdump, mips-tdump.o): Remove.
	* mips-tdump.c, mips-tfile.c: Remove.

	* doc/extend.texi (Symbol-Renaming Pragmas): Remove #pragma
	extern_prefix.
	* doc/install.texi (Binaries): Remove Tru64 UNIX reference.
	(Specific, alpha*-dec-osf5.1): Note removal.
	* doc/tm.texi.in (Misc, TARGET_HANDLE_PRAGMA_EXTERN_PREFIX):
	Remove.
	* doc/tm.texi: Regenerate.
	* doc/trouble.texi (Cross-Compiler Problems): Remove.

2012-03-12  Richard Guenther  <rguenther@suse.de>

	* config/arm/arm.c (neon_dereference_pointer): Do not call
	covert during RTL expansion.

2012-03-12  Tristan Gingold  <gingold@adacore.com>

	* doc/invoke.texi (VMS Options): Merge Alpha/VMS and IA-64/VMS
	Options.  Mention -mpointer-size.

2012-03-12  Richard Guenther  <rguenther@suse.de>

	* config/alpha/alpha.c (alpha_gimplify_va_arg): Use
	build_nonstandard_integer_type.

2012-03-12  Richard Guenther  <rguenther@suse.de>

	* tree.c (signed_or_unsigned_type_for): Use
	build_nonstandard_integer_type.
	(signed_type_for): Adjust documentation.
	(unsigned_type_for): Likewise.
	* tree-pretty-print.c (dump_generic_node): Use standard names
	for non-standard integer types if available.

2012-03-12  Tristan Gingold  <gingold@adacore.com>

	* config/vms/vms.opt: Add vms-opts.h header.
	(mmalloc64): Use flag_vms_malloc64 flag instead of MALLOC64
	target mask.
	(-mvms-return-codes): Document.
	(-mpointer-size): New option.
	(vms_pointer_size): Add enumeration.
	* config/vms/vms-opts.h: New file.
	* config/vms/vms.h (TARGET_OS_CPP_BUILTINS): Define
	__INITIAL_POINTER_SIZE.
	(POINTER_SIZE, SIZE_TYPE, PTRDIFF_TYPE): Adjust definition.
	(C_COMMON_OVERRIDE_OPTIONS): Define.
	(DWARF2_ADDR_SIZE): Define.
	* config/vms/vms.c (vms_patch_builtins): Adjust condition.
	* config/vms/vms-protos.h (vms_c_common_override_options):
	New prototype.
	* config/vms/vms-c.c (vms_pragma_pointer_size): Ignore pragma
	if -mno-pointer-size.
	(vms_c_common_override_options): New function.
	* config/ia64/vms.h (TARGET_DEFAULT): Remove MASK_MALLOC64.
	* config/alpha/vms.h (TARGET_DEFAULT): Remove MASK_MALLOC64.
	(MALLOC_ABI_ALIGNMENT): Use flag_vms_malloc64
	and flag_vms_pointer_size.
	(MASK_RETURN_ADDR): Set according to flag_vms_pointer_size.
	* config.gcc (*-*-*vms*): Define xm_file.
	(alpha*-dec-*vms*): Do not define xm_file.
	(alpha64-dec-*vms*): Remove.
	(ia64-hp-*vms*): Do not define xm_file.  Simplify tm_file
	and tmake_file.

2012-03-12  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/51721
	* tree-vrp.c (register_edge_assert_for_2): Add asserts for unsvar
	if (int) unsvar cmp CST.

2012-03-12  Richard Guenther  <rguenther@suse.de>

	* tree-sra.c (create_access_replacement): Only rename the replacement
	if we can rewrite it into SSA form.  Properly mark register typed
	replacements that we cannot rewrite with TREE_ADDRESSABLE.
	* tree-cfg.c (verify_expr): Fix BIT_FIELD_REF verification
	for aggregate or BLKmode results.

2012-03-12  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/52533
	* tree-vrp.c (register_edge_assert_for_2): Use double_int
	type for mask, only handle shifts by non-zero in-range
	shift count, for LE_EXPR and GT_EXPR if new_val is
	maximum, don't add the assertion.

2012-02-12  Kirill Yukhin  <kirill.yukhin@intel.com>

	* doc/invoke.texi: Document -mrtm option.
	* common/config/i386/i386-common.c (OPTION_MASK_ISA_RTM_SET): New.
	(OPTION_MASK_ISA_RTM_UNSET): Ditto.
	(ix86_handle_option): Handle OPT_mrtm.
	* config.gcc (i[34567]86-*-*): Add rtmintrin.h and
	xtestintrin.h.
	(x86_64-*-*): Ditto.
	* i386-builtin-types.def (INT_FTYPE_VOID): New.
	* config/i386/i386-c.c (ix86_target_macros_internal): Define
	__RTM__ if needed.
	(ix86_target_string): Define -mrtm option.
	(PTA_RTM): New.
	(ix86_option_override_internal): Extend "corei7-avx" with RTM option.
	Handle new option.
	(ix86_valid_target_attribute_inner_p): Add OPT_mrtm.
	(ix86_builtins): Add IX86_BUILTIN_XBEGIN, IX86_BUILTIN_XEND,
	IX86_BUILTIN_XTEST.
	(bdesc_special_args): Ditto.
	(ix86_init_mmx_sse_builtins): Add IX86_BUILTIN_XABORT.
	(ix86_expand_special_args_builtin): Handle new built-in type.
	(ix86_expand_builtin): Handle XABORT instruction.
	* config/i386/i386.h (TARGET_RTM): New.
	* config/i386/i386.md (UNSPECV_XBEGIN): New.
	(UNSPECV_XEND): Ditto.
	(UNSPECV_XABORT): Ditto.
	(UNSPECV_XTEST): Ditto.
	(xbegin): Ditto.
	(xbegin_1): Ditto.
	(xend): Ditto.
	(xabort): Ditto
	(xtest): Ditto.
	(xtest_1): Ditto.
	* config/i386/i386.opt (mrtm): New.
	* config/i386/immintrin.h: Include rtmintrin.h and xtestintrin.h.
	* config/i386/rtmintrin.h: New header.
	* config/i386/xtestintrin.h: Ditto.

2012-03-12  Tristan Gingold  <gingold@adacore.com>

	* ginclude/stddef.h: Adjust previous patch.
	Use __VMS__ instead of VMS.

2012-03-12  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.md (setcc + movzbl to xor + setcc peephole2):
	Also convert sequences with CC setting arithmetic instruction.

2012-03-11  Sandra Loosemore  <sandra@codesourcery.com>

	* doc/invoke.texi (Option Summary): Move -no-integrated-cpp
	from C Language Options to Preprocessor Options.
	(C Dialect Options): Move -no-integrated-cpp documentation
	from here...
	(Preprocessor Options): ...to here.  Rewrite the description
	so it makes more sense, and remove discussion of merging front ends.

2012-03-11  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.c (ix86_expand_movmem): Use word_mode for size
	needed for loop.
	(ix86_expand_setmem): Likewise.

2012-03-11  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.c (ix86_zero_extend_to_Pmode): Rewrite using
	convert_to_mode.

2012-03-11  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.c (ix86_trampoline_init): Use movl for 64bit if
	ptr_mode == SImode.  Replace DImode with Pmode or ptr_mode.

2012-03-11  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.c (x86_this_parameter): Replace DImode with Pmode.

2012-03-11  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.md (lwp_slwpcb): Check Pmode instead of
	TARGET_64BIT.

2012-03-11  H.J. Lu  <hongjiu.lu@intel.com>
	    Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/predicates.md (call_insn_operand): Allow
	constant_call_address_operand in Pmode only.
	(sibcall_insn_operand): Ditto.
	* config/i386/i386.md (*call): Use W mode iterator instead of P mode.
	(*call_vzeroupper): Ditto.
	(*sibcall): Ditto.
	(*sibcall_vzeroupper): Ditto.
	(*call_value): Ditto.
	(*call_value_vzeroupper): Ditto.
	(*sibcall_value): Ditto.
	(*sibcall_value_vzeroupper): Ditto.
	(*indirect_jump): Ditto.
	(*tablejump_1): Ditto.
	(indirect_jump): Convert memory address to word mode for TARGET_X32.
	(tablejump): Ditto.
	* config/i386/i386.c (ix86_expand_call): Convert indirect operands
	to word mode.

2012-03-11  Oleg Endo  <olegendo@gcc.gnu.org>

	PR target/51244
	* config/sh/sh.md (movnegt): Expand into respective insns immediately.
	Use movrt_negc instead of negc pattern for non-SH2A.
	(*movnegt): Remove.
	(*movrt_negc, *negnegt, *movtt, *movt_qi): New insns and splits.

2012-03-10  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.c (ix86_decompose_address): Disallow fs:(reg)
	if Pmode != word_mode.
	(legitimize_tls_address): Call gen_tls_initial_exec_x32 if
	Pmode == SImode for TARGET_X32.

	* config/i386/i386.md (UNSPEC_TLS_IE_X32): New.
	(tls_initial_exec_x32): Likewise.

2012-03-10  Chung-Lin Tang  <cltang@codesourcery.com>

	PR rtl-optimization/52528
	* combine.c (can_combine_p): Add setting of subst_low_luid
	before call to expand_field_assignment().

2012-03-09  Sandra Loosemore  <sandra@codesourcery.com>

	* doc/invoke.texi: Use correct names/markup for "GCC", "GDB", "ld",
	and related program names.

2012-03-09  Sandra Loosemore  <sandra@codesourcery.com>

	* doc/invoke.texi: Use correct names for "DWARF", "stabs", and "ELF".

2012-03-09  Uros Bizjak  <ubizjak@gmail.com>

	PR target/52530
	* config/i386/i386.c (ix86_print_operand): Handle 'E' operand modifier.
	(ix86_print_operand_address): Handle UNSPEC_LEA_ADDR. Do not fallback
	to set code to 'q'.
	* config/i386/i386.md (UNSPEC_LEA_ADDR): New unspec.
	(*movdi_internal_rex64): Use %E operand modifier for lea.
	(*movsi_internal): Ditto.
	(*lea_1): Ditto.
	(*lea<mode>_2): Ditto.
	(*lea_{3,4,5,6}_zext): Ditto.
	(*tls_global_dynamic_32_gnu): Ditto.
	(*tls_global_dynamic_64): Ditto.
	(*tls_dynamic_gnu2_lea_32): Ditto.
	(*tls_dynamic_gnu2_lea_64): Ditto.
	(pro_epilogue_adjust_stack_<mode>_add): Ditto.

2012-03-09  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/linux64.h (OPTION_TARGET_CPU_DEFAULT): Do not
	redefine to be NULL if the current bit-size is different from the
	configured bit-size.

	* config/rs6000/rs6000.c (rs6000_option_override_internal): If the
	cpu is defaulted, use PROCESSOR_DEFAULT and PROCESSOR_DEFAULT64 to
	set the default tuning.  Add asserts to make sure the cpu and tune
	indexes are defined.  Fix tests for cpu/tune index to use >= 0 to
	test whether the index is set, instead of > 0.
	(rs6000_file_start): Do not reset the default cpu if the current
	bit-size is different from the configured bit-size.

2012-03-09  Tristan Gingold  <gingold@adacore.com>

	* config/vms/vms-crtlmap.map: Add comments.
	Add entries needed to build Ada RTS.

2012-03-09  Tristan Gingold  <gingold@adacore.com>

	* ginclude/stddef.h: Do not define __size_t on VMS.

2012-03-09  Tristan Gingold  <gingold@adacore.com>

	* c-tree.h (c_default_pointer_mode): New variable.
	* c-decl.c (c_default_pointer_mode): New variable.
	(c_build_pointer_type): New function.
	(grokdeclarator): Call c_build_pointer_type instead
	of build_pointer_type.

	* config/vms/vms-c.c: Include c-tree.h
	(saved_pointer_mode): New variable.
	(handle_pragma_pointer_size): New function.
	(vms_pragma_pointer_size, vms_pragma_required_pointer_size): Likewise.
	(vms_c_register_pragma): Register __pointer_size and
	__required_pointer_size pragmas.

2012-03-09  Tristan Gingold  <gingold@adacore.com>

	* config/vms/vms-c.c (vms_construct_include_filename): New function.
	(vms_c_register_includes): Reference it.

2012-03-09  Andrew Pinski  <apinski@cavium.com>

	PR middle-end/51988
	* tree-ssa-phiopt.c: Include tree-pretty-print.h for
	print_generic_expr.
	(tree_ssa_phiopt_worker): Go through all the PHIs for
	value_replacement instead of just the singleton one.
	(value_replacement): Change return type to int.  Return 0 instead of
	false.
	Allow the middle basic block to contain more than just the defining
	statement.
	Handle non empty middle basic blocks.
	* Makefile.in (tree-ssa-phiopt.o): Add tree-pretty-print.h.

2012-03-09  Jiangning Liu  <jiangning.liu@arm.com>

	* tree-scalar-evolution (interpret_rhs_expr): generate chrec for
	array reference and component reference.
	(analyze_scalar_evolution_for_address_of): New.

2012-03-08  Jie Zhang  <jzhang918@gmail.com>

	PR target/49862
	* config/bfin/bfin.c (hwloop_optimize): Fix unused variable warnings.
	(hwloop_pattern_reg): Fix set but not used warning.
	(bfin_reorg_loops): Remove unused parameter.
	(bfin_reorg): Update use of bfin_reorg_loops.

2012-03-08  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.c (setup_incoming_varargs_64): Use word_mode
	with integer parameters in registers.
	(gen_push): Push register in word_mode instead of Pmode.
	(ix86_emit_save_regs): Likewise.
	(ix86_emit_save_regs_using_mov): Save integer registers in word_mode.
	(gen_pop): Pop register in word_mode instead of Pmode.
	(ix86_emit_restore_regs_using_pop): Likewise.
	(ix86_expand_prologue): Replace Pmode with word_mode for push
	immediate.  Use ix86_gen_pro_epilogue_adjust_stack.  Save and
	restore RAX and R10 in word_mode.
	(ix86_emit_restore_regs_using_mov): Restore integer registers
	in word_mode.
	(ix86_expand_split_stack_prologue): Save R10_REG and restore in
	word_mode.
	(ix86_split_to_parts): Use word_mode with PUT_MODE for push.
	(ix86_split_long_move): Likewise.

	* config/i386/i386.md (W): New.
	(*push<mode>2_prologue): Replace :P with :W.
	(*pop<mode>1): Likewise.
	(*pop<mode>1_epilogue): Likewise.
	(push/pop peephole2): Use word_mode scratch registers.

2012-03-08  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/predicates.md (indirect_branch_operand): Simplify.

2012-03-08  Georg-Johann Lay  <avr@gjlay.de>

	* config/avr/avr.md (*addhi3, addhi3_clobber): Add "w" alternative
	for constants in [-63,63].

2012-03-08  Uros Bizjak  <ubizjak@gmail.com>

	PR target/52530
	Revert:
	2012-03-04  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.c (ix86_print_operand_address): Only handle
	zero-extended DImode addresses.

2012-03-08  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>

	* configure.ac (gcc_cv_as_ix86_tlsldmplt): Add label.
	* configure: Regenerate.

2012-03-08  Georg-Johann Lay  <avr@gjlay.de>

	PR target/52496
	* config/avr/avr.c (avr_mem_clobber): New static function.
	(avr_expand_delay_cycles): Add memory clobber operand to
	delay_cycles_1, delay_cycles_2, delay_cycles_3, delay_cycles_4.
	* config/avr/avr.md (unspec): Add UNSPEC_MEMORY_BARRIER.
	(enable_interrupt, disable_interrupt): New expander.
	(nopv, sleep, wdr): New expanders.
	(delay_cycles_1): Add memory clobber.
	(delay_cycles_2): Add memory clobber.
	(delay_cycles_3): Add memory clobber.
	(delay_cycles_4): Add memory clobber.
	(cli_sei): New insn from former "enable_interrupt",
	"disable_interrupt" with memory clobber.
	(*wdt): New insn from former "wdt" with memory clobber.
	(*nopv): Similar, but for "nopv".
	(*sleep): Similar, but for "sleep".

2012-03-07  Oleg Endo  <olegendo@gcc.gnu.org>
	    Kaz Kojima  <kkojima@gcc.gnu.org>

	PR target/52503
	* config/sh/sh.opt (msoft-atomic): Use Var instead of Mask.
	* config/sh/linux.h (TARGET_DEFAULT): Remove MASK_SOFT_ATOMIC.
	(SUBTARGET_OVERRIDE_OPTIONS): Define.

2012-03-07  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/predicates.md (x86_64_zext_general_operand): New.
	* config/i386/i386.md (*zero_extendsidi2_rex64): Change operand 1
	predicate to x86_64_zext_general_operand.  Accept "Z" constraint.

2012-03-07  Walter Lee  <walt@tilera.com>

	* config/tilegx/tilegx.c (tilegx_expand_prologue): Don't generate
	REG_CFA_* notes for the stack pointer.
	(tilegx_expand_epilogue): Restore stack pointer by adjusting it by
	EH_RETURN_STACKADJ_RTX.
	* config/tilepro/tilepro.c (tilepro_expand_prologue): Don't
	generate REG_CFA_* notes for the stack pointer.
	(tilepro_expand_epilogue): Restore stack pointer by adjusting it
	by EH_RETURN_STACKADJ_RTX.

2012-03-07  Georg-Johann Lay  <avr@gjlay.de>

	* doc/invoke.texi (AVR Built-in Macros): Correct condition for
	when __AVR_3_BYTE_PC__ is defined.

2012-03-07  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.c (ix86_print_operand_punct_valid_p): Add '^'.
	(ix86_print_operand): Handle '^'.
	* config/i386/i386.md (*strmovdi_rex_1): Macroize memory operands
	using P mode iterator.  Add %^ to asm template to conditionally emit
	addr32 prefix.
	(*rep_movdi_rex64): Ditto.
	(*strsetdi_rex_1): Ditto.
	(*rep_stosdi_rex64): Ditto.
	(*strmov{si,hi,qi}_1): Add %^ to asm template to
	conditionally emit addr32 prefix.
	(*rep_mov{si,qi}): Ditto.
	(*strset{si,hi,qi}): Ditto.
	(*rep_stos{si,qi}): Ditto.
	(*cmpstrnqi_nz_1): Ditto.
	(*cmpstrnqi_1): Ditto.
	(*strlenqi_1): Ditto.

2012-03-07  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.c (function_value_64): Return pointers in
	word_mode instead of Pmode.
	(ix86_promote_function_mode): Likewise.

2012-03-07  Richard Guenther  <rguenther@suse.de>

	* coverage.c (get_gcov_type): Use type_for_mode.
	(get_gcov_unsigned_t): Likewise.
	* expr.c (store_constructor): Use type_for_mode.
	(try_casesi): Likewise.
	* tree-ssa-loop-ivopts.c (add_standard_iv_candidates_for_size): Remove.
	(add_standard_iv_candidates): Use standard type trees.
	* dojump.c (do_jump): Remove dead code.

2012-03-07  Richard Guenther  <rguenther@suse.de>

	* c-typeck.c (pointer_diff): Use c_common_type_for_size.

2012-03-07  Richard Guenther  <rguenther@suse.de>

	* convert.c (strip_float_extensions): Move ...
	* tree.c (strip_float_extensions): ... here.

2012-03-07  Georg-Johann Lay  <avr@gjlay.de>

	PR target/52484
	* config/avr/avr.md (xload<mode>_A): Add R22... to register footprint.

2012-03-07  Richard Guenther  <rguenther@suse.de>

	* omp-low.c (extract_omp_for_data): Use signed_type_for.
	(expand_omp_for_generic): Likewise.
	(expand_omp_for_static_nochunk): Likewise.
	(expand_omp_for_static_chunk): Likewise.
	* tree-vect-stmts.c (vect_gen_perm_mask): Use type_for_mode.
	* tree-vect-slp.c (vect_transform_slp_perm_load): Likewise.
	* tree-vect-loop-manip.c (vect_gen_niters_for_prolog_loop):
	Use unsigned_type_for.
	(vect_create_cond_for_align_checks): Use signed_type_for.

2012-03-07  Andrey Belevantsev  <abel@ispras.ru>

	PR rtl-optimization/52203
	* sel-sched.c (estimate_insn_cost): New parameter pempty.  Adjust
	all callers to pass NULL except ...
	(reset_sched_cycles_in_current_ebb): ... here, save the value
	in new variable 'empty'.  Increase issue_rate only for
	non-empty insns.

2012-03-07  Ralf Corsépius  <ralf.corsepius@rtems.org>

	PR target/51417
	* Makefile.in: Let install-gcc-ar depend on installdirs,
	gcc-ar$(exeext), gcc-nm$(exeext), gcc-ranlib$(exeext).
	Don't double canonicalize if cross-compiling.

2012-03-07  Georg-Johann Lay  <avr@gjlay.de>

	PR target/52506
	* gcc/config/avr/avr.c (expand_epilogue): Fix order of restoration
	to: RAMPZ, RAMPY, RAMPX, RAMPD.
	(expand_prologue): Only clear RAMPZ if it has effect on RAM-read.

2012-03-07  Georg-Johann Lay  <avr@gjlay.de>

	PR target/52505
	* config/avr/avr.c (avr_out_xload): Don't read unintentionally
	from RAM.
	* config/avr/avr.md (xload_8): Adjust insn length.

2012-03-07  Georg-Johann Lay  <avr@gjlay.de>

	PR target/52461
	* gcc/config/avr/avr.c (avr_out_lpm): Clear RAMPZ after usage
	if RAMPZ affects reading from RAM.

2012-03-07  Richard Guenther  <rguenther@suse.de>

	PR pch/52518
	PR pch/38987
	* doc/invoke.texi (Precompiled Headers): Remove sentence that
	suggests you can include PCHs from inside another header.

2012-03-07  Richard Sandiford  <rdsandiford@googlemail.com>

	PR middle-end/52515
	* rtl.h (pc_rtx, cc0_rtx, ret_rtx, simple_return_rtx): Add GTY markers.

2012-03-07  Kai Tietz  <ktietz@redhat.com>

	* doc/invoke.texi (fwritable-relocated-rdata): Document
	new Cygwin/MinGW target option.
	* config/i386/winnt.c (i386_pe_unique_section): Ignore
	reloc if flag -fwritable-relocated-rdata is not set.
	(i386_pe_section_type_flags): Likewise.
	* config/i386/cygming.opt (fwritable-relocated-rdata):
	Add new flag variable flag_writable_rel_rdata.

2012-03-07  Richard Guenther  <rguenther@suse.de>

	* tree-ssa-math-opts.c (convert_mult_to_widen): Check actual
	precision against gimple constraints.

2012-03-06  Richard Sandiford  <rdsandiford@googlemail.com>

	PR middle-end/52372
	* rtl.h (pc_rtx, ret_rtx, simple_return_rtx, cc0_rtx): Redefine as
	variables.
	(GR_PC, GR_CC0, GR_RETURN, GR_SIMPLE_RETURN): Delete.
	* emit-rtl.c (pc_rtx, ret_rtx, simple_return_rtx, cc0_rtx): New
	variables.
	(init_emit_regs): Move associated initialization to...
	(init_emit_once): ...here.

2012-03-06  Richard Henderson  <rth@redhat.com>

	* config/m68k/m68k.h (ISA_HAS_TAS): New.
	* config/m68k/sync.md (atomic_test_and_set): Use it.
	(atomic_test_and_set_1): Likewise.

2012-03-06  Michael Meissner  <meissner@linux.vnet.ibm.com>

	PR target/50310
	* config/rs6000/vector.md (vector_uneq<mode>): Add support for
	UNEQ, LTGT, ORDERED, and UNORDERED IEEE vector comparisons.
	(vector_ltgt<mode>): Likewise.
	(vector_ordered<mode>): Likewise.
	(vector_unordered<mode>): Likewise.
	* config/rs6000/rs6000.c (rs6000_emit_vector_compare_inner): Likewise.

2012-03-06  Aldy Hernandez  <aldyh@redhat.com>

	* trans-mem.c: New typedef for tm_region_p.
	Define vector types for tm_region_p.
	(tm_region_init): Replace region_worklist to a vector called
	bb_regions.

2012-03-06  Richard Guenther  <rguenther@suse.de>

	* fold-const.c (build_fold_addr_expr_with_type_loc): Fold
	MEM_REF with constant pointer operand.

2012-03-06  Richard Guenther  <rguenther@suse.de>

	PR middle-end/52493
	* tree-ssa-alias.c (ptr_derefs_may_alias_p): Robustify.

2012-03-06  Tristan Gingold  <gingold@adacore.com>

	* config/vms/vms-c.c (vms_pragma_nomember_alignment): Handle octaword.
	(external_model_kind): Improve documentation.
	(vms_pragma_extern_model): Handle relaxed_redef.
	(vms_c_register_pragma): Allow expansion for nomember_alignment.

2012-03-06  Georg-Johann Lay  <avr@gjlay.de>

	* doc/invoke.texi (AVR Options): -mmcu=: Document the XMEGA cores.
	Explain RAMPD, RAMPX, RAMPDY, RAMPZ usage by avr-gcc.
	Some more notes on EIND usage and reorder EIND subsection.

2012-03-06  Tristan Gingold  <gingold@adacore.com>

	* config/vms/vms.c (VMS_CRTL_LDBL): Rename from VMS_CRTL_PRNTF.
	* config/vms/vms-crtlmap.map: Rename PRNTF to LDBL.

2012-03-06  Tristan Gingold  <gingold@adacore.com>

	* config/vms/t-vmsnative (version): Define.
	* config/vms/t-vms (STMP_FIXPROTO, STMP_FIXINC, version): Remove.

2012-03-06  Andrey Belevantsev  <abel@ispras.ru>

	PR rtl-optimization/52250
	* sel-sched-ir.c (maybe_tidy_empty_bb): Try harder to find a bb
	to put note list into.  Unconditionally call move_bb_info.
	(move_bb_info): Do not assert the blocks being in the same region,
	just drop the note list if they are not.

2012-03-06  Oleg Endo  <olegendo@gcc.gnu.org>

	PR target/51244
	* config/sh/sh.c (sh_expand_t_scc): Remove SH2A special case
	and use unified expansion logic.
	* config/sh/sh.md (xorsi3_movrt): Rename to movrt.  Move
	closer to the existing movt insn.
	(negc): Rename insn to *negc.  Add new expander.
	(movnegt): Use xor pattern for T bit negation.  Reserve helper
	constant for negc pattern.
	(*movnegt): New insn and splitter.

2012-03-05  Bernd Schmidt  <bernds@codesourcery.com>

	* c-typeck.c (pointer_diff): Check for POINTER_PLUS_EXPR, not
	PLUS_EXPR.

2012-03-05  Richard Henderson  <rth@redhat.com>

	* genemit.c (main): Include "target.h" in insn-emit.c.
	* Makefile.in (insn-emit.o): Depend on TARGET_H.
	* config/sh/sync.md (atomic_test_and_set): Reference
	targetm.atomic_test_and_set_trueval instead of
	TARGET_ATOMIC_TEST_AND_SET_TRUEVAL.

2012-03-05  Joern Rennecke  <joern.rennecke@embecosm.com>

	* config/epiphany/epiphany.c (epiphany_function_value_regno_p):
	Make static.

2012-03-05  Steven Bosscher  <steven@gcc.gnu.org>

	* langhooks.c (add_builtin_type): New function.
	* langhooks.h (add_builtin_type): Export it.
	* config/mep/mep.c (mep_init_builtins): Use it.
	* config/rs6000/rs6000.c (rs6000_init_builtins): Use it.

2012-03-05  Jakub Jelinek  <jakub@redhat.com>

	PR debug/51902
	* tree.h (BLOCK_SAME_RANGE): Define.
	* function.c (block_fragments_nreverse): Clear BLOCK_SAME_RANGE
	if BLOCK_FRAGMENT_CHAIN is non-NULL, but has it cleared.
	Also clear BLOCK_SAME_RANGE if fragment chain's supercontext fragment
	isn't equal to supercontext fragment's fragment chain.
	Adjust BLOCK_SUPERCONTEXT to point to supercontext fragment's
	fragment origin.
	(blocks_nreverse_all): Likewise.
	(reorder_blocks_1): Compute BLOCK_SAME_RANGE bits.  Set
	BLOCK_SUPERCONTEXT to supercontext fragment instead of
	supercontext fragment's fragment origin.
	* dwarf2out.c (add_high_low_attributes): If stmt has the same
	range as its parent (or parents thereof etc.), use the parent's
	DW_AT_ranges value instead of creating a new .debug_ranges range.

2012-03-05  Richard Henderson  <rth@redhat.com>

	PR tree-opt/52242
	Revert: 2011-11-26  Richard Henderson  <rth@redhat.com>
	* omp-low.c (expand_omp_atomic): Assume anything aligned to
	BIGGEST_ALIGNMENT is aligned.

2012-03-05  Richard Henderson  <rth@redhat.com>

	* config/sh/sh.h (TARGET_ATOMIC_TEST_AND_SET_TRUEVAL): Move...
	* config/sh/sh.c: ... here.

2012-03-05  Richard Henderson  <rth@redhat.com>

	PR target/52481
	* config/m68k/sync.md (atomic_test_and_set): Use expand_simple_unop
	instead of calling negqi2 directly.

2012-03-05  Aldy Hernandez  <aldyh@redhat.com>

	PR middle-end/52463
	* trans-mem.c (tm_region_init): Use last_basic_block.

2012-03-05  Oleg Endo  <olegendo@gcc.gnu.org>

	* config/sh/sh.h (TARGET_ATOMIC_TEST_AND_SET_TRUEVAL): New hook.
	* config/sh/sync.md (atomic_test_and_set): New expander.
	(tasb, atomic_test_and_set_soft): New insns.
	* config/sh/sh.opt (menable-tas): New option.
	* doc/invoke.texi (SH Options): Document it.

2012-03-05  Richard Guenther  <rguenther@suse.de>

	* cfgloop.c (verify_loop_structure): Verify dominators before
	using them.
	* graphite-clast-to-gimple.c (graphite_verify): Do not verify
	dominators from here.
	* graphite-scop-detection.c (create_sese_edges): Likewise.
	* loop-doloop.c (doloop_optimize_loops): Likewise.
	* loop-init.c (loop_optimizer_init): Likewise.
	* loop-unroll.c (unroll_and_peel_loops): Likewise.
	* loop-unswitch.c (unswitch_loops): Likewise.
	* tree-ssa-loop-manip.c (tree_transform_and_unroll_loop): Likewise.
	* tree-parloops.c (parallelize_loops): Likewise.  Verify
	only when checking is enabled.
	* tree-loop-distribution.c (tree_loop_distribution): Likewise.

2012-03-05  Bernd Schmidt  <bernds@codesourcery.com>

	* genautomata.c (parse_automata_opt): New static function.
	(initiate_automaton_gen): Remove all option handling code.  Remove
	argc argument.  All callers changed.
	(main): Call init_rtx_reader_args_cb with the new function as argument.

2012-03-05  Richard Guenther  <rguenther@suse.de>

	* cfgexpand.c (gimple_expand_cfg): Free dominator info.
	* tree-if-conv.c (combine_blocks): Free post-dominator info
	after breaking it.
	* tree-parloops.c (create_parallel_loop): Free and re-compute
	dominator info after breaking it.

2012-03-05  Richard Guenther  <rguenther@suse.de>

	PR middle-end/52353
	* optabs.h (trapv_unoptab_p): New function.
	(trapv_binoptab_p): Likewise.
	* optabs.c (expand_binop): Use emit_libcall_block_1 with
	a proper equiv_may_trap argument.
	(expand_unop): Likewise.
	(emit_libcall_block_1): Take extra argument whether the
	instruction may trap.  Renamed from ...
	(emit_libcall_block): ... this.  New wrapper.

2012-03-05  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/51721
	* tree-vrp.c (register_edge_assert_for_2): If comparing
	lhs of right shift by constant with an integer constant,
	add ASSERT_EXPRs for the rhs1 of the right shift.

	* cfgrtl.c (cfg_layout_merge_blocks): Cleanup.

2012-03-05  Richard Guenther  <rguenther@suse.de>

	* tree.c (integer_zerop): Handle VECTOR_CSTs.
	(integer_onep): Likewise.
	(integer_all_onesp): Likewise.

2012-03-05  Georg-Johann Lay  <avr@gjlay.de>

	* config/avr/avr.md (*umaddqihi4.2): New insn-and-split.

2012-03-04  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.c (pro_epilogue_adjust_stack): Check Pmode
	instead of TARGET_64BIT.

2012-03-04  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.c (ix86_expand_prologue): Check Pmode to set
	adjust_stack_insn.

2012-03-04  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.c (ix86_print_operand_address): Only handle
	zero-extended DImode addresses.

2012-03-04  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.c (ix86_print_operand) <case '+'>: Declare
	taken and cputaken as bool.

2012-03-04  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/constraints.md (Ya): New internal constraint.
	* config/i386/i386.md (zero_extendsidi2): Remove expansion.
	(*zero_extendsidi2_rex64): Add x,x alternative.
	(*zero_extendsidi2): Ditto.  Add o,0 alternative.
	Remove flags reg clobber.  Adjust corresponding splits.
	(zero_extend<mode>si2): Macroize expander from zero_extendhisi2 and
	zero_extendqisi2 expanders using SWI12 mode iterator.
	(zero_extend<mode>si2_and): Macroize insn from
	zero_extendhisi2_and and zero_extendqisi2_and.  Merge corresponding
	splitters.
	(*zero_extend<mode>si2):  Macroize insn from
	*zero_extendhisi2_movzbl and *zero_extendqisi2_movzbl.
	(*zero_extend*2_movzbl_and): Remove insn patterns.
	(zero_extendqihi2_and): Merge corresponding splitter.
	(*zero_extendqihi2): Rename from *zero_extendqihi2_movzbl.
	(*zero_extend*2_movzbl_and): Remove insn patterns.
	(*anddi_1): Split TYPE_IMOVX instructions.
	(*andsi_1): Use Ya for alternative 2.  Split TYPE_IMOVX instructions.
	(*andhi_1): Ditto.
	(and->zext splitter): Add splitter pattern.
	(zero extend with andsi3 splitter): Adjust zero_extend pattern.

2012-03-04  Sandra Loosemore  <sandra@codesourcery.com>

	* doc/invoke.texi (C++ Dialect Options): Minor copy-edits to
	x86-specific text.
	(Debugging Options): Likewise.
	(Optimize Options): Likewise.
	(i386 and x86-64 Options): Discuss -march before -mtune, consistently
	with other architectures.  Use official processor names with correct
	spelling/capitalization.  Fix formatting and grammar issues.
	(i386 and x86-64 Windows Options): Similar cleanup here.

2012-03-03  Kaz Kojima  <kkojima@gcc.gnu.org>

	* config/sh/sh.md (abssi2): Add TARGET_SH1 condition.

2012-03-03  Kaz Kojima  <kkojima@gcc.gnu.org>

	* config/sh/sh.c (sh_dwarf_register_span): Don't apply
	DBX_REGISTER_NUMBER.

2012-03-03  Kaz Kojima  <kkojima@gcc.gnu.org>

	* config/sh/sh.c (shiftcosts): Return MAX_COST when the first
	operand is CONST_INT.  Take COSTS_N_INSNS into account.
	(sh_rtx_costs): Don't apply COSTS_N_INSNS to the return value
	of shiftcosts.

2012-03-02  Richard Henderson  <rth@redhat.com>

	* optabs.c (expand_atomic_test_and_set): Honor
	atomic_test_and_set_trueval even when atomic_test_and_set
	optab is not in use.

2012-03-02  Kaz Kojima  <kkojima@gcc.gnu.org>

	PR target/48596
	PR target/48806
	* config/sh/sh.c (sh_register_move_cost): Increase cost between
	GENERAL_REGS and FP_REGS for SImode.

2012-03-02  Oleg Endo  <olegendo@gcc.gnu.org>

	PR target/49486
	* config/sh/sh.md (negdi2): Add TARGET_SH1 condition.
	(absdi2): New expander.
	(*absdi2, *negabsdi2, negdi_cond): New insns and splits.

2012-03-02  Oleg Endo  <olegendo@gcc.gnu.org>

	* config/sh/sync.md (atomic_exchange<mode>): New expander.
	(atomic_exchange<mode>_soft): New insn.

2012-03-02  Oleg Endo  <olegendo@gcc.gnu.org>

	* config/sh/sync.md: Update copyright notice dates.
	(atomic_compare_and_swap<mode>): Use SImode for return value instead
	of QImode.
	(atomic_compare_and_swap<mode>_soft): Likewise.

2012-03-02  Oleg Endo  <olegendo@gcc.gnu.org>

	PR target/31640
	* config/sh/sh.h (LOOP_ALIGN): Move logic to sh_loop_align.
	* config/sh/sh.c: Update copyright notice dates.
	(sh_loop_align): Add logic from LOOP_ALIGN.  Don't disable loop
	alignment for TARGET_HARD_SH4.
	(sh_option_override): Reduce default function alignment.  Set
	loop alignment to 4 bytes when not optimizing for size.

2012-03-02  Maxim Kuvyrkov  <maxim@codesourcery.com>

	PR middle-end/50335
	* doc/invoke.texi (floop-flatten): Remove.
	* toplev.c (process_options): Remove references to flag_loop_flatten.
	* tree-ssa-loop.c (gate_graphite_transform): Same.
	* common.opt (floop-flatten): Obsolete.
	* graphite-poly.c (apply_poly_transforms): Remove reference to
	flag_loop_flatten.
	* Makefile.in (graphite-flattening.o): Remove.
	* graphite-flattening.c: Remove.

2012-03-02  Uros Bizjak  <ubizjak@gmail.com>

	* compare-elim.c (find_comparisons_in_bb): Eliminate only compares
	having mode compatible with the mode of previous compare.  Substitute
	compare mode of previous compare with the mode, compatible
	with eliminated and previous compare.

2012-03-02  Peter Bergner  <bergner@vnet.ibm.com>

	* config/rs6000/dfp.md (floatdidd2): New define_insn.

2012-03-02  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.c (ix86_cc_modes_compatible): Declare CCZmode
	compatible with CCGOCmode and CCGCmode.

2012-03-02  Peter Bergner  <bergner@vnet.ibm.com>

	* config/rs6000/vsx.md (vsx_set_<mode>): Reorder operands.

2012-03-02  Ulrich Weigand  <ulrich.weigand@linaro.org>

	* config/arm/arm.c (arm_sat_operator_match): New function.
	* config/arm/arm-protos.h (arm_sat_operator_match): Add prototype.
	* config/arm/arm.md ("insn" attribute): Add "sat" value.
	("SAT", "SATrev"): New code iterators.
	("SATlo", "SAThi"): New code iterator attributes.
	("*satsi_<SAT:code>"): New pattern.
	("*satsi_<SAT:code>_shift"): Likewise.
	* config/arm/arm-fixed.md ("arm_ssatsihi_shift"): Add "insn"
	and "shift" attributes.
	("arm_usatsihi"): Add "insn" attribute.
	* config/arm/predicates.md (sat_shift_operator): Allow multiplication
	by powers of two.  Do not allow shift by 32.

2012-03-02  Uros Bizjak  <ubizjak@gmail.com>

	PR target/46716
	* config/i386/i386.c (construct_container): Use gen_reg_or_parallel
	to pass the argument in the register of "natural" mode.

2012-03-02  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/52406
	* tree-data-ref.h: Update documentation about DR_BASE_OBJECT.
	(struct indices): Add unconstrained_base member.
	(struct dr_alias): Remove unused vops member.
	(DR_UNCONSTRAINED_BASE): New define.
	* tree-data-ref.c (dr_analyze_indices): For COMPONENT_REFs
	add indices to allow their disambiguation.  Make DR_BASE_OBJECT
	be an artificial access that covers the whole indexed object,
	or mark it with DR_UNCONSTRAINED_BASE if we cannot do so.  Canonicalize
	plain decl base-objects to their MEM_REF variant.
	(dr_may_alias_p): When the base-object of either data reference
	has unknown size use only points-to information.
	(compute_affine_dependence): Make dumps easier to read and
	more verbose.
	* tree-vect-data-ref.c (vector_alignment_reachable_p): Use
	DR_REF when looking for packed references.
	(vect_supportable_dr_alignment): Likewise.

2012-03-02  Greta Yorsh  <Greta.Yorsh@arm.com>

	* config/arm/arm-ldmstm.ml (write_ldm_commutative_peephole):
	Improve conditions for peepholes of loads followed by commutative
	operators.
	* config/arm/ldmstm.md: Regenerated.

2012-03-02  Richard Guenther  <rguenther@suse.de>

	* BASE-VER: Set to 4.8.0.

2012-03-01  Richard Earnshaw  <rearnsha@arm.com>

	* config.gcc (obsolete): Add all ARM targets using the FPA.
	(with_fpu): Obsolete selection of the FPA or Maverick on ARM.
	* doc/install.texi: Avoid references to obsolete ARM ports.

2012-03-01  Joern Rennecke  <joern.rennecke@embecosm.com>

	* config/epiphany/epiphany.md (movmisalign<mode>): New patterns.

2012-03-01  Jeremy Bennett  <jeremy.bennett@embecosm.com>
	    Joern Rennecke  <joern.rennecke@embecosm.com>

	* doc/extend.texi: Expand and update information on interrupt
	attribute for Epiphany.

2012-03-01  Oleg Endo  <olegendo@gcc.gnu.org>

	* config/sh/sh-protos.h: Update copyright notice dates.
	* config/sh/sh.h: Likewise.
	* config/sh/sh.md: Likewise.
	* config/sh/constraints.md: Likewise.
	* config/sh/predicates.md: Likewise.

2012-03-01  Oleg Endo  <olegendo@gcc.gnu.org>

	* config/sh/sh-protos.h (tertiary_reload_operand): Remove dead function.
	* config/sh/sh.c (tertiary_reload_operand): Likewise.

2012-03-01  Oleg Endo  <olegendo@gcc.gnu.org>

	* config/sh/constraints.md: Fix comment typo.

2012-03-01  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>

	PR target/52408
	* config/pa/pa.md (zvdep_imm32): Change type of variable x from int to
	unsigned HOST_WIDE_INT.
	(zvdep_imm64): Likewise.
	(vdepi_ior): Change type of variable x from int to HOST_WIDE_INT.
	(vdepi_and): Likewise.
	Likewise for unamed 64-bit patterns.
	* config/pa/predicates.md (lhs_lshift_cint_operand): Update comment.

2012-03-01  Alexandre Oliva  <aoliva@redhat.com>

	PR debug/52001
	PR rtl-optimization/52417
	* cselib.c (cselib_any_perm_equivs): New variable.
	(cselib_reset_table): Check that it's not set when not
	preserving constants.
	(cselib_add_permanent_equiv): Set it.
	(cselib_have_permanent_equivalences): New.
	(cselib_init, cselib_finish): Reset it.
	* cselib.h (cselib_have_permanent_equivalences): Declare.
	* alias.c (get_addr): Restore earlier behavior when there
	aren't permanent equivalences.

2012-03-01  Steven Bosscher  <steven@gcc.gnu.org>

	* config/mn10300/mn10300-modes.def: Fix copyright notice.
	* config/v850/v850-modes.def: Fix copyright notice.

2012-03-01  Georg-Johann Lay  <avr@gjlay.de>

	* doc/extend.texi (AVR Built-in Functions): Document
	__builtin_avr_flash_segment.

	* config/avr/builtins.def (__builtin_avr_flash_segment): New entry.
	* config/avr/avr.md (flash_segment, flash_segment1): New expanders.
	(*split.flash_segment): New insn-and-split.
	* config/avr/avr.c (avr_init_builtins): Add local variables:
	const_memx_void_node, const_memx_ptr_type_node,
	char_ftype_const_memx_ptr.

2012-03-01  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/52445
	* tree-ssa-phiopt.c (struct name_to_bb): Remove ssa_name field,
	add ssa_name_ver, offset and size fields and change store field
	to bool.
	(name_to_bb_hash, name_to_bb_eq): Adjust for the above changes.
	(add_or_mark_expr): Likewise.  Only consider previous stores
	with the same size and offset.
	(nt_init_block): Only look at gimple_assign_single_p stmts,
	doesn't look at rhs2.

2012-03-01  Richard Guenther  <rguenther@suse.de>

	PR middle-end/52443
	* tree-cfg.c (verify_gimple_assign_unary): Allow any
	conversions from integral types to pointer types.

2012-03-01  Georg-Johann Lay  <avr@gjlay.de>

	* config/avr/avr-c.c (avr_cpu_cpp_builtins): Restore built-in
	defines for __UINT24_MAX__, __INT24_MAX__, __INT24_MIN__
	unintentionally removed in r184616.

2012-03-01  Venkataramanan Kumar  <venkataramanan.kumar@amd.com>

	* doc/invoke.texi: Document AMD bdver2 and remove mentioning
	3DNow from bdver1.

2012-02-29  Jakub Jelinek  <jakub@redhat.com>
	    Uros Bizjak  <ubizjak@gmail.com>

	PR target/52437
	* config/i386/sse.md (vec_set<mode>_0): Swap "*r" and "fF"
	alternatives, add "e" constraint to the new last alternative
	and ! to last 3 alternatives.

2012-02-29  Eric Botcazou  <ebotcazou@adacore.com>

	* dwarf2out.c (modified_type_die): Set DW_AT_GNAT_descriptive_type and
	DW_AT_artificial attributes at the end of the processing.
	(gen_array_type_die): Likewise.
	(gen_enumeration_type_die): Likewise.
	(gen_struct_or_union_type_die): Likewise.
	(add_gnat_descriptive_type_attribute): Do not suppress debug info for
	the parent type.

2012-02-29  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/52419
	* expr.c (expand_assignment): If doing misaligned store that doesn't
	cover all mode bits, perform a RMW cycle.

	PR tree-optimization/52429
	* tree-parloops.c (separate_decls_in_region_debug): Return early
	if var is LABEL_DECL.

2012-02-29  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>

	PR tree-optimization/52424
	* tree-ssa-dom.c (dom_opt_leave_block): Push a marker before
	calling dom_thread_across_edge.

2012-02-29  Georg-Johann Lay  <avr@gjlay.de>

	* config/avr/avr.c: Move definition of TARGET macros to end of file.

2012-02-29  Georg-Johann Lay  <avr@gjlay.de>

	* config/avr/avr-protos.h (avr_output_bld): Remove unused prototype.
	* config/avr/avr.c (avr_output_bld): Remove unused function.
	(avr_out_sbxx_branch): Use "%T" to print bit position.

2012-02-29  Georg-Johann Lay  <avr@gjlay.de>

	* config/avr/avr.md: Untabify.

2012-02-29  Georg-Johann Lay  <avr@gjlay.de>

	* config/avr/avr.md (eqne): New code iterator.
	(*dec-and-branchsi): Use it in text peephole's condition.
	(*dec-and-branchhi): Ditto.
	(*dec-and-branchqi): Ditto.

2012-02-29  Georg-Johann Lay  <avr@gjlay.de>

	PR target/49939
	* config/avr/avr.h (ASM_SPEC): Add -mno-skip-bug if we know that
	the device does not have the skip-bug.

2012-02-29  Oleg Endo  <olegendo@gcc.gnu.org>

	* doc/invoke.texi (-msoft-atomic): Add more detailed description.
	(-mbranch-cost, -mcbranchdi -mcmpeqdi -mfused-madd
	-mpretend-cmove): New.

2012-02-29  Jakub Jelinek  <jakub@redhat.com>

	PR bootstrap/52397
	* df.h (struct df_d): Adjust comment that hard_regs_live_count
	doesn't count DEBUG_INSN refs.
	* df-scan.c (df_ref_create_structure): Don't set DF_HARD_REG_LIVE
	for DEBUG_INSN refs.

2012-02-28  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>

	Partially revert:

	2012-02-20  Richard Guenther  <rguenther@suse.de>
	PR tree-optimization/52298
	* tree-vect-stmts.c (vectorizable_load): Properly use
	STMT_VINFO_DR_STEP instead of DR_STEP when vectorizing outer loops.

2012-02-28  Aldy Hernandez  <aldyh@redhat.com>

	PR middle-end/51752
	* gimple.h (gimple_in_transaction): New.
	(gimple_set_in_transaction): New.
	(struct gimple_statement_base): Add in_transaction field.
	* tree-ssa-loop-im.c: (movement_possibility): Restrict movement of
	transaction loads.
	(tree_ssa_lim_initialize): Compute transaction bits.
	* tree.h (compute_transaction_bits): Protoize.
	* trans-mem.c (tm_region_init): Use the heap to store BB
	auxilliary data.
	(compute_transaction_bits): New.

2012-02-28  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>

	* gcc.c (display_help): Document --help=common and sort entries
	alphabetically.

2012-02-28  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>

	* doc/install.texi: Document check-$LANG specific shortcuts

2012-02-28  Matthew Gretton-Dann  <matthew.gretton-dann@arm.com>

	PR target/51534
	* config/arm/arm.c (neon_builtin_data): Add entries for vcgeu
	and vcgtu.
	* config/arm/arm_neon.h: Regenerate.
	* config/arm/neon.md (unspec): Add UNSPEC_VCGEU, and UNSPEC_VCGTU.
	(neon_vcgeu): New insn.
	(neon_vcgtu): Likewise.
	* config/arm/neon.ml (s_8_32, u_8_32): New lists.
	(ops): Unsigned comparison intrinsics call a different builtin.

2012-02-28  Richard Guenther  <rguenther@suse.de>

	PR target/52407
	* config/i386/i386.c (ix86_expand_vector_set): Fix element
	ordering for the VEC_CONCAT for two element vectors for
	V2SFmode, V2SImode and V2DImode.

2012-02-28  Richard Earnshaw  <rearnsha@arm.com>

	PR target/49448
	* config.gcc (arm*-*-linux*): Use an unambiguous pattern for
	detecting big-endian triplets.

2012-02-28  Richard Earnshaw  <rearnsha@arm.com>

	* arm.c (aapcs_vfp_is_call_or_return_candidate): Only use the machine
	mode if there is no type information available.

2012-02-28  Thomas Koenig  <tkoenig@gcc.gnu.org>

	PR tree-optimization/53207
	* doc/invoke.texi: Document as experimental and relying on graphite.

2012-02-28  Georg-Johann Lay  <avr@gjlay.de>

	* config/avr/avr-devices.c (avr_mcu_type): Adjust NULL part
	of initializer to changes from r184614.

2012-02-28  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/52395
	* tree-sra.c (build_ref_for_offset): Also look at the base
	TYPE_ALIGN when figuring out the alignment of the replacement.

2012-02-28  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/52402
	* ipa-prop.c (ipa_modify_call_arguments): Properly use
	mis-aligned types when creating the accesses at the call site.

2012-02-28  Georg-Johann Lay  <avr@gjlay.de>

	* config/avr/builtins.def: New file.
	* config/avr/t-avr (avr.o, avr-c.o): Depend on it.
	* config/avr/avr.c (enum avr_builtin_id): Use it.
	(avr_init_builtins): Use it. And use avr_bdesc.
	(bdesc_1arg): Remove.
	(bdesc_2arg): Remove.
	(bdesc_3arg): Remove.
	(struct avr_builtin_description): Add field n_args.
	(avr_bdesc): New static variable using builtins.def.
	(avr_expand_builtin): Use it.
	Don't call avr_expand_delay_cycles if op0 is not CONST_INT.
	(avr_fold_builtin): Fold AVR_BUILTIN_SWAP.
	Don't fold AVR_BUILTIN_INSERT_BITS if arg0 is not INTEGER_CST.

2012-02-28  Georg-Johann Lay  <avr@gjlay.de>

	PR target/52148
	* config/avr/avr.md (movmem_<mode>): Replace match_operand that
	match only one single hard register with respective hard reg rtx.
	(movmemx_<mode>): Ditto.
	* config/avr/avr.c (avr_emit_movmemhi): Adapt expanding to new
	insn anatomy of movmem[x]_<mode>.
	(avr_out_movmem): Same for printing assembler and operand usage.

2012-02-28  Georg-Johann Lay  <avr@gjlay.de>

	PR target/49868
	PR target/52261
	* doc/extend.texi (AVR Named Address Spaces): No more try to fix
	address spaces located outside of device flash.

	* config/avr/avr.h (base_arch_s): Remove field n_segments.
	(mcu_type_s): Add field n_flash.
	* config/avr/avr-devices.c (avr_arch_types): Remove .n_segments.
	Set .have_elpm and .have_elpmx to 1 for avrxmega4 and avrxmega5.
	(AVR_MCU): Add N_FLASH argument.
	* config/avr/avr-mcus.def (AVR_MCU): Add initializer for .n_flash.
	* config/avr/avr-c.c (avr_cpu_cpp_builtins): Only define built-in
	macro __FLASH<n> if that address space makes sense for the device.
	* config/avr/avr.c (avr_out_lpm): Don't try to fix address spaces
	outside of target flash.
	(avr_asm_named_section): Ditto.
	(avr_asm_select_section): Ditto.
	(avr_addr_space_convert): Ditto.
	(avr_emit_movmemhi): Ditto.
	(avr_nonconst_pointer_addrspace, avr_pgm_check_var_decl): Error if
	address space is outside of device flash.
	(avr_insert_attributes): Ditto.
	(avr_xload_libgcc_p): Use avr_current_device->n_flash instead of
	avr_current_arch->n_segments.

2012-02-27  H.J. Lu  <hongjiu.lu@intel.com>

	PR target/52352
	* config/i386/i386.md (*movabs<mode>_1): Enable only for TARGET_LP64.
	(*movabs<mode>_2): Likewise.

2012-02-27  Jakub Jelinek  <jakub@redhat.com>

	PR target/52375
	* config/arm/neon.md (vashr<mode>3, vlshr<mode>3): Use
	s_register_operand in the test instead of REG_P.  Don't call
	gen_reg_rtx if it won't be used.

	PR tree-optimization/52376
	* ipa-split.c (split_function): Ignore CLOBBER stmts.

2012-02-27  Stuart Henderson  <shenders@gcc.gnu.org>

	* ifcvt.c (noce_get_condition): Check condition variable is not
	small_register_classes_for_mode_p before accepting.

2012-02-27  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.md (*movabs<mode>_1): Fix operand 1 constraints.

2012-02-27  Matthew Gretton-Dann  <matthew.gretton-dann@arm.com>

	Revert:
	2012-01-09  Matthew Gretton-Dann  <matthew.gretton-dann@arm.com>
	* config/arm/arm-cores.def (cortex-a15): Use cortex_a15_tune for
	tuning parameters.
	* config/arm/arm.c (arm_cortex_a15_tune): New static variable.

2012-02-27  Oleg Endo  <olegendo@gcc.gnu.org>

	* config/sh/sh.h: Delete dead GO_IF_LEGITIMATE_INDEX macro.

2012-02-26  Oleg Endo  <olegendo@gcc.gnu.org>

	* config/sh/predicates.md: Remove blank lines.
	* config/sh/sh.c: Fix typos in comments.
	* config/sh/constraints.md: Likewise.
	* config/sh/sh.md: Remove blank lines.
	Fix typos in comments.  Use ;; as comment characters.

2012-02-26  Walter Lee  <walt@tilera.com>

	* config/tilegx/tilegx.c (match_pcrel_step2): Fix instruction pattern.
	(replace_mov_pcrel_step2): Ditto.

2012-02-25  Alexandre Oliva  <aoliva@redhat.com>

	PR debug/52001
	* alias.c (refs_newer_value_cb, refs_newer_value_p): New.
	(get_addr): Walk canonical value's locs.  Avoid returning VALUEs
	and locs that reference values newer than the non-canonical value
	at hand.  Return the canonical value as a worst case.
	(memrefs_conflict_p): Walk canonical value's locs.

	PR debug/52001
	* cselib.c (preserve_only_constants): Rename to...
	(preserve_constants_and_equivs): ... this.  Split out...
	(invariant_or_equiv_p): ... this.  Preserve plus expressions
	of other preserved expressions too.
	(cselib_reset_table): Adjust.
	* var-tracking.c (reverse_op): Use canonical value to build
	reverse operation.

2012-02-23  Kai Tietz  <ktietz@redhat.com>

	* config/i386/i386.c (ix86_delegitimize_address): Handle
	UNSPEC_PCREL plus displacement.

2012-02-24  Georg-Johann Lay  <avr@gjlay.de>

	PR target/52261
	* config/avr/avr.c (avr_out_movhi_mr_r_xmega): Use base
	to test for unusedness in st X addressing.

2012-02-24  Richard Guenther  <rguenther@suse.de>

	PR middle-end/52361
	* gimple.c (walk_gimple_op): Use predicates with less redundant tests.
	(is_gimple_reg_type): Move inline ...
	* gimple.h (is_gimple_reg_type): ... here.

2012-02-24  Richard Guenther  <rguenther@suse.de>

	PR middle-end/52361
	* passes.c (execute_function_todo): When verifying SSA form
	verify gimple form first.
	* tree-ssa.c (verify_ssa): Do not verify gimple form here.

2012-02-24  Richard Guenther  <rguenther@suse.de>

	PR middle-end/52355
	* fold-const.c (fold_addr_of_array_ref_difference): New function.
	(fold_binary_loc): Use it to extend the existing &a[i] - &a[j] folding.

2012-02-13  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>

	* tree-if-conv (predicate_scalar_phi): Commentary typo fix.

2012-02-23  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>

	* tree-phinodes.c (make_phi_node): Mark static.
	* tree-flow.h (make_phi_node): Remove extern decl.
	* doc/gimple.texi (make_phi_node): Remove documentation.

2012-02-23  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>

	* tree-into-ssa (update_ssa): Avoid trailing whitespace in dump_file.
	* tree-ssa-sccvn.c (print_scc): Ditto.

2012-02-23  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>

	* doc/passes.texi (Full redundancy elimination): Fix typo.

2012-02-23  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>

	* doc/invoke.texi (-fdse, -fdce): Remove duplicate entries.

2012-02-23  Eric Botcazou  <ebotcazou@adacore.com>

	PR bootstrap/52287
	* haifa-sched.c (rank_for_schedule): Stabilize sort for debug insns.

2012-02-23  Uros Bizjak  <ubizjak@gmail.com>

	PR c/52290
	* c-decl.c (start_function): Exit early if decl1 is not FUNTION_DECL.

2012-02-23  Georg-Johann Lay  <avr@gjlay.de>

	* config/avr/avr.md (code_stdname): Add ior, xor.
	(xior): New code iterator.
	(*<code_stdname><mode>qi.byte0): Use xior instead of ior.
	(*<code_stdname><mode>qi.byte1-3): Ditto.

2012-02-23  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/52019
	* ipa-split.c (find_return_bb, find_retval, visit_bb): Ignore
	CLOBBER stmts.

2012-02-23  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>

	* acinclude.m4: Use HAVE_INITFINI_ARRAY_SUPPORT instead of
	HAVE_INITFINI_ARRAY to work around namespace pollution in
	certain versions of newlib system headers.
	* config.in: Regenerate.
	* configure: Regenerate.
	* config/initfini-array.h: Use HAVE_INITFINI_ARRAY_SUPPORT
	instead of HAVE_INITFINI_ARRAY.

2012-02-22  Uros Bizjak  <ubizjak@gmail.com>

	PR target/52330
	* config/i386/i386.c (ix86_print_operand) <case 'H'>: Error out if x
	is not offsettable memory reference.

2012-02-22  Georg-Johann Lay  <avr@gjlay.de>

	PR target/18145
	* config/avr/avr.c (avr_asm_output_aligned_decl_common): Skip
	setting avr_need_clear_bss_p for __gnu_lto* symbols.

2012-02-22  Georg-Johann Lay  <avr@gjlay.de>

	* config/avr/avr.h (avr_accumulate_outgoing_args): Return int.
	* config/avr/avr.c (avr_accumulate_outgoing_args): Return int.

2012-02-22  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>

	* configure.ac (LIB_TLS_SPEC): Enforce use of alternate thread
	library on Solaris 8 even without TLS support.
	* configure: Regenerate.

2012-02-22  Richard Guenther  <rguenther@suse.de>

	PR middle-end/52329
	* gimple-fold.c (fold_stmt_1): Also canonicalize ADDR_EXPRs
	for GIMPLE_DEBUG stmts.

2012-02-22  Martin Jambor  <mjambor@suse.cz>

	PR middle-end/51782
	* emit-rtl.c (set_mem_attributes_minus_bitpos): Set address space
	according to the base object.

2012-02-22  Georg-Johann Lay  <avr@gjlay.de>

	PR rtl-optimization/50063
	* config/avr/avr.md (movhi_sp_r): Handle -1 (unknown IRQ state)
	and 2 (8-bit SP) in operand 2.
	* config/avr/avr.c (avr_prologue_setup_frame): Adjust prologue
	setup to use movhi_sp_r instead of vanilla move to write SP.
	Adjust REG_CFA notes to superseed unspec.
	(expand_epilogue): Adjust epilogue setup to use movhi_sp_r instead
	of vanilla move.
	As function body might contain CLI or SEI: Use irq_state 0 (IRQ
	known to be off) only with TARGET_NO_INTERRUPTS. Never use
	irq_state 1 (IRQ known to be on) here.

2012-02-21  Bernd Schmidt  <bernds@codesourcery.com>

	* ira.c (check_allocation): Use REG_WORDS_BIG_ENDIAN, not
	WORDS_BIG_ENDIAN.
	* ira-color.c (setup_profitable_hard_regs, check_hard_reg_p,
	assign_hard_reg): Likewise.

2012-02-21  Georg-Johann Lay  <avr@gjlay.de>

	* config/avr/avr.md (neghi2): Remove "!d,0" alternative. Tweak "r,0".

2012-02-21  Georg-Johann Lay  <avr@gjlay.de>

	* config/avr/avr.md
	(*dec-and-branchhi!=-1.d.clobber): New text peephole.
	(*dec-and-branchhi!=-1.l.clobber): New text peephole.

2012-02-21  Georg-Johann Lay  <avr@gjlay.de>

	* config/avr/avr-protos.h (avr_accumulate_outgoing_args): Move
	prototype from here to...
	* config/avr/avr.h: ...here.

2012-02-21  Richard Earnshaw  <rearnsha@arm.com>

	PR target/52294
	* thumb2.md (thumb2_shiftsi3_short): Split register and
	immediate shifts.  For register shifts tie operands 0 and 1.
	(peephole2 for above): Check that register-controlled shifts
	have suitably tied operands.

2012-02-21  Quentin Neill  <quentin.neill@amd.com>

	PR target/52137
	* config/i386/bdver1.md (bdver1_call, bdver1_push,
	bdver1_pop, bdver1_leave, bdver1_lea, bdver1_imul_DI, bdver1_imul,
	bdver1_imul_mem_DI, bdver1_imul_mem, bdver1_idiv, bdver1_idiv_mem,
	bdver1_str, bdver1_idirect, bdver1_ivector, bdver1_idirect_loadmov,
	bdver1_idirect_load, bdver1_ivector_load, bdver1_idirect_movstore,
	bdver1_idirect_both, bdver1_ivector_both, bdver1_idirect_store,
	bdver1_ivector_store, bdver1_fldxf, bdver1_fld, bdver1_fstxf,
	bdver1_fst, bdver1_fist, bdver1_fmov_bdver1, bdver1_fadd_load,
	bdver1_fadd, bdver1_fmul_load, bdver1_fmul, bdver1_fsgn,
	bdver1_fdiv_load, bdver1_fdiv, bdver1_fpspc_load, bdver1_fpspc,
	bdver1_fcmov_load, bdver1_fcmov, bdver1_fcomi_load,
	bdver1_fcomi, bdver1_fcom_load, bdver1_fcom,
	bdver1_fxch, bdver1_ssevector_avx128_unaligned_load,
	bdver1_ssevector_avx256_unaligned_load,
	bdver1_ssevector_sse128_unaligned_load,
	bdver1_ssevector_avx128_load, bdver1_ssevector_avx256_load,
	bdver1_ssevector_sse128_load, bdver1_ssescalar_movq_load,
	bdver1_ssescalar_vmovss_load, bdver1_ssescalar_sse128_load,
	bdver1_mmxsse_load, bdver1_sse_store_avx256, bdver1_sse_store,
	bdver1_mmxsse_store_short, bdver1_ssevector_avx256,
	bdver1_movss_movsd, bdver1_mmxssemov, bdver1_sselog_load_256,
	bdver1_sselog_256, bdver1_sselog_load, bdver1_sselog,
	bdver1_ssecmp_load, bdver1_ssecmp, bdver1_ssecomi_load,
	bdver1_ssecomi, bdver1_vcvtX2Y_avx256_load, bdver1_vcvtX2Y_avx256,
	bdver1_ssecvt_cvtss2sd_load, bdver1_ssecvt_cvtss2sd,
	bdver1_sseicvt_cvtsi2sd_load, bdver1_sseicvt_cvtsi2sd,
	bdver1_ssecvt_cvtpd2ps_load, bdver1_ssecvt_cvtpd2ps,
	bdver1_ssecvt_cvtdq2ps_load, bdver1_ssecvt_cvtdq2ps,
	bdver1_ssecvt_cvtdq2pd_load, bdver1_ssecvt_cvtdq2pd,
	bdver1_ssecvt_cvtps2pd_load, bdver1_ssecvt_cvtps2pd,
	bdver1_ssecvt_cvtsX2si_load, bdver1_ssecvt_cvtsX2si,
	bdver1_ssecvt_cvtpd2pi_load, bdver1_ssecvt_cvtpd2pi,
	bdver1_ssecvt_cvtpd2dq_load, bdver1_ssecvt_cvtpd2dq,
	bdver1_ssecvt_cvtps2pi_load, bdver1_ssecvt_cvtps2pi,
	bdver1_ssemuladd_load_256, bdver1_ssemuladd_256,
	bdver1_ssemuladd_load, bdver1_ssemuladd, bdver1_sseimul_load,
	bdver1_sseimul, bdver1_sseiadd_load, bdver1_sseiadd,
	bdver1_ssediv_double_load_256, bdver1_ssediv_double_256,
	bdver1_ssediv_single_load_256, bdver1_ssediv_single_256,
	bdver1_ssediv_double_load, bdver1_ssediv_double,
	bdver1_ssediv_single_load, bdver1_ssediv_single, bdver1_sseins):
	Add "bdver2" attribute.

2012-02-21  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>

	* config/s390/s390.c (s390_option_override): Make -mhard-dfp the
	default if possible and not specified otherwise.

2012-02-21  Richard Guenther  <rguenther@suse.de>

	PR middle-end/52314
	* gimplify.c (create_tmp_from_val): Use the main variant type
	for the type of the temporary we create.

2012-02-21  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/52324
	* gimplify.c (gimplify_expr): When re-gimplifying expressions
	do not gimplify a MEM_REF address operand if it is already
	in suitable form.

2012-02-21  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>

	* config/s390/s390.md ("fixuns_trunc<mode>si2"): Replace
	TARGET_HARD_FLOAT with TARGET_HARD_DFP.

2012-02-21  Richard Guenther  <rguenther@suse.de>

	* tree-vect-stmts.c (vectorizable_load): Use pre-computed
	nested_in_vect_loop.

2012-02-21  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/52318
	* gimple-fold.c (gimplify_and_update_call_from_tree): Add
	vdef also to non-pure/const call stmts in the sequence.

2012-02-21  Tristan Gingold  <gingold@adacore.com>

	* config/vms/vms-ld.c (main): Fix IDENTIFICATION padding.

2012-02-20  David S. Miller  <davem@davemloft.net>

	* config/sparc/sparc.md (load_pcrel_sym<P:mode>): Explain why we
	don't use the "rd %pc" instruction on v9 for PIC register loads.

2012-02-20  Aldy Hernandez  <aldyh@redhat.com>

	PR middle-end/52141
	* trans-mem.c (ipa_tm_scan_irr_block): Error out on GIMPLE_ASM's
	in a transaction safe function.

2012-02-20  Kai Tietz  <ktietz@redhat.com>

	PR target/52238
	* stor-layout.c (place_field): Handle desired_align for
	ms-bitfields, too.

2012-02-20  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/52298
	* tree-vect-stmts.c (vectorizable_store): Properly use
	STMT_VINFO_DR_STEP instead of DR_STEP when vectorizing
	outer loops.
	(vectorizable_load): Likewise.
	* tree-vect-data-refs.c (vect_analyze_data_ref_access):
	Access DR_STEP after ensuring it is not NULL.

2012-02-20  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/52286
	* fold-const.c (fold_binary_loc): For (X & C1) | C2
	optimization use double_int_to_tree instead of build_int_cst_wide,
	rewrite to use double_int vars.

2012-02-20  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>

	PR target/50166
	* acinclude.m4 (gcc_AC_INITFINI_ARRAY): Require gcc_SUN_LD_VERSION.
	Define _start.
	Remove -e 0 from $gcc_cv_ld invocation.
	Only use __GLIBC_PREREQ if defined.
	Enable on Solaris since Solaris 8 patch.
	(gcc_SUN_LD_VERSION): New macro.
	* configure.ac (ld_ver) <*-*-solaris2*>: Refer to
	gcc_SUN_LD_VERSION for version number format.
	* configure: Regenerate.
	* varasm.c (get_elf_initfini_array_priority_section): Set
	SECTION_NOTYPE for non-default priority.
	Use get_section instead of get_unnamed_section to emit
	.init_array/.fini_array with default priority.

2012-02-19  Richard Sandiford  <rdsandiford@googlemail.com>

	* config/mips/mips.c (mips_need_mips16_rdhwr_p): New variable.
	(mips_get_tp): Set it.  Record that __mips16_rdhwr binds locally.
	(mips_start_unique_function, mips_output_mips16_rdhwr)
	(mips_code_end): New functions.
	(TARGET_ASM_CODE_END): Define.

2012-02-19  Richard Sandiford  <rdsandiford@googlemail.com>

	* config/mips/mips.c (mips16_build_call_stub): Add CFI information
	to stubs with non-sibling calls.

2012-02-18  Sandra Loosemore  <sandra@codesourcery.com>

	* doc/invoke.texi (-fira-* options): Copy-edit.
	(ira-* parameters): Copy-edit.

2012-02-17  Sandra Loosemore  <sandra@codesourcery.com>

	* doc/invoke.texi: Minor copy-edits to bring into conformance with
	GCC coding conventions.

2012-02-17  Sandra Loosemore  <sandra@codesourcery.com>

	* doc/invoke.texi: Consistently hyphenate "big-endian"/"little-endian"
	when used as adjectives.

2012-02-16  Sandra Loosemore  <sandra@codesourcery.com>

	* doc/invoke.texi: Clean up "that"/"which" confusion.

2012-02-17  Steven Bosscher  <steven@gcc.gnu.org>

	* system.h: Poison SMALL_REGISTER_CLASSES
	* config/rl78/rl78.h: Replace SMALL_REGISTER_CLASSES with hook.
	* config/rx/rx.h: Remove SMALL_REGISTER_CLASSES.

2012-02-16  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/52285
	* tree-tailcall.c (find_tail_calls): Ignore gimple_clobber_p stmts
	when deciding if a call is a tail call or tail recursion.

2012-02-16  Kai Tietz  <ktietz@redhat.com>

	* config/i386/i386.c (legitimate_pic_address_disp_p): Allow
	interger-constant displacement for UNSPEC_PCREL.

2012-02-16  Jakub Jelinek  <jakub@redhat.com>

	PR rtl-optimization/52208
	* ira-costs.c (scan_one_insn): Don't decrease mem_cost
	for MEMs with REG_EQUIV, if the MEM isn't general_operand.

	PR tree-optimization/52255
	* tree-vect-loop-manip.c (slpeel_tree_peel_loop_to_edge): If
	loop->header has virtual PHI, but exit_e->dest doesn't, add
	virtual PHI to exit_e->dest and adjust all uses after the loop.

	PR debug/52260
	* dwarf2out.c (copy_decls_walk): Fill in *slot before traversing
	children with clone_tree_hash, not after it.

2012-02-16  Iain Sandoe  <iains@gcc.gnu.org>

	* config/darwin.h (ASM_OUTPUT_LABELREF): Add user label prefix for
	extended identifiers.

2012-02-16  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/51929
	* cgraphunit.c (verify_edge_corresponds_to_fndecl): If node is
	a same_body_alias, also test whether e->callee isn't a former
	or current clone of the decl this is a same body alias of.

	PR translation/52264
	* cgraphunit.c (verify_cgraph_node): Fix a typo.

2012-02-15  Sandra Loosemore  <sandra@codesourcery.com>

	* doc/invoke.texi: Clean up "n-bit/byte/word" modifiers.

2012-02-15  Michael Meissner  <meissner@linux.vnet.ibm.com>

	PR target/52199
	* config/rs6000/rs6000.c (rs6000_expand_vector_init): Use
	force_reg instead of copy_to_reg for better optimization.  Force
	non-register or memory operands into a register.

2012-02-15  Andrew MacLeod  <amacleod@redhat.com>

	* extend.texi: Reserve upper bits of memory model for future use.

2012-01-15  Georg-Johann Lay  <avr@gjlay.de>
	    Anatoly Sokolov <aesok@post.ru>
	    Eric Weddington <eric.weddington@atmel.com>

	PR target/52261
	* config/avr/avr-devices.c (avr_arch_types): Add avrxmega2,
	avrxmega4, avrxmega5, avrxmega6, avrxmega7.
	Rewrite initializers for .macro.
	* config/avr/avr-mcus.def (AVR_MCU): Add known MCUs:
	avrxmega2: atxmega16a4, atxmega16d4, atxmega16x1, atxmega32a4
	atxmega32d4, atxmega32x1.
	avrxmega4: atxmega64a3, atxmega64d3.
	avrxmega5: atxmega64a1, atxmega64a1u.
	avrxmega6: atxmega128a3, atxmega128d3, atxmega192a3, atxmega192d3,
	atxmega256a3, atxmega256a3b, atxmega256a3bu, atxmega256d3.
	avrxmega7: atxmega128a1, atxmega128a1u.
	* config/avr/avr.h (enum avr_arch): Add: ARCH_AVRXMEGA2,
	ARCH_AVRXMEGA4,	ARCH_AVRXMEGA5, ARCH_AVRXMEGA6, ARCH_AVRXMEGA7.
	(struct base_arch_s): Rename reserved to xmega_p.
	Rename reserved2 to have_rampd.
	(AVR_XMEGA): New define.
	(AVR_HAVE_RAMPD, AVR_HAVE_RAMPX, AVR_HAVE_RAMPY): New defines.
	(AVR_HAVE_RAMPZ): Change definition to fit xmega.
	* config/avr/predicates.md (io_address_operand): Take into
	account SFR offset.
	(low_io_address_operand): Ditto.
	(high_io_address_operand): Ditto.
	* config/avr/avr.md (isa): Add alternatives no_xmega, xmega.
	(enabled, movhi_sp_r): Use them.
	* config/avr/avr-c.c (avr_cpu_cpp_builtins): Use
	cpp_define_formatted to built-in define __AVR_ARCH__.
	(__AVR_XMEGA__): New built-in define.
	(__AVR_HAVE_RAMPD__): New built-in define.
	(__AVR_HAVE_RAMPX__): New built-in define.
	(__AVR_HAVE_RAMPY__): New built-in define.
	(__AVR_HAVE_RAMPZ__): Change condition when to built-in define it.

	* config/avr/avr.c (avr_addr_t): Add ccp, rampd, rampx, rampy.
	(avr_option_override): Initialize them.
	(sreg_rtx, rampd_rtx, rampx_rtx, rampy_rtx): New GTY rtx.
	(avr_init_expanders): Initialize them. No more block several calls.
	(emit_push_sfr): New static function.
	(avr_prologue_setup_frame): Use it to push SREG, RAMPD/X/Y/Z as needed.
	Handle AVR_XMEGA.
	(expand_epilogue): Handle AVR_XMEGA. Pop RAMPD/X/Y/Z as needed.
	(avr_print_operand): Print addreeses as symbols for
	RAMPX, RAMPY, RAMPD, CCP.
	(output_movhi): Handle AVR_XMEGA when writing to SP.
	(avr_out_movhi_mr_r_xmega): New static function.
	(out_movhi_mr_r): Forward to avr_out_movhi_mr_r_xmega for AVR_XMEGA.
	(avr_file_start): Print symbol defines for __RAMPX__,  __RAMPY__,
	__RAMPD__,  __CCP__ as needed.

	* config/avr/multilib.h: Regenerate.
	* config/avr/t-multilib: Regenerate.
	* config/avr/avr-tables.opt: Regenerate.

2012-02-15  Tobias Grosser <grosser@fim.uni-passau.de>

	PR tree-optimization/50561
	* graphite-flattening.c (lst_project_loop): Do not
	remove old scattering dimensions after flattening.
	(lst_do_flatten): Likewise.

2012-02-15  Georg-Johann Lay  <avr@gjlay.de>

	* doc/extend.texi (AVR Built-in Functions): Remove doc for
	__builtin_avr_map8, __builtin_avr_map16.
	Document __builtin_avr_insert_bits.

	* config/avr/avr.md (map_bitsqi, map_bitshi): Remove.
	(insert_bits): New insn.
	(adjust_len.map_bits): Rename to insert_bits.
	(UNSPEC_MAP_BITS): Rename to UNSPEC_INSERT_BITS.
	* avr-protos.h (avr_out_map_bits): Remove.
	(avr_out_insert_bits, avr_has_nibble_0xf): New.
	* config/avr/constraints.md (Cxf,C0f): New.
	* config/avr/avr.c (avr_cpu_cpp_builtins): Remove built-in
	defines __BUILTIN_AVR_MAP8, __BUILTIN_AVR_MAP16.
	New built-in define __BUILTIN_AVR_INSERT_BITS.
	* config/avr/avr.c (TARGET_FOLD_BUILTIN): New define.
	(enum avr_builtin_id): Add AVR_BUILTIN_INSERT_BITS.
	(avr_move_bits): Rewrite.
	(avr_fold_builtin, avr_map_metric, avr_map_decompose): New static
	functions.
	(avr_map_op_t): New typedef.
	(avr_map_op): New static variable.
	(avr_out_insert_bits, avr_has_nibble_0xf): New functions.
	(adjust_insn_length): Handle ADJUST_LEN_INSERT_BITS.
	(avr_init_builtins): Add definition for __builtin_avr_insert_bits.
	(bdesc_3arg, avr_expand_triop_builtin): New.
	(avr_expand_builtin): Use them. And handle AVR_BUILTIN_INSERT_BITS.
	(avr_revert_map, avr_swap_map, avr_id_map, avr_sig_map): Remove.
	(avr_map_hamming_byte, avr_map_hamming_nonstrict): Remove.
	(avr_map_equal_p, avr_map_sig_p): Remove.
	(avr_out_swap_bits, avr_out_revert_bits, avr_out_map_bits): Remove.
	(bdesc_2arg): Remove AVR_BUILTIN_MAP8, AVR_BUILTIN_MAP16.
	(adjust_insn_length): Remove handling for ADJUST_LEN_MAP_BITS.
	(enum avr_builtin_id): Remove AVR_BUILTIN_MAP8, AVR_BUILTIN_MAP16.
	(avr_init_builtins): Remove __builtin_avr_map8, __builtin_avr_map16.
	(avr_expand_builtin): Remove AVR_BUILTIN_MAP8, AVR_BUILTIN_MAP16.

2012-02-14  Bernd Schmidt  <bernds@codesourcery.com>

	* config/c6x/c6x.md (reserve_cycles): New attribute.
	* config/c6x/c6x.c (c6x_sched_reorder_1): Ensure insns we predicate
	don't reserve functional units after the branch occurs.

2012-02-14  Aldy Hernandez  <aldyh@redhat.com>

	PR middle-end/52142
	* ipa-inline.c (can_inline_edge_p): Do not inline tm_pure
	functions into non-tm_pure functions.

2012-02-14  Eric Botcazou  <ebotcazou@adacore.com>

	PR lto/52178
	* gimple.c (iterative_hash_gimple_type): Use RECORD_OR_UNION_TYPE_P.
	(iterative_hash_canonical_type): Likewise.
	* tree-ssa-pre.c (fini_pre): Clean up the CFG only after purging all
	the dead edges.

2012-02-14  Bernd Schmidt  <bernds@codesourcery.com>

	* haifa-sched.c (prune_ready_list): Ensure that if there is a
	sched-group insn, it either remains alone or the entire list is pruned.

2012-02-14  Jonathan Wakely  <jwakely.gcc@gmail.com>

	* doc/install.texi (Prerequisites): Fix grammar.
	(Configuration): Likewise.

2012-02-14  Jonathan Wakely  <jwakely.gcc@gmail.com>

	* doc/install.texi (Prerequisites): Suggest building GMP, MPFR and
	MPC as part of GCC before describing configuring with --with-gmp etc.
	(Installing GCC: Configuration): --with-gmp etc. aren't needed if
	sources are present.

2012-02-14  Jakub Jelinek  <jakub@redhat.com>

	PR debug/51950
	* dwarf2out.c (clone_tree_hash): New function.
	(copy_decls_walk): Use it instead of clone_tree.

2012-02-14  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/52244
	PR tree-optimization/51528
	* tree-sra.c (analyze_access_subtree): Only create INTEGER_TYPE
	replacements for integral types.

2012-02-14  Walter Lee  <walt@tilera.com>

	* config.gcc: Handle tilegx and tilepro.
	* configure.ac (gcc_cv_as_dwarf2_debug_line): Enable test for
	tilegx and tilepro.
	Add HAVE_AS_TLS check for tilegx and tilepro.
	* configure: Regenerate.
	* doc/contrib.texi: Add Mat Hostetter and self.
	* doc/extend.texi (TILE-Gx Built-in Functions): New node.
	Document instruction intrinsics and network accessing intrinsics.
	(TILEPro Built-in Functions): New node.  Document instruction
	intrinsics and network accessing intrinsics.
	* doc/install.texi (Specific, tilegx-*-linux*): Document it.
	(Specific, tilepro-*-linux*): Likewise.
	* doc/invoke.texi (TILE-Gx Options): New section.
	(TILEPro Options): New section.
	* doc/md.texi (TILE-Gx): New section.
	(TILEPro): New section.
	* common/config/tilegx/tilegx-common.c: New file.
	* common/config/tilepro/tilepro-common.c: New file.
	* config/tilegx/constraints.md: New file.
	* config/tilegx/linux.h: New file.
	* config/tilegx/mul-tables.c: New file.
	* config/tilegx/predicates.md: New file.
	* config/tilegx/sync.md: New file.
	* config/tilegx/t-tilegx: New file.
	* config/tilegx/tilegx-builtins.h: New file.
	* config/tilegx/tilegx-c.c: New file.
	* config/tilegx/tilegx-generic.md: New file.
	* config/tilegx/tilegx-modes.def: New file.
	* config/tilegx/tilegx-multiply.h: New file.
	* config/tilegx/tilegx-protos.h: New file.
	* config/tilegx/tilegx.c: New file.
	* config/tilegx/tilegx.h: New file.
	* config/tilegx/tilegx.md: New file.
	* config/tilegx/tilegx.opt: New file.
	* config/tilepro/constraints.md: New file.
	* config/tilepro/gen-mul-tables.cc: New file.
	* config/tilepro/linux.h: New file.
	* config/tilepro/mul-tables.c: New file.
	* config/tilepro/predicates.md: New file.
	* config/tilepro/t-tilepro: New file.
	* config/tilepro/tilepro-builtins.h: New file.
	* config/tilepro/tilepro-c.c: New file.
	* config/tilepro/tilepro-generic.md: New file.
	* config/tilepro/tilepro-modes.def: New file.
	* config/tilepro/tilepro-multiply.h: New file.
	* config/tilepro/tilepro-protos.h: New file.
	* config/tilepro/tilepro.c: New file.
	* config/tilepro/tilepro.h: New file.
	* config/tilepro/tilepro.md: New file.
	* config/tilepro/tilepro.opt: New file.

2012-02-14  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/52210
	* tree-vect-slp.c (vect_get_and_check_slp_defs): Call
	vect_model_simple_cost with two entry vect_def_type array instead
	of an address of dt.

2012-02-14  Richard Guenther  <rguenther@suse.de>

	PR lto/52178
	* tree-streamer-in.c (lto_input_ts_field_decl_tree_pointers):
	Do not stream DECL_QUALIFIER.
	* tree-streamer-out.c (write_ts_field_decl_tree_pointers): Likewise.
	* tree.c (free_lang_data_in_decl): Free DECL_QUALIFIER.
	(find_decls_types_r): Do not walk DECL_QUALIFIER.

2012-02-14  Jakub Jelinek  <jakub@redhat.com>

	PR c/52181
	* c-decl.c (merge_decls): Copy DECL_USER_ALIGN bit from olddecl to
	newdecl.

2012-02-13  Jakub Jelinek  <jakub@redhat.com>

	PR bootstrap/52172
	* cselib.h (cselib_subst_to_values_from_insn): New prototype.
	* cselib.c (cselib_subst_to_values_from_insn): New function.
	* sched-deps.c (add_insn_mem_dependence,
	sched_analyze_1, sched_analyze_2): Use it.

2012-02-13  Jan Hubicka  <jh@suse.cz>

	PR middle-end/52214
	* predict.c (predict_paths_for_bb): Fix thinko in prevoius patch.

2012-02-13  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc.c (LINK_COMMAND_SPEC): Deal with -fgnu-tm.
	(GTM_SELF_SPECS): Define if not already defined.
	(driver_self_specs): Add GTM_SELF_SPECS.
	* config/darwin.h (LINK_COMMAND_SPEC_A): Deal with -fgnu-tm.
	(GTM_SELF_SPECS): Define.
	* config/i386/cygwin.h (GTM_SELF_SPECS): Likewise.
	* config/i386/mingw32.h (GTM_SELF_SPECS): Likewise.

2012-02-13  Jakub Jelinek  <jakub@redhat.com>

	* cselib.c (expand_loc): Return sp, fp, hfp or cfa base reg right
	away if seen.

	* cselib.c (dump_cselib_val): Don't assume l->setting_insn is non-NULL.

	PR middle-end/52230
	* omp-low.c (expand_omp_for): If a static schedule without chunk size
	has NULL region->cont, force fd.chunk_size to be integer_zero_node.

2012-02-13  Andrew MacLeod  <amacleod@redhat.com>

	PR c/52190
	* doc/extend.texi : Fix another __atomic_compare_exchange typo.

2012-02-13  Richard Guenther  <rguenther@suse.de>

	PR translation/52211
	* passes.c (enable_disable_pass): Fix typo.

2012-02-13  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/52209
	* expr.c (expand_expr_real_2) <case BIT_NOT_EXPR>: Only expand using
	XOR for reduce_bit_field if type is unsigned.

2012-02-12  Eric Botcazou  <ebotcazou@adacore.com>

	* config/sparc/sparc.h (CANNOT_CHANGE_MODE_CLASS): In 64-bit mode,
	disallow changes from SFmode to mode with different size in FP regs.

2012-02-12  Robert Millan  <rmh@gnu.org>
	    Gerald Pfeifer <gerald@pfeifer.com>

	* ginclude/stddef.h [__FreeBSD_kernel__] (__size_t): Do not define.
	Tweak comment.

2012-02-11  Richard Sandiford  <rdsandiford@googlemail.com>

	PR rtl-optimization/52175
	* reorg.c (fill_slots_from_thread): Don't apply add/sub optimization
	to frame-related instructions.

2012-02-10  Jason Merrill  <jason@redhat.com>

	PR c++/51910
	* tlink.c (demangled_hash_entry): Change mangled to a VEC.
	(demangle_new_symbols): Fill it.
	(scan_linker_output): Walk it.
	(start_tweaking): Split out from scan_linker_output.
	(maybe_tweak): Update sym->chosen.
	* Makefile.in (COLLECT2_OBJS): Add vec.o and gcc-none.o

2012-02-11  Jakub Jelinek  <jakub@redhat.com>

	PR debug/52132
	* reg-stack.c (subst_stack_regs_in_debug_insn): Don't use get_true_reg.

2012-02-11  Uros Bizjak  <ubizjak@gmail.com>

	* compare-elim.c (find_comparisons_in_bb): Eliminate only compares
	having the same mode as previous compare.

2012-02-10  Eric Botcazou  <ebotcazou@adacore.com>

	* config/sparc/sparc.c (sparc_flat_expand_prologue): Use emit_use.
	* config/sparc/sparc.md (UNSPECV_GOTO): Delete.
	(nonlocal_goto_internal): Likewise.
	(nonlocal_goto): Emit a use and an indirect jump directly.

2012-02-10  Andrew MacLeod  <amacleod@redhat.com>

	PR c/52190
	* doc/extend.texi : Update comments for __atomic_compare_exchange and
	__atomic_{is,always}_lock_free.

2012-02-10  Uros Bizjak  <ubizjak@gmail.com>

	PR target/52146
	* config/i386/i386.c (ix86_legitimate_address_p): Disallow
	negative constant address for TARGET_X32.

2012-02-10  Richard Henderson  <rth@redhat.com>

	* tree-ssa-dce.c (propagate_necessity): Handle GIMPLE_TRANSACTION.
	* tree-ssa-operands.c (parse_ssa_operands): Add virtual operands
	for GIMPLE_TRANSACTION.  Tidy if's into a switch.

2012-02-10  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
	    Ira Rosen  <irar@il.ibm.com>

	PR tree-optimization/50031
	* targhooks.c (default_builtin_vectorization_cost): Handle
	vec_promote_demote.
	* target.h (enum vect_cost_for_stmt): Add vec_promote_demote.
	* tree-vect-loop.c (vect_get_single_scalar_iteraion_cost): Handle
	all types of reduction and pattern statements.
	(vect_estimate_min_profitable_iters): Likewise.
	* tree-vect-stmts.c (vect_model_promotion_demotion_cost): New function.
	(vect_get_load_cost): Use vec_perm for permutations; add dump logic
	for explicit realigns.
	(vectorizable_conversion): Call vect_model_promotion_demotion_cost.
	* config/spu/spu.c (spu_builtin_vectorization_cost): Handle
	vec_promote_demote.
	* config/i386/i386.c (ix86_builtin_vectorization_cost): Likewise.
	* config/rs6000/rs6000.c (rs6000_builtin_vectorization_cost): Update
	vec_perm for VSX and handle vec_promote_demote.

2012-02-10  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/52177
	* builtins.c (fold_builtin_atomic_always_lock_free,
	expand_builtin_atomic_always_lock_free,
	fold_builtin_atomic_is_lock_free, expand_builtin_atomic_is_lock_free):
	Return and/or test boolean_true_node/boolean_false_node instead of
	integer_one_node/integer_zero_node.

2012-02-10  Jan Hubicka  <jh@suse.cz>

	PR middle-end/48600
	* predict.c (predict_paths_for_bb): Prevent looping.
	(predict_paths_leading_to_edge, predict_paths_leading_to): Update.

2012-02-10  Roman Zhuykov  <zhroma@ispras.ru>

	* config/arm/arm.c (output_move_double): In one case properly
	count number of instructions that will be emitted.

2012-02-10  Richard Guenther  <rguenther@suse.de>

	PR translation/52193
	* cgraphunit.c (cgraph_mark_functions_to_output): Fix typo.

2012-02-09  Peter Bergner  <bergner@vnet.ibm.com>

	PR middle-end/52140
	* dojump.c (do_compare_rtx_and_jump): Use SCALAR_FLOAT_MODE_P.

2012-02-09  Jakub Jelinek  <jakub@redhat.com>

	PR debug/52165
	* var-tracking.c (emit_note_insn_var_location): If
	EMIT_NOTE_BEFORE_INSN and insn is NOTE_INSN_CALL_ARG_LOCATION,
	emit it before next non-NOTE_INSN_CALL_ARG_LOCATION
	non-NOTE_DURING_CALL_P insn.

2012-02-09  Bin Cheng  <bin.cheng@arm.com>

	PR middle-end/51867
	* builtins.c (expand_builtin): Don't check DECL_ASSEMBLER_NAME_SET_P.

2012-02-08  Magnus Granberg  <zorry@gentoo.org>

	PR driver/48524
	* gcc.c (switch_matches) Support switches with separated form,
	-D and -U.

2012-02-08  Georg-Johann Lay  <avr@gjlay.de>

	* config/avr/avr.md (SREG_ADDR): Remove constant definition.
	(SP_ADDR): Ditto.
	(RAMPZ_ADDR): Ditto.
	* config/avr/avr.c (avr_addr_t): New typedef.
	(avr_addr): New struct to hold RAM address of SPL, SPH, RAMPZ, SREG.
	(avr_init_expanders): Initialize it.
	(expand_prologue): Use avr_addr instead of RAMPZ_ADDR, SP_ADDR,
	SREG_ADDR.
	(expand_epilogue): Ditto.
	(avr_print_operand): Ditto.
	(avr_file_start): Ditto.
	(avr_emit_movmemhi): Ditto.

2012-02-08  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/46886
	* tree-flow.h (do_while_loop_p): Declare.
	* tree-ssa-loop-ch.c (do_while_loop_p): Export.
	* tree-parloops.c (parallelize_loops): Only parallelize do-while loops.

2012-02-08  Andrew MacLeod  <amacleod@redhat.com>

	* optabs.c (expand_atomic_load): Do not assume compare_and_swap will
	always succeed for integers larger than a native word.

2012-02-08  Richard Guenther  <rguenther@suse.de>

	PR rtl-optimization/52170
	* simplify-rtx.c (simplify_plus_minus): Use CONSTM1_RTX to
	properly handle integer vector modes.

2012-02-08  Jakub Jelinek  <jakub@redhat.com>

	PR gcov-profile/52150
	* coverage.c: Include target.h.
	(build_var): Call targetm.strip_name_encoding on the assembler name.
	Change one _ into . or $ if the target allows it.
	* Makefile.in (coverage.o): Depend on $(TARGET_H).

	PR rtl-optimization/52139
	* cfgrtl.c (cfg_layout_merge_blocks): If BB_END
	is a BARRIER after emit_insn_after_noloc, move BB_END
	to the last non-BARRIER insn before it.

2012-02-07  Richard Sandiford  <rdsandiford@googlemail.com>

	PR middle-end/24306
	* config/mips/mips.c (mips_std_gimplify_va_arg_expr): New function.
	(mips_gimplify_va_arg_expr): Call it instead of
	std_gimplify_va_arg_expr.

2012-02-07  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000.c (rs6000_trampoline_init): Fix error
	message for -mno-pointers-to-nested-function.

2012-02-07  Eric Botcazou  <ebotcazou@adacore.com>

	PR middle-end/51994
	* expr.c (get_inner_reference): If there is an offset, add a negative
	bit position to it (if any).

2012-02-07  Jakub Jelinek  <jakub@redhat.com>

	PR rtl-optimization/52060
	* combine.c (try_combine): Add i0src_copy and i0src_copy2 variables,
	copy i1src to i1src_copy whenever added_sets_2 && i1_feeds_i2_n already
	before i1dest -> i1src substitution in newpat, copy i0src to i0src_copy
	and/or i0src_copy2 when needed.

2012-02-07  Jakub Jelinek  <jakub@redhat.com>

	* gcc.c (main): Don't look for lto-wrapper or lto-wrapper
	or LTOPLUGINSONAME if have_c.

	* config/freebsd-spec.h: Add comment about what macros can be defined
	in this header.
	(LINK_EH_SPEC, LINK_SSP_SPEC, USE_LD_AS_NEEDED): Don't define here.
	* config/freebsd.h (LINK_EH_SPEC, LINK_SSP_SPEC, USE_LD_AS_NEEDED): But
	here instead.

2012-02-07  Richard Guenther  <rguenther@suse.de>

	* gimple-pretty-print.c (dump_gimple_phi): Avoid excessive
	newline in -alias dumps.

2012-02-07  Kai Tietz  <ktietz@redhat.com>
	    Dave Korn  <dave.korn.cygwin@gmail.com>

	PR target/40068
	* config/i386/winnt-cxx.c (i386_pe_adjust_class_at_definition):
	Take care that typinfo gets dllexport-attribute.

2012-02-07  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/52074
	* expr.c (expand_expr_addr_expr_1): For CONSTANT_CLASS_P or CONST_DECL
	if modifier < EXPAND_SUM call force_operand on the result.

2012-02-07  Joern Rennecke  <joern.rennecke@embecosm.com>

	* config/epiphany/epiphany.h (ASM_DECLARE_FUNCTION_SIZE): Redefine,
	adding __forwarder_dst__ prefix if a forwarder_section attribute is
	present.
	(epiphany_function_type): Replace types for specific interrupts with
	EPIPHANY_FUNCTION_INTERRUPT.
	(EPIPHANY_INTERRUPT_P): Update.
	* config/epiphany/epiphany.c (epiphany_handle_forwarder_attribute):
	New static function.
	(epiphany_attribute_table) <interrupt>: min_len is 0, max_len is 9.
	<disinterrupt>: Affects type identity.
	(epiphany_handle_interrupt_attribute): Handle variable number of
	arguments.
	(epiphany_compute_function_type): Update for new
	epiphany_function_type definition.
	(epiphany_expand_prologue): Don't save (reg:DI GPR_0) for interrupt
	handlers with a longcall forwarder.
	(epiphany_start_function): Handle multiple interrupt arguments and/or
	forwarder_section attribute.

	* config/epiphany/epiphany.h (LIB_SPEC): Link libc again after
	libgloss.

2012-02-07  Alan Modra  <amodra@gmail.com>

	PR target/52107
	* config/rs6000/rs6000.c (rs6000_emit_move): Don't create DImode
	subregs of TFmode.

2012-02-06  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>

	PR tree-optimization/50969
	* tree-vect-stmts.c (vect_model_store_cost): Correct statement cost to
	use vec_perm rather than vector_stmt.
	(vect_model_load_cost): Likewise.
	* config/i386/i386.c (ix86_builtin_vectorization_cost): Change cost of
	vec_perm to be the same as other vector statements.
	* config/rs6000/rs6000.c (rs6000_builtin_vectorization_cost): Revise
	cost of vec_perm for TARGET_VSX.

2012-02-06  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/52115
	* tree-sra.c (access_has_replacements_p): New function.
	(sra_modify_assign): Use it to decide whether a use is uninitialized.

2012-02-06  Patrick Marlier  <patrick.marlier@gmail.com>

	PR middle-end/52047
	* trans-mem.c (expand_call_tm): Add an assertion.
	* calls.c (flags_from_decl_or_type): Add ECF_TM_PURE to 'no vops'
	functions.

2012-02-06  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/50955
	* tree-ssa-loop-ivopts.c (get_computation_cost_at): Artificially
	raise cost of expressions that replace an address with an
	expression based on a different pointer.

2012-02-06  Jakub Jelinek  <jakub@redhat.com>

	PR target/52129
	* calls.c (mem_overlaps_already_clobbered_arg_p): If val is
	CONST_INT_P, subtract resp. add crtl->args.pretend_args_size to it.

2012-02-06  Jonathan Wakely  <jwakely.gcc@gmail.com>

	PR c++/48680
	* doc/invoke.texi (C++ Dialect Options): Use @option markup for
	-Weffc++ and specify guidelines come from second edition.

2012-02-05  Richard Sandiford  <rdsandiford@googlemail.com>

	* config/mips/mips.md (sibcall_internal, sibcall_value_internal)
	(sibcall_value_multiple_internal, call_split, call_internal_direct)
	(call_direct_split, call_value_split, call_value_internal_direct)
	(call_value_direct_split, call_value_multiple_split): Use jal and
	jal_macro attributes.

2012-02-05  Richard Sandiford  <rdsandiford@googlemail.com>

	* reload1.c (reload_regs_reach_end_p): Replace with...
	(reload_reg_rtx_reaches_end_p): ...this function.
	(new_spill_reg_store): Update commentary.
	(emit_input_reload_insns): Don't clear new_spill_reg_store here.
	(emit_output_reload_insns): Check reload_reg_rtx_reaches_end_p
	before setting new_spill_reg_store.
	(emit_reload_insns): Use a separate loop to clear new_spill_reg_store.
	Use reload_reg_rtx_reaches_end_p instead of reload_regs_reach_end_p.
	Also use reload_reg_rtx_reaches_end_p when reading new_spill_reg_store
	for non-spill reload registers.

2012-02-05  Ira Rosen  <irar@il.ibm.com>

	PR tree-optimization/52091
	* tree-vectorizer.h (vect_is_simple_use): Add an argument.
	(vect_is_simple_use_1): Likewise.
	* tree-vect-loop.c (vectorizable_reduction): Update calls
	to vect_is_simple_use_1 and vect_is_simple_use.
	(vectorizable_live_operation): Likewise.
	* tree-vect-patterns.c (widened_name_p,
	vect_recog_vector_vector_shift_pattern, check_bool_pattern): Likewise.
	* tree-vect-stmts.c (process_use, vect_get_vec_def_for_operand,
	vectorizable_call, vectorizable_conversion, vectorizable_assignment,
	vectorizable_shift,vectorizable_operation, vectorizable_store,
	vectorizable_load): Likewise.
	(vect_is_simple_cond): Add an argument, pass it to
	vect_is_simple_use_1.
	(vectorizable_condition): Update calls to vect_is_simple_cond,
	vect_is_simple_use.
	(vect_is_simple_use): Add an argument, the statement in which
	OPERAND is used.  Check that if OPERAND's def stmt is a double
	reduction phi node, the use is a phi node too.
	(vect_is_simple_use_1): Add an argument, pass it to
	vect_is_simple_use.
	* tree-vect-slp.c (vect_get_and_check_slp_defs): Update a call
	to vect_is_simple_use.

2012-02-04  Jakub Jelinek  <jakub@redhat.com>

	PR rtl-optimization/52095
	* modulo-sched.c (dump_insn_locator): New function.
	(loop_canon_p, sms_schedule): Use it.

	PR rtl-optimization/52113
	* lower-subreg.c (decompose_multiword_subregs): Call recog_memoized
	even for decomposable shift/zext insns.

2012-02-03  Jakub Jelinek  <jakub@redhat.com>
	    Zdenek Dvorak  <ook@ucw.cz>

	PR rtl-optimization/52092
	* loop-unswitch.c (unswitch_single_loop): Call copy_rtx_if_shared
	on get_iv_value result.

2012-02-02  Andrew Pinski  <apinski@cavium.com>

	PR middle-end/47982
	PR middle-end/43967
	* doc/libgcc.texi (__udivmoddi4/__udivmodti4): Fix documentation typo.

2012-02-02  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/48071
	* diagnostic.c (diagnostic_finish): Remove trailing newlines.

2012-02-02  Vladimir Makarov  <vmakarov@redhat.com>

	PR rtl-optimization/49800
	* haifa-sched.c (sched_init): Call regstat_init_n_sets_and_refs.
	(sched_finish): Call regstat_free_n_sets_and_refs.

2012-02-02  Jia Liu  <proljc@gmail.com>

	* config/mips/mips-dspr2.md (mips_prepend): Mask operand 3 rather
	than operand 2.

2012-02-02  Jan Hubicka  <jh@suse.cz>
	    Tom de Vries  <tom@codesourcery.com>

	PR middle-end/51998
	* cgraphunit.c (cgraph_analyze_function): Break cyclic aliases.
	* varpool.c (varpool_analyze_pending_decls): Likewise.

2012-02-02  Sumanth G <sumanth.gundapaneni@kpitcummins.com>
	    Jayant R Sonar <jayant.sonar@kpitcummins.com>

	* config.gcc: Add cr16-* support.

	* doc/extend.texi: Document cr16 extensions.
	* doc/install.texi: Document cr16 install.
	* doc/invoke.texi: Document cr16 options.
	* doc/md.texi: Document cr16 constraints.

	* common/config/cr16/cr16-common.c: New file.
	* config/cr16/cr16.c: New file.
	* config/cr16/cr16.h: New file.
	* config/cr16/cr16.md: New file.
	* config/cr16/cr16.opt: New file.
	* config/cr16/cr16-protos.h: New file.
	* config/cr16/predicates.md: New file.
	* config/cr16/constraints.md: New file.
	* config/cr16/t-cr16: New file.

2012-02-02  Jakub Jelinek  <jakub@redhat.com>

	PR target/52086
	* config/i386/i386.md (*addqi_2 peephole with SImode addition): Check
	that operands[2] is either immediate, or q_regs_operand.

	PR tree-optimization/52073
	* tree-vect-stmts.c (vect_mark_relevant): When checking uses of
	a pattern stmt for pattern uses, ignore uses outside of the loop.

2012-02-01  Georg-Johann Lay  <avr@gjlay.de>

	* config/avr/avr.c: Resolve all AS1 and AS2 macros.
	* config/avr/avr.h (AS1, AS2, AS2C, AS3): Remove.
	(OUT_AS1, OUT_AS2): Remove.

2012-02-01  Georg-Johann Lay  <avr@gjlay.de>

	PR rtl-optimization/51374
	* combine.c (can_combine_p): Don't allow volatile_refs_p insns
	to cross other volatile_refs_p insns.

2012-02-01  Richard Guenther  <rguenther@suse.de>

	* doc/invoke.texi (fno-inline): Clarify documentation.
	(finline-small-functions): Likewise.
	(finline-functions): Likewise.
	* common.opt (finline): Adjust comment and documentation.
	(finline-small-functions): Clarify documentation.
	(finline-functions): Likewise.
	(finline-functions-called-once): Likewise.

2012-02-01  Tristan Gingold  <gingold@adacore.com>

	* c-typeck.c (composite_type): Keep mode for pointers.

2012-01-31  Richard Sandiford  <rdsandiford@googlemail.com>

	* function.h (regno_reg_rtx): Adjust comment.
	* reginfo.c (init_reg_modes_target): Only use the previous mode
	if it fits within one register.  Remove MIPS comment.

2012-01-31  Jakub Jelinek  <jakub@redhat.com>

	PR bootstrap/52058
	* combine.c (do_SUBST_LINK, SUBST_LINK): Guard with #ifndef HAVE_cc0.

2012-01-31  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>

	* config/s390/s390.md ("*ashr<mode>3_and"): Add missing z196 flag
	to srak instruction.

2012-01-31  Matthew Gretton-Dann  <matthew.gretton-dann@arm.com>

	* config/arm/thumb2.md (thumb2_mov_notscc): Use MVN for true condition.

2012-01-31  Jakub Jelinek  <jakub@redhat.com>

	PR bootstrap/52041
	PR bootstrap/52039
	PR target/51974
	* ipa-prop.c (detect_type_change_1): Call ao_ref_init.

2012-01-31  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/51528
	* tree-sra.c (sra_modify_assign): Avoid copy-in/out for aggregate
	assigns.

2012-01-31  Jakub Jelinek  <jakub@redhat.com>

	PR bootstrap/52041
	PR bootstrap/52039
	PR target/51974
	* ree.c (add_removable_extension): Change def_map argument
	to unsigned *, store in def_map 1 + offset into *insn_list vector
	instead of pointers into the vector.
	(find_removable_extensions): Adjust caller.

2012-01-30  Georg-Johann Lay  <avr@gjlay.de>

	* config/avr/avr.md: Resolve all AS1 and AS2 macros.
	Transform all "* quoted-c-code" to { c-code }.
	Remove redundant test for "optimize" in combine patterns.
	Move (include "avr-dimode.md") to end of file.

2012-01-30  Bin Cheng  <bin.cheng@arm.com>

	PR target/51835
	* config/arm/arm.c (arm_libcall_uses_aapcs_base): Use correct ABI
	for __aeabi_d2iz/__aeabi_d2uiz with hard-float.

2012-01-30  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/52028
	* tree-loop-distribution.c (ldist_gen): Properly update
	virtual SSA form.

2012-01-30  Jakub Jelinek  <jakub@redhat.com>

	PR debug/52027
	* dwarf2out.c (dwarf2out_switch_text_section): Don't call
	set_cur_line_info_table if not emitting debug info.

	PR tree-optimization/52046
	* tree-vect-patterns.c (check_bool_pattern): Give up if
	a comparison could throw.

	PR debug/52048
	* tree-ssa-tail-merge.c (local_def): Ignore debug uses.

2012-01-30  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/52045
	* tree-optimize.c (execute_cleanup_cfg_post_optimizing): Update
	SSA form if cfgcleanup did anything.

2012-01-30  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/52045
	* ipa-inline-transform.c (inline_transform): Call execute_fixup_cfg
	before computing final todo.

2012-01-30  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/51528
	* tree-sra.c (sra_modify_assign): Re-factor in preparation
	for PR51528 fix.

2012-01-30  Paolo Bonzini  <bonzini@gnu.org>

	* df-problems.c (df_kill_notes): Check that the use refers
	to the note under examination.

2012-01-30  Eric Botcazou  <ebotcazou@adacore.com>

	PR target/51920
	* config/sparc/sparc.c (vector_init_fpmerge): Remove INNER_MODE
	parameter and use short-lived pseudos.
	(vector_init_faligndata): Remove INNER_MODE parameter and use loop.
	(sparc_expand_vector_init): Const-ify local variables and adjust
	calls to above functions.

2012-01-30  Georg-Johann Lay  <avr@gjlay.de>

	* config/avr/avr.c (out_movqi_mr_r): Fix length computation.

2012-01-29  Sandra Loosemore  <sandra@codesourcery.com>

	* doc/invoke.texi: Make usage of "compile time" and
	"run time"/"runtime" consistent throughout the file.

2012-01-29  Uros Bizjak  <ubizjak@gmail.com>

	* config/alpha/alpha.c (alpha_option_override): Default to
	full IEEE compliance mode for Go language.

2012-01-29  Tijl Coosemans  <tijl@coosemans.org>

	* config/freebsd-spec.h [TARGET_LIBC_PROVIDES_SSP]
	(LINK_SSP_SPEC): Define.

2012-01-28  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>

	PR target/51871
	* config/pa/pa.c (pa_return_addr_rtx): Add support for PA2.0 export
	stubs.

2012-01-28  Sandra Loosemore  <sandra@codesourcery.com>

	* doc/invoke.texi: Correct hyphenation of "floating point",
	"double precision", and related terminology throughout the file.

2012-01-28  Jakub Jelinek  <jakub@redhat.com>

	PR target/52006
	* config/arm/arm.md (pic_add_dot_plus_eight peephole2): Use
	arm_general_register_operand predicate for operand 2 instead of
	register_operand.

2012-01-27  Ian Lance Taylor  <iant@google.com>

	PR go/47656
	* builtins.def (BUILT_IN_INIT_HEAP_TRAMPOLINE): Define.
	* builtins.c (expand_builtin_init_trampoline): Add onstack
	parameter.  Change caller.
	(expand_builtin): Handle BUILT_IN_INIT_HEAP_TRAMPOLINE.
	* tree.c (build_common_builtin_nodes): Declare
	__builtin_init_heap_trampoline.

2012-01-27  Georg-Johann Lay  <avr@gjlay.de>

	* config/avr/avr-protos.h (lpm_reg_rtx, lpm_addr_reg_rtx,
	tmp_reg_rtx, zero_reg_rtx, all_regs_rtx, rampz_rtx): Make global.
	* config/avr/avr.c: Ditto.
	(avr_regnames): Remove because unused.
	* config/avr/avr.md (*cpse.ne): New peephole.
	(*cpse.eq): New peephole from former cpse peepholes.

2012-01-27  Michael Eager  <eager@eagercon.com>

	* config/microblaze.c (microblaze_emit_compare): Correct
	test after pcmp instruction.

2012-01-27  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/52020
	* tree-sra.c (sra_modify_assign): Do not transform clobbers.

2012-01-27  Richard Guenther  <rguenther@suse.de>

	* ipa-pure-const.c (check_stmt): Clobbers do not make a
	function non-const/pure.

2012-01-27  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/50444
	* tree-sra.c (build_ref_for_offset): Properly adjust the
	MEM_REF type for unaligned accesses.

2012-01-27  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/50444
	* expr.c (mem_ref_refers_to_non_mem_p): New function.
	(expand_assignment): Use it.  Properly handle misaligned
	bases when expanding stores to component references.
	(expand_expr_real_1): Use mem_ref_refers_to_non_mem_p and
	refactor that case.

2012-01-27  Andrey Belevantsev  <abel@ispras.ru>

	PR middle-end/51389
	* Makefile.in (tree-data-ref.o): Depend on $(PARAMS_H).
	* tree-data-ref.h (find_data_references_in_loop): Remove declaration.
	* tree-data-ref.c (find_data_references_in_loop): Make static.
	(compute_all_dependences): Change return type to bool.  Bail out
	for too many datarefs in a loop.  Move the hunk resetting the data
	dependences vector from ...
	(compute_data_dependences_for_loop): ... here.  Account for
	compute_all_dependences returning false.
	(compute_data_dependences_for_bb): Likewise.
	* params.def (PARAM_LOOP_MAX_DATAREFS_FOR_DATADEPS): New param.
	* doc/invoke.texi (loop-max-datarefs-for-datadeps): Document it.

2012-01-27  Richard Guenther  <rguenther@suse.de>

	PR middle-end/51959
	* expr.c (store_field): Use the alias-set of the scratch memory
	for storing to it.

2012-01-27  Tom de Vries  <tom@codesourcery.com>

	PR tree-optimization/51990
	* tree-ssa-sccvn.c (copy_reference_ops_from_ref): Handle
	WITH_SIZE_EXPR.
	* tree-ssa-pre.c (create_component_ref_by_pieces_1): Same.

2012-01-27  Jakub Jelinek  <jakub@redhat.com>

	PR debug/52001
	* var-tracking.c (reverse_op): Don't add any reverse operation
	if V already has any constant locations.

2012-01-27  Sandra Loosemore  <sandra@codesourcery.com>

	* doc/invoke.texi: Correct usage of "command line" (noun)
	vs "command-line" (adjective) throughout.

2012-01-27  Sandra Loosemore  <sandra@codesourcery.com>

	* doc/invoke.texi (Language Independent Options): Move
	-Wcoverage-mismatch blurb from here....
	(Warning Options): ...to here.

2012-01-27  Peter Bergner  <bergner@vnet.ibm.com>

	* config/rs6000/rs6000.c (rs6000_option_override_internal):
	Set rs6000_always_hint to false for 476.

2012-01-27  Matthias Klose  <doko@ubuntu.com>

	* gcc.c (add_sysrooted_prefix): Remove trailing dir separator from
	  system root.
	* incpath.c (add_standard_paths): Likewise.

2012-01-27  Richard Henderson  <rth@redhat.com>

	* config/m68k/m68k.c (TARGET_ATOMIC_TEST_AND_SET_TRUEVAL): New.
	* config/m68k/sync.md (atomic_test_and_set): Rename from
	sync_test_and_setqi and adjust the operands.
	(atomic_test_and_set_1): Rename from sync_test_and_setqi_1
	and unconditionally enable.

2012-01-27  Richard Henderson  <rth@redhat.com>

	* config/sparc/sparc.c (TARGET_ATOMIC_TEST_AND_SET_TRUEVAL): New.
	* config/sparc/sync.md (atomic_test_and_set): Only handle QImode.
	(ldstub): Rename from ldstubqi.
	(ldstub<I24MODE>): Remove.

2012-01-27  Richard Henderson  <rth@redhat.com>

	* target.def (TARGET_ATOMIC_TEST_AND_SET_TRUEVAL): New.
	* c-cppbuiltin.c (cpp_atomic_builtins): Define
	__GCC_ATOMIC_TEST_AND_SET_TRUEVAL.
	* doc/tm.texi.in (TARGET_ATOMIC_TEST_AND_SET_TRUEVAL): Add doc hook.
	* doc/tm.texi: Rebuild.

2012-01-27  Richard Henderson  <rth@redhat.com>

	* optabs.c (gen_atomic_test_and_set): Remove default.
	(maybe_emit_atomic_test_and_set): Use maybe_expand_insn.

2012-01-26  Jakub Jelinek  <jakub@redhat.com>

	PR rtl-optimization/51978
	* ree.c (make_defs_and_copies_lists): Change set_pat type to const_rtx.
	(combine_reaching_defs): Likewise.
	(struct re_info): Remove.
	(add_removable_extension): Remove x and data arguments,
	add insn, insn_list and def_map.  Use the arguments directly
	instead of using struct re_info.
	(find_removable_extensions): Don't call add_removable_extension
	through note_stores, instead just call it with single_set
	result if non-NULL.
	(find_and_remove_re): Pass curr_cand->expr instead of
	PATTERN (curr_cand->insn) as set_pat argument to combine_reaching_defs.

2012-01-26  Michael Matz  <matz@suse.de>

	PR tree-optimization/46590
	* cfgexpand.c: Revert last change (r183305).
	* gimplify.c (gimplify_bind_expr): Add clobbers for all non-gimple
	regs.
	* tree-eh.c (cleanup_empty_eh): Try to optimize clobbers before
	checking for emptiness.

2012-01-26  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/51895
	* expr.c (expand_expr_real_1): Handle BLKmode MEM_REF of
	non-addressable non-BLKmode base correctly.

2012-01-26  Michael Matz  <matz@suse.de>

	PR tree-optimization/48794
	* tree-eh.c (remove_unreachable_handlers_no_lp): Don't remove
	regions referenced from RESX/EH_DISPATCH.

2012-01-26  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>

	* config/s390/s390.h: Make BRANCH_COST an option.
	* config/s390/s390.opt: New option -mbranch-cost.

2012-01-26  Richard Henderson  <rth@redhat.com>

	Revert 2012-01-24 change:
	* trans-mem.c (requires_barrier): Do not instrument thread local
	variables and emit save/restore for them.

2012-01-25  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/51986
	* sched-deps.c (sched_get_condition_with_rev_uncached): Don't test
	for pat == 0.

2012-01-25  Richard Sandiford  <rdsandiford@googlemail.com>

	* config/mips/mips.c (mips_small_data_pattern_1): Don't process
	ASM_OPERANDS.

2012-01-25  Georg-Johann Lay  <avr@gjlay.de>

	PR target/49868
	Rename __pgm to __flash.
	Rename __pgm1 to __flash1.
	Rename __pgm2 to __flash2.
	Rename __pgm3 to __flash3.
	Rename __pgm4 to __flash4.
	Rename __pgm5 to __flash5.
	Rename __pgmx to __memx.
	* doc/extend.texi (AVR Named Address Spaces)
	Rename address space names as indicated above.
	* config/avr/avr.c (avr_addrspace): Ditto.

	* config/avr/avr-protos.h
	(avr_mem_pgmx_p): Rename to avr_mem_memx_p.
	(avr_mem_pgm_p): Rename to avr_mem_flash_p.
	* config/avr/predicates.md: Ditto.
	* config/avr/avr.c Ditto, and
	(avr_decl_pgmx_p): Rename to avr_decl_memx_p.
	(avr_decl_pgm_p): Rename to avr_decl_flash_p.

	* config/avr/avr.h (ADDR_SPACE_PGM): Rename to ADDR_SPACE_FLASH.
	(ADDR_SPACE_PGM1): Rename to ADDR_SPACE_FLASH1.
	(ADDR_SPACE_PGM2): Rename to ADDR_SPACE_FLASH2.
	(ADDR_SPACE_PGM3): Rename to ADDR_SPACE_FLASH3.
	(ADDR_SPACE_PGM4): Rename to ADDR_SPACE_FLASH4.
	(ADDR_SPACE_PGM5): Rename to ADDR_SPACE_FLASH5.
	(ADDR_SPACE_PGMX): Rename to ADDR_SPACE_MEMX.
	* config/avr/avr.c: Ditto.
	* config/avr/avr.md: Ditto.

2012-01-25  Jason Merrill  <jason@redhat.com>

	PR c++/51992
	* tree.c (find_decls_types_in_node): Walk gimple_call_fntype.

2012-01-25  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/51987
	* tree-data-ref.c (get_references_in_stmt): Handle references in
	non-volatile GIMPLE_ASM.

2012-01-25  Richard Guenther  <rguenther@suse.de>

	* tree-ssa-sccvn.c (vn_reference_eq): Also compare if both
	bases are dereferenced.

2012-01-25  Andrey Belevantsev  <abel@ispras.ru>

	PR rtl-optimization/48374
	* sel-sched-ir.h (get_all_loop_exits): Check for zero successors.

2012-01-25  Andrey Belevantsev  <abel@ispras.ru>

	* tree-predcom.c (tree_predictive_commoning_loop): Bail out when
	compute_data_dependences_for_loop returns false.
	* tree-parloops.c (loop_parallel_p): Likewise.

2012-01-25  Richard Guenther  <rguenther@suse.de>

	* tree.h (get_pointer_alignment_1): Declare.
	* builtins.c (get_pointer_alignment_1): New function.
	(get_pointer_alignment): Use it.

2012-01-25  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>

	PR rtl-optimization/48308
	* combine.c (enum undo_kind): Add UNDO_LINKS.
	(struct undo): Add member l to other_contents and where.
	(do_SUBST_LINK): New.
	(SUBST_LINK): New.
	(try_combine): Handle LOG_LINKS for the dummy i1 case.
	(undo_all): Handle UNDO_LINKS.

2012-01-25  Richard Henderson  <rth@redhat.com>

	* optabs.c (maybe_emit_atomic_test_and_set): Allow non-QImode
	mem inputs.

2012-01-24  Richard Sandiford  <rdsandiford@googlemail.com>

	* optabs.c (gen_atomic_test_and_set): Use each argument.

2012-01-24  Richard Sandiford  <rdsandiford@googlemail.com>

	* config/mips/mips-ps-3d.md (mips_addr_ps, reduc_splus_v2sf)
	(mips_cvt_pw_ps, mips_cvt_ps_pw, mips_mulr_ps, mips_cabs_cond_<fmt>)
	(mips_cabs_cond_4s, mips_cabs_cond_ps, bc1any4t, bc1any4f, bc1any2t)
	(bc1any2f, mips_rsqrt1_<fmt>, mips_rsqrt2_<fmt>, mips_recip1_<fmt>)
	(mips_recip2_<fmt>): Require TARGET_MIPS3D rather than
	TARGET_PAIRED_SINGLE_FLOAT.

2012-01-24  Richard Sandiford  <rdsandiford@googlemail.com>

	* doc/rtl.texi (MEM_IN_STRUCT_P, MEM_SCALAR_P): Delete.
	(in_struct, return_val): Remove MEM documentation.
	* rtl.h (rtx_def): Remove MEM meanings from in_struct and return_val.
	(MEM_IN_STRUCT_P, MEM_SCALAR_P): Delete.
	(MEM_COPY_ATTRIBUTES): Remove references to MEM_IN_STRUCT_P
	and MEM_SCALAR.
	* emit-rtl.c (set_mem_attributes_minus_bitpos): Likewise.
	* cfgexpand.c (add_alias_set_conflicts): Likewise.
	* expr.c (store_field): Likewise.
	* function.c (assign_stack_temp_for_type): Likewise.
	* ifcvt.c (noce_try_cmove_arith): Likewise.
	* reload1.c (reload): Likewise.
	* config/alpha/alpha.c (alpha_set_memflags_1): Likewise.
	(alpha_set_memflags): Likewise.
	* config/m32c/m32c.c (m32c_immd_dbl_mov): Nullify.

2012-01-24  Richard Sandiford  <rdsandiford@googlemail.com>

	* rtl.h (true_dependence, canon_true_dependence): Remove varies
	parameter.
	* alias.c (fixed_scalar_and_varying_struct_p): Delete.
	(true_dependence_1, write_dependence_p, may_alias_p): Don't call it.
	(true_dependence_1, true_dependence, canon_true_dependence): Remove
	varies parameter.
	* cselib.c (cselib_rtx_varies_p): Delete.
	(cselib_invalidate_mem): Update call to canon_true_dependence.
	* dse.c (record_store, check_mem_read_rtx): Likewise.
	(scan_reads_nospill): Likewise.
	* cse.c (check_dependence): Likewise.
	(cse_rtx_varies_p): Delete.
	* expr.c (safe_from_p): Update call to true_dependence.
	* ira.c (validate_equiv_mem_from_store): Likewise.
	(memref_referenced_p): Likewise.
	* postreload-gcse.c (find_mem_conflicts): Likewise.
	* sched-deps.c (sched_analyze_2): Likewise.
	* store-motion.c (load_kills_store): Likewise.
	* config/frv/frv.c (frv_registers_conflict_p_1): Likewise.
	* gcse.c (mems_conflict_for_gcse_p): Likewise.
	(compute_transp): Update call to canon_true_dependence.

2012-01-25  Richard Henderson  <rth@redhat.com>

	* optabs.c (CODE_FOR_atomic_test_and_set): Provide default.
	(maybe_emit_atomic_test_and_set): New.
	(expand_sync_lock_test_and_set): Use it.
	(expand_atomic_test_and_set): Likewise.
	* doc/extend.texi (__atomic_test_and_set): Adjust the docs to match
	the implementation; clarify implementation defined details.
	* doc/md.texi (atomic_test_and_set): Document.

2012-01-25  Richard Henderson  <rth@redhat.com>

	* config/sparc/predicates.md (zero_or_v7_operand): Use match_code.

2012-01-25  Richard Henderson  <rth@redhat.com>

	PR target/51968
	* config/arm/arm.c (neon_split_vcombine): Emit deleted note
	to effect no-op split.

2012-01-24  Aldy Hernandez  <aldyh@redhat.com>

	PR lto/51698
	* builtin-types.def: (BT_CONST_DOUBLE_PTR): New.
	(BT_FN_VOID_PTR_CONST_PTR_SIZE): New.
	(BT_FN_VOID_PTR_INT_SIZE): New.
	(BT_FN_UINT_UINT_VAR): Remove.
	(BT_FN_UINT32_UINT32_VAR): New.
	(BT_FN_DOUBLE_VPTR): Remove.
	(BT_FN_DOUBLE_CONST_DOUBLE_PTR): New.

	* gtm-builtins.def (_ITM_abortTransaction): Set return type to void.
	(_ITM_changeTransactionMode): Same.
	(_ITM_memmoveRtWt): Change return type to void.
	(_ITM_memcpyRtWt): Same.
	(_ITM_memsetW): Same.
	(_ITM_RaRD): Change types to double.
	(_ITM_RD): Same.
	(_ITM_RaWD): Same.
	(_ITM_RfWD): Same.

	* builtins.def (DEF_TM_BUILTIN): Set BOTH_P to true.

2012-01-24  Aldy Hernandez  <aldyh@redhat.com>
	    Patrick Marlier  <patrick.marlier@gmail.com>

	* trans-mem.c (requires_barrier): Do not instrument thread local
	variables and emit save/restore for them.

2012-01-24  Jason Merrill  <jason@redhat.com>

	PR c++/51812
	* cgraphunit.c (cgraph_decide_is_function_needed): Don't always
	output static aliases.

2012-01-24  Jakub Jelinek  <jakub@redhat.com>

	PR driver/47249
	* common.opt (-pie, -shared, pie, shared): Change from Common to
	Driver.
	* gcc.c (display_help): Display help for -pie and -shared.

2012-01-24  Georg-Johann Lay  <avr@gjlay.de>

	PR target/49868
	* doc/extend.texi (AVR Named Address Spaces): Move sample code up.
	Remove note on size/offset limitation.
	(AVR Variable Attributes): Add example how to read data located
	with progmem.  Refer to named address spaces.
	* doc/invoke.texi (AVR Options): Fix typo.

2012-01-24  Richard Guenther  <rguenther@suse.de>

	Forward-port to trunk
	2010-09-21  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/45678
	* expr.c (expand_expr_real_1) <case VIEW_CONVERT_EXPR>: If
	op0 isn't sufficiently aligned and there is movmisalignM
	insn for mode, use it to load op0 into a temporary register.

2012-01-24  Jakub Jelinek  <jakub@redhat.com>

	PR target/51957
	* target.def (const_not_ok_for_debug_p): New hook.
	* doc/tm.texi.in (TARGET_CONST_NOT_OK_FOR_DEBUG_P): New hook
	documentation.
	* doc/tm.texi: Regenerated.
	* dwarf2out.c (const_ok_for_output_1): If
	targetm.const_not_ok_for_debug_p returns true, fail.
	* config/rs6000/rs6000.c (rs6000_const_not_ok_for_debug_p): New
	function.
	(TARGET_CONST_NOT_OK_FOR_DEBUG_P): Redefine.

2012-01-23  Kai Tietz  <ktietz@redhat.com>

	PR target/51900
	* config/i386/predicates.md (symbolic_operand): Allow
	UNSPEC_PCREL as PIC expression for lea.
	* config/i386/winnt.c (i386_pe_binds_local_p): Reworked.
	* config/i386/i386.c (ix86_delegitimize_address): Handle
	UNSPEC_PCREL for none-MEM, too.

2012-01-23  Aldy Hernandez  <aldyh@redhat.com>

	* trans-mem.c (ipa_tm_create_version): Set externally_visible.
	(ipa_tm_create_version_alias): Same.

2012-01-23  Uros Bizjak  <ubizjak@gmail.com>

	PR libitm/51830
	* builtin-types.def (BT_FN_UINT_UINT_VAR): New.
	* gtm-builtins.def (BUILT_IN_TM_START): Declare as BT_FN_UINT_UINT_VAR.

2012-01-23  Aldy Hernandez  <aldyh@redhat.com>
	    Patrick Marlier  <patrick.marlier@gmail.com>
	    Iain Sandoe  <developer@sandoe-acoustics.co.uk>

	PR lto/51916
	* lto-wrapper.c (run_gcc): Pass the LTO section name to
	simple_object_start_read.

2012-01-23  Richard Guenther  <rguenther@suse.de>


	PR tree-optimization/51895
	* tree-sra.c (decide_one_param_reduction): Avoid sub-optimal
	parameter decomposition into BLKmode components.

2012-01-23  Eric Botcazou  <ebotcazou@adacore.com>

	* tree-ssa-structalias.c (intra_create_variable_infos): Do not create
	fake variables for restrict-qualified pointers whose pointed-to type
	contains a placeholder.

2012-01-23  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/51949
	* ipa-split.c (execute_split_functions): Do not split malloc functions.

2012-01-23  Jakub Jelinek  <jakub@redhat.com>

	PR rtl-optimization/51933
	* ree.c (transform_ifelse): Return true right away if dstreg is
	already wider or equal to cand->mode.
	(enum ext_modified_kind, struct ext_modified, ext_state): New types.
	(make_defs_and_copies_lists): Remove defs_list and copies_list
	arguments, add state argument, just truncate state->work_list
	instead of always allocating and freeing the vector.  Assert that
	get_defs succeeds instead of returning 2.  Changed return type to bool.
	(merge_def_and_ext): Add state argument.  If SET_DEST doesn't
	have ext_src_mode, see if it has been modified already with the
	right kind of extension and has been extended before from the
	ext_src_mode.  If SET_DEST is already wider or equal to cand->mode,
	just return true.  Remember the original mode in state->modified array.
	(combine_reaching_defs): Add state argument.  Don't allocate and
	free here def_list, copied_list and vec vectors, instead just
	VEC_truncate the vectors in *state.  Don't handle outcome == 2 here.
	(find_and_remove_re): Set DF_DEFER_INSN_RESCAN df flag.
	Add state variable, clear vectors in it, initialize state.modified
	if needed.  Free all the vectors at the end and state.modified too.
	Don't skip a candidate if the extension expression has been modified.

2012-01-22  Douglas B Rupp  <rupp@gnat.com>

	PR target/47096
	* config.gcc: (i[34567]86-*-interix3*): Remove from obsolete
	 configurations. Change triplet to i[34567]86-*-interix[3-9]*.
	(extra_options) interix.opt -> i386/interix.opt"
	(extra_objs):Add winnt-stubs.o
	* configure.ac: Add interix to target_os .comm on PE check.
	* configure: Regenerate.
	* config/interix3.h: Delete and move bits to..
	* config/interix.h: Delete and move bits to..
	* config/i386/i386-interix3.h: Delete and move bits to..
	* config/i386/i386-interix.h: ..here.
	(TARGET_CPU_DEFAULT): Remove redefinition.
	(TARGET_ASM_CONSTRUCTOR): Undefine.
	(SUBTARGET_SWITCHES): Define for ms-bitfields.
	(TARGET_OS_CPP_BUILTINS): Remove __OPENNT. Add __declspec.
	(PTRDIFF_TYPE): Define.
	(LONG_DOUBLE_TYPE_SIZE): Define.
	(LIBGCC2_LONG_DOUBLE_TYPE_SIZE): Define.
	(SUBTARGET_OVERRIDE_OPTIONS): Remove.
	(TARGET_SECTION_TYPE_FLAGS): Define.
	(ASM_DECLARE_FUNCTION_NAME): Define.
	(ASM_OUTPUT_EXTERNAL): Define.
	(ASM_OUTPUT_EXTERNAL_LIBCALL): Define.
	(ASM_OUTPUT_ALIGNED_BSS): Define.
	(PCC_BITFIELD_TYPE_MATTERS): Define.
	(USE_CONST_SECTION): Define.
	(SUBTARGET_ENCODE_SECTION_INFO): Remove.
	(TARGET_ASM_FUNCTION_RODATA_SECTION): Remove.
	(SUPPORTS_ONE_ONLY): Remove.
	(I386_PE_STRIP_ENCODING): Define.
	* config/interix.opt: Delete and move bits to..
	* config/i386/interix.opt: ..here. New.
	(mpe-aligned-commons): Add.
	* config/i386/t-interix: Add copyright header.
	(winnt-stubs.o): Add rule.

2012-01-22  Jason Merrill  <jason@redhat.com>

	PR c++/51832
	* varpool.c (varpool_analyze_pending_decls): Copy DECL_EXTERNAL
	for extra name aliases.

2012-01-22  Eric Botcazou  <ebotcazou@adacore.com>

	PR rtl-optimization/51924
	* ree.c (combine_set_extension): Improve debugging message.
	(combine_reaching_defs): Likewise.
	(get_defs): Rename confusingly named variable.
	(find_and_remove_re): Skip a candidate if the extension expression has
	been modified.

2012-01-21  Robert Millan  <rmh@gnu.org>
	    Gerald Pfeifer  <gerald@pfeifer.com>

	* config/kfreebsd-gnu.h (GNU_USER_DYNAMIC_LINKERX32): New macro.
	(GNU_USER_DYNAMIC_LINKER): Adjust indentation.

2012-01-20  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/51914
	* tree-vect-stmts.c (vectorizable_conversion): For
	cvt_type && modifier == WIDEN, put temporary with cvt_type
	at the beginning of vec_dsts and set vec_dest to temporary
	with vectype_out.

2012-01-20  Eric Botcazou  <ebotcazou@adacore.com>

	* cfgrtl.c (rtl_dump_bb): Do not dump insns for {ENTRY|EXIT}_BLOCK.

2012-01-20  Tijl Coosemans  <tijl@coosemans.org>

	* config/i386/i386.c: Fix checks for !TARGET_MACHO.
	* config/rs6000/rs6000.c: Likewise.

2012-01-20  Jakub Jelinek  <jakub@redhat.com>

	PR target/51915
	* config/arm/arm.c (arm_count_output_move_double_insns): Call
	output_move_double on a copy of operands array.

2012-01-20  Cary Coutant  <ccoutant@google.com>
	    Dodji Seketeli  <dodji@redhat.com>

	PR debug/45682
	* dwarf2out.c (copy_declaration_context): Return ref to parent
	of declaration DIE, if necessary.
	(remove_child_or_replace_with_skeleton): Add new parameter; update
	caller.  Place skeleton DIE under parent DIE of original declaration.
	Move call to copy_declaration_context to here ...
	(break_out_comdat_types): ... from here.

2012-01-20  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>

	PR rtl-optimization/51856
	* reload.c (find_reloads_subreg_address): Set the address_reloaded
	flag to reloaded.

2012-01-20  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>

	PR target/51819
	* config/arm/arm.c (arm_print_operand): Correct output of alignment
	hints for neon loads and stores.

2012-01-20  Georg-Johann Lay  <avr@gjlay.de>

	PR target/49868
	PR target/50887
	* doc/extend.texi (Named Address Spaces): Split into subsections.
	(AVR Named Address Spaces): New subsection.
	(M32C Named Address Spaces): New subsection.
	(RL78 Named Address Spaces): New subsection.
	(SPU Named Address Spaces): New subsection.
	(Variable Attributes): New anchor "AVR Variable Attributes".
	(AVR Variable Attributes): Rewrite and avoid wording
	"address space" in this context.
	* doc/invoke.texi (AVR Options): Rewrite and add documentation
	for -maccumulate-args, -mbranch-cost=, -mrelax, -mshort-calls.
	(AVR Built-in Macros): New subsubsection therein.
	* doc/md.texi (AVR constraints): Remove "C04", "R".

2012-01-20  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/51903
	* tree-ssa-pre.c (eliminate): Properly purging of EH edges
	when removing stmts.

2012-01-20  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>

	PR target/50313
	* config/arm/arm.c (arm_load_pic_register): Use
	gen_pic_load_addr_unified. Delete calls to gen_pic_load_addr_32bit
	, gen_pic_add_dot_plus_eight and gen_pic_add_dot_plus_four.
	(arm_pic_static_addr): Likewise.
	(arm_rtx_costs_1): Adjust cost for UNSPEC_PIC_UNIFIED.
	(arm_note_pic_base): Handle UNSPEC_PIC_UNIFIED.
	* config/arm/arm.md (UNSPEC_PIC_UNIFIED): Define.
	(pic_load_addr_unified): New.

2012-01-20  Andrey Belevantsev  <abel@ispras.ru>

	PR target/51106
	* function.c (instantiate_virtual_regs_in_insn): Use
	delete_insn_and_edges when removing a wrong asm insn.

2012-01-19  Vladimir Makarov  <vmakarov@redhat.com>

	PR rtl-optimization/40761
	* ira-int.h (struct ira_loop_tree_node): Add comment for member loop.
	Add new member loop_num.
	(IRA_LOOP_NODE_BY_INDEX): Modify the check.
	(ira_build): Remove the parameter.

	* ira.c (ira_print_disposition): Use loop_num instead of loop->num.
	(ira.c): Do not build CFG loops for one region allocation.  Remove
	argument from ira_build call.

	* ira-build.c (init_loop_tree_node): New function.
	(create_loop_tree_nodes): Use it.  Separate the case when CFG
	loops are not built.
	(more_one_region_p): Check current_loops.
	(finish_loop_tree_nodes): Separate the case when CFG loops are not
	built.
	(add_loop_to_tree): Process loop equal to NULL too.
	(form_loop_tree): Separate the case when CFG loops are not built.
	Use explicitly number for the root.
	(rebuild_regno_allocno_maps, create_loop_tree_node_allocnos): Add
	an assertion.
	(ira_print_expanded_allocno, loop_compare_func): Use loop_num
	instead of loop->num.
	(mark_loops_for_removal): Ditto.  Use loop_num instead of loop->num.
	(mark_all_loops_for_removal): Ditto.
	(remove_unnecessary_regions): Separate the case when CFG loops
	are not built.
	(ira_build): Remove the parameter.  Use explicit number of regions
	when CFG loops are not built.

	* ira-color.c (print_loop_title): Separate the case for the root node.
	Use loop_num instead of loop->num.
	(move_spill_restore): Use loop_num instead of loop->num.

	* ira-emit.c (setup_entered_from_non_parent_p): Add an assertion.
	(change_loop): Ditto.
	(change_loop): Use loop_num instead of loop->num.

	* ira-lives.c (process_bb_node_lives): Ditto.

	* ira-costs.c (print_allocno_costs, find_costs_and_classes): Ditto.

	* ira-conflicts.c (print_allocno_conflicts): Ditto.

2012-01-19  Jakub Jelinek  <jakub@redhat.com>

	PR libmudflap/40778
	* tree-mudflap.c (mf_artificial): New function.
	(execute_mudflap_function_ops, execute_mudflap_function_decls,
	mx_register_decls, mudflap_enqueue_decl): Use it.

	PR target/51876
	* config/arm/neon.md (*neon_vswp<mode>): Fix up operand
	numbers in the insn pattern.

2012-01-19  Michael Matz  <matz@suse.de>

	PR tree-optimization/46590
	* cfgexpand.c (add_scope_conflicts_1): New old_conflicts argument,
	use it in remembering which conflicts we already created.
	(add_scope_conflicts): Adjust call to above, (de)allocate helper
	bitmap.

2012-01-19  Aldy Hernandez  <aldyh@redhat.com>

	PR lto/51280
	* lto-wrapper.c (run_gcc): Pass -fgnu_tm on.
	(merge_and_complain): Same.

2012-01-19  Jakub Jelinek  <jakub@redhat.com>

	PR bootstrap/50237
	* config/initfini-array.h: Guard content of the header
	with #ifdef HAVE_INITFINI_ARRAY.
	* configure.ac: Move gcc_AC_INITFINI_ARRAY much later into the file.
	Add initfini-array.h to tm_file here.
	* acinclude.m4 (gcc_AC_INITFINI_ARRAY): For non-ia64 do a linker test.
	* config.gcc: Don't add initfini-array.h to tm_file here.
	* configure: Regenerated.

2012-01-19  Andrey Belevantsev  <abel@ispras.ru>

	PR rtl-optimization/51505
	* df-problems.c (df_kill_notes): New parameter live. Update comment.
	Remove REG_EQUAL/REG_EQUIV notes referring to dead registers.
	(df_note_bb_compute): Update the call to df_kill_notes.

2012-01-18  Aldy Hernandez  <aldyh@redhat.com>

	* trans-mem.c (requires_barrier): Remove call to is_global_var.

2012-01-18  Richard Guenther  <rguenther@suse.de>

	* tree-ssa.c (useless_type_conversion_p): Remove special-casing
	of conversions to void *.

2012-01-17  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>
	    Richard Sandiford  <rdsandiford@googlemail.com>

	PR middle-end/50325
	PR middle-end/51192
	* optabs.h (simplify_expand_binop): Declare.
	* optabs.c (simplify_expand_binop): Make global.
	* expmed.c (store_bit_field_1): Use simplify_expand_binop on big
	endian targets if the source cannot be exactly covered by word
	mode chunks.

2012-01-17  Jakub Jelinek  <jakub@redhat.com>

	PR bootstrap/51872
	* hard-reg-set.h (struct hard_reg_set_container): New type.
	* target.h (struct hard_reg_set_container): Forward declare.
	* target.def (set_up_by_prologue): New target hook.
	* doc/tm.texi.in (TARGET_SET_UP_BY_PROLOGUE): Document it.
	* doc/tm.texi: Regenerated.
	* function.c (thread_prologue_and_epilogue_insns): Change
	set_up_by_prologue HARD_REG_SET into struct hard_reg_set_container.
	Call targetm.set_up_by_prologue on it.
	* config/rs6000/rs6000.c (rs6000_set_up_by_prologue): New function.
	(TARGET_SET_UP_BY_PROLOGUE): Redefine to it.

2012-01-17  Nick Clifton  <nickc@redhat.com>

	* config/rx/rx.c (rx_can_use_simple_return): New function.
	* config/rx/rx-protos.h (rx_can_use_simple_return): Prototype.
	* config/rx/rx.md (return): Predicate on rx_can_use_simple_return.

2012-01-17  Richard Guenther  <rguenther@suse.de>

	PR middle-end/51782
	* expr.c (expand_assignment): Take address-space information
	from the address operand of MEM_REF and TARGET_MEM_REF.
	(expand_expr_real_1): Likewise.

2012-01-17  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>

	* ira.c (do_reload): Make sure ira_dump_file is re-set if no
	reload dump is requested.

2012-01-17  Aldy Hernandez  <aldyh@redhat.com>

	PR other/51165
	* trans-mem.c (requires_barrier): Call may_be_aliased.

2012-01-17  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/51877
	* tree-ssa-tail-merge.c (gimple_equal_p): Don't return true whenever
	call arguments and fndecls compare equal, instead return false if they
	don't.  Return true only if lhs1 and lhs2 are either both NULL, or
	both SSA_NAMEs that are valueized the same, or they satisfy
	operand_equal_p.

2012-01-17  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>

	* configure.ac (gcc_cv_target_dl_iterate_phdr): Only check on
	Solaris 11+.
	* configure: Regenerate.

2012-01-16  Jan Hubicka  <jh@suse.cz>

	PR c/12245
	PR c++/14179
	* convert.c (convert_to_integer): Use fold_convert for
	converting an INTEGER_CST to integer type.

2012-01-16  Jason Merrill  <jason@redhat.com>

	PR c++/14179
	* vec.c (vec_gc_o_reserve_1): Use ggc_round_alloc_size.

2012-01-16  Jakub Jelinek  <jakub@redhat.com>

	PR bootstrap/51860
	* config/s390/s390.c (s390_chunkify_start): Don't skip
	call insns followed by NOTE_INSN_CALL_ARG_LOCATION note.  Skip
	NOTE_INSN_VAR_LOCATION and NOTE_INSN_CALL_ARG_LOCATION notes.
	If insn is followed by NOTE_INSN_VAR_LOCATION or
	NOTE_INSN_CALL_ARG_LOCATION notes, insert jump after all those notes.
	Don't use location of note insns.

	PR tree-optimization/51865
	* tree-inline.c (tree_function_versioning): Call remap_decl
	on DECL_RESULT whenever it has VOID_TYPE_P type.

2012-01-15  Richard Sandiford  <rdsandiford@googlemail.com>

	* config/mips/mips.c (mips16_build_call_stub): Don't use a stub
	for calls to locally-binding MIPS16 functions if only the return
	type uses float regs.

2012-01-15  Chung-Lin Tang  <cltang@codesourcery.com>
	    Richard Sandiford  <rdsandiford@googlemail.com>

	* config/mips/mips-protos.h (SYMBOL_FORCE_TO_MEM): Delete.
	(SYMBOL_32_HIGH): Likewise.
	(mips_output_tls_reloc_directive): Declare.
	* config/mips/mips.h (PIC_FUNCTION_ADDR_REGNUM): Move to mips.md.
	(mips_use_pcrel_pool_p, mips_lo_relocs, mips_hi_relocs): Declare.
	* config/mips/mips.c (mips_use_pcrel_pool_p): New variable.
	(mips_lo_relocs, mips_hi_relocs): Make extern.
	(mips16_stub_function): Move up file.
	(mips_classify_symbol): Remove SYMBOL_FORCE_TO_MEM handling.
	(mips_symbolic_constant_p): Likewise.  Remove SYMBOL_32_HIGH too.
	(mips_symbol_insns_1): Likewise.  Check mips_use_pcrel_pool_p.
	(mips_cannot_force_const_mem): Use mips_use_pcrel_pool_p instead of
	SYMBOL_FORCE_TO_MEM.  Only check mips_tls_symbol_ref_1 if it's false.
	(mips_get_tp): Add MIPS16 support.
	(mips_legitimize_tls_address): Remove MIPS16 sorry().
	Generalize DTPREL and TPREL handling.
	(mips_init_relocs): Initialize mips_use_pcrel_pool_p.
	Add MIPS16 TLS support.
	(mips_output_tls_reloc_directive): New function.
	(mips16_rewrite_pool_refs): Ignore UNSPEC_TLS_GET_TPs.
	* config/mips/predicates.md (symbolic_operand_with_high)
	(tls_reloc_operand): New predicates.
	(force_to_mem_operand): Use mips_use_pcrel_pool_p.
	* config/mips/mips.md (UNSPEC_UNSHIFTED_HIGH): New unspec.
	(PIC_FUNCTION_ADDR_REGNUM): Moved from mips.h.
	(*unshifted_high): New instruction.  Use it for MIPS16 high splitter.
	(consttable_tls_reloc, tls_get_tp_mips16_<mode>): New patterns.
	(*tls_get_tp_mips16_call_<mode>): Likewise.

2012-01-15  Uros Bizjak  <ubizjak@gmail.com>

	PR rtl-optimization/51821
	* recog.c (peep2_find_free_register): Determine clobbered registers
	from insn pattern.

2012-01-14  Denis Chertykov  <chertykov@gmail.com>

	PR target/50925
	* config/avr/avr-protos.h: Revert change of 2012-01-09.
	* config/avr/avr.c: Likewise.
	* config/avr/avr.h: Likewise.

2012-01-13  Ian Lance Taylor  <iant@google.com>

	PR c++/50012
	* tree.h (TYPE_QUALS): Add cast to int.
	(TYPE_QUALS_NO_ADDR_SPACE): Likewise.

2012-01-13  Ian Lance Taylor  <iant@google.com>

	* ipa-cp.c (ipa_get_indirect_edge_target): Add typecasts when
	comparing param_index to VEC_length result.

2012-01-13  Steven Bosscher  <steven@gcc.gnu.org>

	* c-decl.c: Do not include tree-mudflap.h
	* tree-optimize.c: Likewise.
	* Makefile.in: Update dependencies.

2012-01-13  Richard Guenther  <rguenther@suse.de>

	PR middle-end/8081
	* gimplify.c (gimplify_modify_expr_rhs): For calls with a
	variable-sized result always use RSO.

2012-01-12  DJ Delorie  <dj@redhat.com>

	* cfgexpand.c (convert_debug_memory_address): Allow any valid
	pointer type, not just the default pointer type.

2012-01-09  Richard Henderson  <rth@redhat.com>
	    Denis Chertykov  <chertykov@gmail.com>

	PR target/50925
	* config/avr/avr-protos.h (avr_hard_regno_nregs): Declare.
	* config/avr/avr.c (avr_can_eliminate): Simplify.
	(avr_initial_elimination_offset): Likewise.
	(avr_prologue_setup_frame): Use hard_frame_pointer_rtx.
	(expand_epilogue): Likewise.
	(avr_legitimize_address): Gut.
	(avr_legitimize_reload_address): Use hard_frame_pointer_rtx.
	(avr_hard_regno_nregs): New.
	(avr_hard_regno_ok): Allow only Pmode for arg and frame_pointers.
	(avr_regno_mode_code_ok_for_base_b): Handle arg and frame pointers.
	* config/avr/avr.h (FIXED_REGISTERS): Adjust arg pointer,
	add soft frame pointer.
	(CALL_USED_REGISTERS): Likewise.
	(REG_CLASS_CONTENTS): Likewise.
	(REGISTER_NAMES): Likewise.
	(HARD_REGNO_NREGS): Use avr_hard_regno_nregs.
	(HARD_FRAME_POINTER_REGNUM): New.
	(FRAME_POINTER_REGNUM): Use soft frame pointer.
	(ELIMINABLE_REGS): Eliminate from the soft frame pointer,
	remove the HARD_FRAME_POINTER self-elimination.

2012-01-12  Georg-Johann Lay  <avr@gjlay.de>

	PR target/51756
	* config/avr/avr.c (avr_encode_section_info): Test for absence of
	DECL_EXTERNAL when checking for initializers of progmem variables.

2012-01-12  Ira Rosen  <irar@il.ibm.com>

	PR tree-optimization/51799
	* tree-vect-patterns.c (vect_recog_over_widening_pattern): Check
	that the last operation is a type demotion.

2012-01-12  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.md (*zero_extendsidi2_rex64): Correct movl template.
	(x86_shift<mode>_adj_1): Remove operand constraint from operand 3.

2012-01-11  Jakub Jelinek  <jakub@redhat.com>

	PR bootstrap/51796
	* combine.c (distribute_notes): If i3 is a noreturn call,
	allow old_size to be equal to args_size and make sure the
	noreturn call gets REG_ARGS_SIZE note.
	* expr.c (fixup_args_size_notes): Put REG_ARGS_SIZE notes
	on noreturn calls even when the delta is 0.

2012-01-11  Nathan Sidwell  <nathan@acm.org>

	* gcov.c (STRING_SIZE): Remove.
	(generate_results): Erase annotations for source files with no
	coverage information.
	(read_line): New.
	(output_lines): Use it.

2012-01-11  Eric Botcazou  <ebotcazou@adacore.com>

	* gimple.h (gimplify_body): Remove first argument.
	* gimplify.c (copy_if_shared): Add DATA argument.  Do not create the
	pointer set here, instead just pass DATA to walk_tree.
	(unshare_body): Remove BODY_P argument and adjust.  Create the pointer
	set here and invoke copy_if_shared on the size trees of DECL_RESULT.
	(unvisit_body): Likewise, but with unmark_visited.
	(gimplify_body): Remove BODY_P argument and adjust.
	(gimplify_function_tree): Adjust call to gimplify_body.
	* omp-low.c (finalize_task_copyfn): Likewise.

2012-01-11  Eric Botcazou  <ebotcazou@adacore.com>

	* tree.h (build_function_decl_skip_args): Add boolean parameter.
	(build_function_type_skip_args): Delete.
	* tree.c (build_function_type_skip_args): Make static and add
	SKIP_RETURN parameter.  Fix thinko in the handling of variants.
	(build_function_decl_skip_args): Add SKIP_RETURN parameter and
	pass it to build_function_type_skip_args.
	* cgraph.h (cgraph_function_versioning): Add boolean parameter.
	(tree_function_versioning): Likewise.
	* cgraph.c (cgraph_create_virtual_clone): Adjust call to
	build_function_decl_skip_args.
	* cgraphunit.c (cgraph_function_versioning): Add SKIP_RETURN parameter
	and pass it to build_function_decl_skip_args/tree_function_versioning.
	(cgraph_materialize_clone): Adjust call to tree_function_versioning.
	* ipa-inline-transform.c (save_inline_function_body): Likewise.
	* trans-mem.c (ipa_tm_create_version): Likewise.
	* tree-sra.c (modify_function): Ditto for cgraph_function_versioning.
	* tree-inline.c (declare_return_variable): Remove always-true test.
	(tree_function_versioning): Add SKIP_RETURN parameter.  If the function
	returns non-void and SKIP_RETURN, create a void-typed RESULT_DECL.
	* ipa-split.c (split_function): Skip the return value for the split
	part if it doesn't return.

2012-01-11  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>

	PR tree-optimization/49642
	* ipa-split.c (forbidden_dominators): New variable.
	(check_forbidden_calls): New function.
	(dominated_by_forbidden): Likewise.
	(consider_split): Check for forbidden dominators.
	(execute_split_functions): Initialize and free forbidden
	dominators info; call check_forbidden_calls.

2012-01-11  Matthew Gretton-Dann  <matthew.gretton-dann@arm.com>

	* config/arm/arm.md (mov_notscc): Use MVN for false condition.

2012-01-11  Nick Clifton  <nickc@redhat.com>

	* config/rx/rx.md (return): Define pattern.

2012-01-11  Richard Guenther  <rguenther@suse.de>

	* doc/extend.texi (malloc attribute): Adjust according to
	implementation.

2012-01-10  Aldy Hernandez  <aldyh@redhat.com>
	    Patrick Marlier  <patrick.marlier@gmail.com>

	PR middle-end/51516
	* trans-mem.c (get_cg_data): Traverse aliases if requested.
	(ipa_tm_scan_calls_block): Update parameters to get_cg_data.
	(ipa_tm_note_irrevocable): Same.
	(ipa_tm_scan_irr_block): Same.
	(ipa_tm_decrement_clone_counts): Same.
	(ipa_tm_scan_irr_function): Same.
	(ipa_tm_create_version_alias): Same.
	(ipa_tm_create_version): Same.
	(ipa_tm_transform_calls_redirect): Same.
	(ipa_tm_transform_calls): Same.
	(ipa_tm_transform_transaction): Same.
	(ipa_tm_execute): Same.

2012-01-10  Richard Guenther  <rguenther@suse.de>

	PR middle-end/51806
	* opts.c (common_handle_option): Handle -Werror.

2012-01-10  Andreas Schwab  <schwab@linux-m68k.org>

	* config/m68k/sync.md ("atomic_compare_and_swap<mode>_1"): Fix
	operand number.

2012-01-10  Jason Merrill  <jason@redhat.com>

	* doc/invoke.texi (C++ Dialect Options): Update -fabi-version=6
	information.

2012-01-10  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>

	* configure.ac (gcc_cv_as_ix86_tlsgdplt): Check if linker
	supports R_386_TLS_GD_PLT reloc.
	(gcc_cv_as_ix86_tlsldmplt): Check if linker
	supports R_386_TLS_LDM_PLT reloc.
	* configure: Regenerate.
	* config.in: Regenerate.

2012-01-10  Georg-Johann Lay  <avr@gjlay.de>

	PR target/49868
	Extend __pgmx semantics to linearize memory.
	* config/avr/avr.md (mov<mode>): Use avr_xload_libgcc_p to
	determine if code comes inline or from libgcc.
	(MOVMEM_r_d:HI): Add "w" to constraint for better preference.
	(movmem_qi, movmem_qi): Set constraint #2 to "n".
	(movmem_qi_elpm, movmem_hi_elpm): Remove insns.
	(movmemx_qi, movmemx_hi): New insns.
	(xload_<mode>_libgcc): Rewrite to new insn condition.
	(xload_<mode>): Remove insns.
	* config/avr/avr.c (avr_out_xload): Rewrite: Only need to handle
	cases that don't satisfy avr_xload_libgcc_p().
	(avr_addr_space_convert): Allow converting in any direction.
	(avr_addr_space_subset_p): Return always true.
	(avr_xload_libgcc_p): Rewrite to fit new __pgmx semantics.
	(avr_emit_movmemhi): Ditto.
	(avr_out_lpm): No need to handle ADDR_SPACE_PGMX any more.
	(avr_out_movmem): Ditto.
	(AVR_SYMBOL_FLAG_PROGMEM): New macro.
	(AVR_SYMBOL_SET_ADDR_SPACE): New macro.
	(AVR_SYMBOL_GET_ADDR_SPACE): New macro.
	(avr_encode_section_info): Encode 'progmem' in symbol flags.
	(output_reload_in_const): Don't zero-extend any 24-bit symbols.

2012-01-10  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/50913
	* graphite-scop-detection.c (stmt_has_simple_data_refs_p):
	Require data-refs to be representable by Graphite with respect
	to any loop nest.

2012-01-10  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/constraints.md ("L"): Return true for 0xffffffff.
	* config/i386/i386.c (*anddi_1): Emit AND with 0xffffffff as MOV.

2012-01-10  Tom de Vries  <tom@codesourcery.com>

	PR rtl-optimization/51271
	* dwarf2cfi.c (scan_trace): Save and restore cur_row->reg_save when
	handling annulled branch.

2012-01-10  Richard Henderson  <rth@redhat.com>

	* config/arm/arm.c (arm_vectorize_vec_perm_const_ok,
	TARGET_VECTORIZE_VEC_PERM_CONST_OK, neon_split_vcombine, MAX_VECT_LEN,
	struct expand_vec_perm_d, arm_expand_vec_perm_1, arm_expand_vec_perm,
	arm_evpc_neon_vuzp, arm_evpc_neon_vzip, arm_evpc_neon_vrev,
	arm_evpc_neon_vtrn, arm_evpc_neon_vtbl, arm_expand_vec_perm_const_1,
	arm_expand_vec_perm_const): New.
	* config/arm/arm-protos.h: Update.
	* config/arm/neon.md (UNSPEC_VCONCAT): New.
	(*neon_vswp<VDQX>): New.
	(neon_vcombine<VDX>): Use neon_split_vcombine.
	(neon_vtbl1v16qi, neon_vtbl2v16qi, neon_vcombinev16qi): New.
	* config/arm/vec-common.md (vec_perm_const<VALL>): New.
	(vec_perm<VE>): New.

2012-01-10  Richard Henderson  <rth@redhat.com>

	* config/arm/arm.c (arm_gen_compare_reg): Add scratch argument;
	use it if reload_completed.
	(arm_legitimize_sync_memory, arm_emit, arm_insn_count, arm_count,
	arm_output_asm_insn, arm_process_output_memory_barrier,
	arm_output_memory_barrier, arm_ldrex_suffix, arm_output_ldrex,
	arm_output_strex, arm_output_it, arm_output_op2, arm_output_op3,
	arm_output_sync_loop, arm_get_sync_operand, FETCH_SYNC_OPERAND,
	arm_process_output_sync_insn, arm_output_sync_insn,
	arm_sync_loop_insns, arm_call_generator, arm_expand_sync): Remove.
	(arm_pre_atomic_barrier, arm_post_atomic_barrier): New.
	(arm_emit_load_exclusive, arm_emit_store_exclusive): New.
	(emit_unlikely_jump): New.
	(arm_expand_compare_and_swap, arm_split_compare_and_swap): New.
	(arm_split_atomic_op): New.
	* config/arm/arm-protos.h: Update.
	* config/arm/arm.h (enum arm_sync_generator_tag): Remove.
	(struct arm_sync_generator): Remove.
	* config/arm/arm.md (VUNSPEC_SYNC_COMPARE_AND_SWAP, VUNSPEC_SYNC_LOCK,
	VUNSPEC_SYNC_OP, VUNSPEC_SYNC_NEW_OP, VUNSPEC_SYNC_OLD_OP): Remove.
	(VUNSPEC_ATOMIC_CAS, VUNSPEC_ATOMIC_XCHG, VUNSPEC_ATOMIC_OP): New.
	(VUNSPEC_LL, VUNSPEC_SC): New.
	(sync_result, sync_memory, sync_required_value, sync_new_value,
	sync_t1, sync_t2, sync_release_barrier, sync_op): Remove.
	(attr length): Don't use arm_sync_loop_insns.
	(cbranch_cc, cstore_cc): Update call to arm_gen_compare_reg.
	(movsfcc, movdfcc): Likewise.
	* config/arm/constraints.md (Ua): New.
	* config/arm/prediates.md (mem_noofs_operand): New.
	(sync_compare_and_swap<QHSD>, sync_lock_test_and_set<QHSD>): Remove.
	(sync_clobber, sync_t2_reqd): Remove.
	(sync_<syncop><QHSD>, sync_nand<QHSD>): Remove.
	(sync_new_<syncop><QHSD>, sync_new_nand<QHSD>): Remove.
	(sync_old_<syncop><QHSD>, sync_old_nand<QHSD>): Remove.
	(arm_sync_compare_and_swap<SIDI>): Remove.
	(arm_sync_compare_and_swap<NARROW>): Remove.
	(arm_sync_lock_test_and_set<SIDI>): Remove.
	(arm_sync_lock_test_and_set<NARROW>): Remove.
	(arm_sync_new_<syncop><SIDI>): Remove.
	(arm_sync_new_<syncop><NARROW>): Remove.
	(arm_sync_new_nand<SIDI>): Remove.
	(arm_sync_new_nand<NARROW>): Remove.
	(arm_sync_old_<syncop><SIDI>): Remove.
	(arm_sync_old_<syncop><NARROW>): Remove.
	(arm_sync_old_nand<SIDI>): Remove.
	(arm_sync_old_nand<NARROW>): Remove.
	(*memory_barrier): Merge arm_output_memory_barrier.
	(atomic_compare_and_swap<QHSD>): New.
	(atomic_compare_and_swap<NARROW>_1): New.
	(atomic_compare_and_swap<SIDI>_1): New.
	(atomic_exchange<QHSD>): New.
	(cas_cmp_operand, cas_cmp_str): New.
	(atomic_op_operand, atomic_op_str): New.
	(atomic_<syncop><QHSD>, atomic_nand<QHSD>): New.
	(atomic_fetch_<syncop><QHSD>, atomic_fetch_nand<QHSD>): New.
	(atomic_<syncop>_fetch<QHSD>, atomic_nand_fetch<QHSD>): New.
	(arm_load_exclusive<NARROW>): New.
	(arm_load_exclusivesi, arm_load_exclusivedi): New.
	(arm_store_exclusive<QHSD>): New.

2012-01-09  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000.c (rs6000_init_hard_regno_mode_ok): Add DF
	reload patterns if -mvsx-scalar-memory.

	* config/rs6000/vsx.md (vsx_xscvspdp): Allow xscvspdp to be
	generated, even -mno-vsx-scalar-double was used.
	(vsx_xscvdpsp_scalar): Likewise.
	(vsx_xscvspdp_scalar2): Likewise.

2012-01-09  Tom de Vries  <tom@codesourcery.com>
	    Andrew Pinski  <apinski@cavium.com>

	PR debug/51471
	* reorg.c (fill_slots_from_thread): Don't speculate
	frame-related insns.

2012-01-09  Richard Sandiford  <rdsandiford@googlemail.com>

	* sched-int.h (bb_note): Move to...
	* basic-block.h: ...here.
	* haifa-sched.c (bb_note): Move to...
	* cfgrtl.c: ...here.
	* function.c (next_block_for_reg): New function.
	(move_insn_for_shrink_wrap): Likewise.
	(prepare_shrink_wrap): Rewrite to use the above.

2012-01-09  Aldy Hernandez  <aldyh@redhat.com>

	* gimple.c (is_gimple_non_addressable): Remove.
	* gimple.h: Remove is_gimple_non_addressable.
	* gimplify.c (gimplify_modify_expr_rhs): Use is_gimple_reg instead of
	is_gimple_non_addressable.
	* trans-mem.c (expand_assign_tm): Same.

2012-01-09  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/51775
	* tree-ssa-sccvn.c (visit_use): Value-number throwing stmts.
	* tree-ssa-pre.c (eliminate): Properly fixup EH info.

2012-01-09  Matthew Gretton-Dann  <matthew.gretton-dann@arm.com>

	* config/arm/arm-cores.def (cortex-a15): Use cortex_a15_tune for
	tuning parameters.
	* config/arm/arm.c (arm_cortex_a15_tune): New static variable.

2012-01-09  Richard Guenther  <rguenther@suse.de>

	* tree-streamer-out.c (write_ts_optimization): Fix spelling.

2012-01-08  Jan Hubicka  <jh@suse.cz>

	PR tree-optimize/51680
	* ipa-inline-analyss.c (evaluate_properties_for_edge): Fix condition
	on when known_vals needs to be computed; cleanup.

2012-01-08  Jan Hubicka  <jh@suse.cz>

	PR tree-optimize/51694
	* ipa-cp.c (ipa_get_indirect_edge_target): Add bounds checks.

2012-01-08  Jonathan Wakely  <jwakely.gcc@gmail.com>

	* doc/cpp.texi (Predefined Macros): __STRICT_ANSI__ is defined
	for -std=c++98 and -std=c++11 too.

2012-01-08  Chung-Lin Tang  <cltang@codesourcery.com>

	* cfgloop.c (cancel_loop): Add free() of bbs array.

2012-01-07  Jan Hubicka  <jh@suse.cz>

	PR tree-optimization/51600
	* ipa-inline-analysis.c (estimate_edge_devirt_benefit): Disable code
	that benefits small functions.

2012-01-07  Jan Hubicka  <jh@suse.cz>

	* ipa-inline.c (want_inline_small_function_p): Fix formating.

2012-01-07  Jan Hubicka  <jh@suse.cz>

	PR tree-optimization/51680
	* ipa-inline.c (want_inline_small_function_p): Be more lax on functions
	whose inlining reduce unit size.

2012-01-07  Alexandre Oliva  <aoliva@redhat.com>

	PR bootstrap/51725
	* cselib.c (new_elt_loc_list): Promote addr_list to canonical node.
	Add canonical node to containing_mem chain after the non-canonical
	one, even if there weren't any locs to propagate.
	(remove_useless_values): Keep only canonical values.
	(add_mem_for_addr, cselib_lookup_mem): Canonicalize addr.
	(cselib_invalidate_mem): Likewise.  Ensure v is canonical, and
	canonicalize mem_chain elements that are not discarded.

2012-01-06  Jakub Jelinek  <jakub@redhat.com>

	PR target/47333
	* cgraphunit.c (cgraph_optimize): Call output_weakrefs
	before emitting functions.

	PR gcov-profile/50127
	* bb-reorder.c (partition_hot_cold_basic_blocks): Call
	clear_aux_for_blocks.

2012-01-06  Alexandre Oliva  <aoliva@redhat.com>

	PR debug/51746
	* cselib.c (cselib_hash_rtx): Hash incoming VALUEs too.

2012-01-06  Arnaud Charlet  <charlet@adacore.com>

	* c-decl.c (ext_block): Moved up.
	(collect_all_refs, for_each_global_decl): Take ext_block into account.

2012-01-06  Han Shen  <shenhan@google.com>

	Translate built-in include paths for sysroot.
	* Makefile.in (gcc_gxx_include_dir_add_sysroot): New.
	(PREPROCESSOR_DEFINES): Define GPLUSPLUS_INCLUDE_DIR_ADD_SYSROOT.

	* cppdefault.c (cpp_include_defaults): Replace hard coded "0" with
	GPLUSPLUS_INCLUDE_DIR_ADD_SYSROOT for "add_sysroot" field.

	* configure.ac (AC_SUBST): Add gcc_gxx_include_dir_add_sysroot to
	control whether sysroot should be prepended to gxx include dir.

	* configure: Regenerate.

2012-01-06  Torvald Riegel  <triegel@redhat.com>

	PR rtl-optimization/51771
	* builtin-attrs.def (ATTR_RETURNS_TWICE, ATTR_TM_NOTHROW_RT_LIST): New.
	* gtm-builtins.def (BUILT_IN_TM_START): Add returns-twice attrib.

2012-01-05  Eric Botcazou  <ebotcazou@adacore.com>

	PR tree-optimization/51315
	* tree-sra.c (tree_non_aligned_mem_for_access_p): New predicate.
	(build_accesses_from_assign): Use it instead of tree_non_aligned_mem_p.

2012-01-05  Uros Bizjak  <ubizjak@gmail.com>

	PR target/51681
	* config/ia64/ia64.c (expand_vec_perm_shrp): Use correct operands
	for shrp pattern.  Correctly handle and fixup shift variable.
	Return false when shift > nelt for BYTES_BIG_ENDIAN target.

2012-01-05  Jakub Jelinek  <jakub@redhat.com>

	PR debug/51762
	* calls.c (emit_call_1): For noreturn calls force a REG_ARGS_SIZE
	note when !ACCUMULATE_OUTGOING_ARGS.

2012-01-05  Eric Botcazou  <ebotcazou@adacore.com>

	* tree-vrp.c (extract_range_from_binary_expr_1): Remove duplicated
	condition.
	(extract_range_from_unary_expr_1): Avoid useless computations.

2012-01-05  Jakub Jelinek  <jakub@redhat.com>

	PR rtl-optimization/51767
	* cfgrtl.c (force_nonfallthru_and_redirect): Force addition
	of jump_block and add an extra edge for degenerated asm gotos.

	PR middle-end/51768
	* stmt.c (check_unique_operand_names): Don't ICE during error
	reporting if i is from labels chain.

	PR middle-end/44777
	* profile.c (branch_prob): Split bbs that have exit edge
	and need a fake entry edge too.

2012-01-05  Jan Hubicka  <jh@suse.cz>

	PR middle-end/49710
	* cfgloopmanip.c (remove_path): Walk loop hiearchy upwards when
	unlooping loops.

2012-01-05  Richard Guenther  <rguenther@suse.de>

	PR lto/50490
	* tree-streamer-out.c (write_ts_optimization): New function.
	(streamer_write_tree_body): Call it.
	* tree-streamer-in.c (lto_input_ts_optimization): New function.
	(streamer_read_tree_body): Call it.
	* lto-streamer-out.c (lto_is_streamable): Handle OPTIMIZATION_NODE.

2012-01-05  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/51761
	* gimple.h (struct gimplify_ctx): Add in_cleanup_point_expr field.
	* gimplify.c (gimplify_cleanup_point_expr): Save and set
	in_cleanup_point_expr before gimplify_stmt call and restore it
	afterwards.
	(gimplify_target_expr): Don't add {CLOBBER} cleanup if
	in_cleanup_point_expr is false.

2012-01-05  Richard Guenther  <rguenther@suse.de>

	PR middle-end/51764
	* common.opt (Wmudflap, fmudflap, fmudflapth, fmudflapir): Move
	to c.opt.
	* toplev.c (process_options): Reject combining mudflap and LTO.
	* tree-nomudflap.c (nogo): Use sorry instead of internal_error.

2012-01-05  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/51760
	* tree-ssa-ccp.c (likely_value): Drop UNDEFINED to CONSTANT,
	not VARYING.
	(bit_value_unop): Handle UNDEFINED operands.
	(bit_value_binop): Likewise.

2012-01-05  Georg-Johann Lay  <avr@gjlay.de>

	* config/avr/avr.c (avr_replace_prefix): Remove.
	(avr_asm_named_section): Use ACONCAT instead of avr_replace_prefix.
	(avr_asm_function_rodata_section): Ditto.
	(avr_asm_select_section): Ditto.

2012-01-05  Marcus Shawcroft  <marcus.shawcroft@arm.com>

	* reload.c (find_reloads): Adjust LABEL_NUSES on REG_LABEL_OPERAND
	insertion.

2012-01-05  Jakub Jelinek  <jakub@redhat.com>

	PR bootstrap/51648
	* tree-cfg.c (need_fake_edge_p): Return true also for noreturn
	calls that have any non-fake successor edges.

	PR debug/51746
	* var-tracking.c (add_stores): For COND_EXEC allow oval to be NULL.

2012-01-04  Eric Botcazou  <ebotcazou@adacore.com>

	PR tree-optimization/51624
	* tree-sra.c (build_ref_for_model): When replicating a chain of
	COMPONENT_REFs, stop as soon as the offset would become negative.

2012-01-04  Jakub Jelinek  <jakub@redhat.com>

	PR debug/51695
	* dwarf2out.c (output_loc_list): For now drop >= 64KB expressions
	in .debug_loc on the floor.

2012-01-04  Andrew Pinski  <apinski@cavium.com>

	* doc/invoke.texi (-march=@var{arch}): Add octeon+ and octeon2.

2012-01-04  Andrew Pinski  <apinski@cavium.com>
	    Adam Nemet  <anemet@caviumnetworks.com>

	* config/mips/mips.md (size): Add SI and DI.
	(SIZE): New mode attribute.
	(U): New code attribute.
	* config/mips/mips-dsp.md (mips_lbux): Use gen_mips_lbux_extsi.
	(mips_lbux_<mode>): Delete.
	(mips_l<SHORT:size><u>x_ext<GPR:mode>_<P:mode>): New pattern.
	(mips_lhx): Use gen_mips_lhx_extsi.
	(mips_lhx_<mode>): Delete.
	(mips_lwx): Delete.
	(mips_l<size>x): New expand.
	(mips_lwx_<mode>): Delete.
	(mips_l<GPR:size>x_<P:mode>): New pattern.
	(*mips_lw<u>x_<P:mode>_ext): Likewise.
	* config/mips/mips-ftypes.def: Add DI f(POINTER, SI) function type.
	* config/mips/mips.c (mips_lx_address_p): New function.
	(mips_rtx_costs <case MEM>): Call mips_lx_address_p.
	(dsp64): New availability predicate.
	(mips_builtins): Add an entry for __builtin_mips_ldx.
	* config/mips/mips.h (ISA_HAS_LBX): New define.
	(ISA_HAS_LBUX): Likewise.
	(ISA_HAS_LHX): Likewise.
	(ISA_HAS_LHUX): Likewise.
	(ISA_HAS_LWX): Likewise.
	(ISA_HAS_LWUX): Likewise.
	(ISA_HAS_LDX): Likewise.
	* doc/extend.texi (__builtin_mips_ldx): Document.

2012-01-04  Tristan Gingold  <gingold@adacore.com>

	* config/vms/xm-vms.h (HOST_LONG_FORMAT, HOST_PTR_PRINTF): Define
	when long pointers are used.
	* config.build (*-*-*vms*): Handle all OpenVMS targets.
	(alpha64-dec-*vms*, alpha*-dec-*vms*)
	(ia64-hp-*vms*): Remove.
	* config/vms/xm-vms64.h: Delete.

2012-01-04  Aldy Hernandez  <aldyh@redhat.com>

	PR middle-end/51472
	* trans-mem.c (expand_assign_tm): Handle TM_MEMMOVE loads correctly.

2012-01-04  Aldy Hernandez  <aldyh@redhat.com>

	* opts.c (finish_options): Remove duplicate sorry.

2012-01-04  Aldy Hernandez  <aldyh@redhat.com>

	PR middle-end/51696
	* trans-mem.c (diagnose_tm_1): Display indirect calls with no name
	correctly.

2012-01-04  Richard Guenther  <rguenther@suse.de>

	PR middle-end/51750
	* tree.c (size_low_cst): New function.
	* tree.h (size_low_cst): Declare.
	* fold-const.c (fold_comparison): Use it to extract the low
	part of the POINTER_PLUS_EXPR offset.

2012-01-04  Georg-Johann Lay  <avr@gjlay.de>

	Fix clearing ZERO_REG
	* config/avr/avr.md (cc): Add alternative "ldi".
	(movqi_insn): Use it in cc attribute.
	* config/avr/avr.c (notice_update_cc): Handle CC_LDI.
	(output_reload_in_const): Use CLR to move 0 to ZERO_REG.
	(output_reload_insisf): Use ZERO_REG to pre-clear register.

2012-01-04  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>

	* configure: Regenerate.

2012-01-04  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/49651
	* tree-ssa-structalias.c (type_can_have_subvars): New function.
	(var_can_have_subvars): Use it.
	(get_constraint_for_1): Only consider subfields if there can be any.

2012-01-03  Jakub Jelinek  <jakub@redhat.com>

	PR bootstrap/51725
	* cselib.c (new_elt_loc_list): When moving locs from one cselib_val
	to its new canonical_cselib_val and the cselib_val was in
	first_containing_mem chain, but the canonical_cselib_val was not,
	add the latter into the chain.
	(cselib_invalidate_mem): Compare canonical_cselib_val of
	addr_list chain elt with v.

	PR pch/51722
	* dwarf2out.c (dwarf2out_start_source_file, dwarf2out_define,
	dwarf2out_undef): Allocate e.info using ggc_strdup instead
	of xstrdup.
	(output_macinfo_op): Don't ggc_strdup fd->filename.
	(optimize_macinfo_range): Allocate grp_name using XALLOCAVEC,
	then ggc_strdup it.  Don't free inc->info or cur->info.
	(output_macinfo): Don't free ref->info or file->info.

2012-01-03  Ira Rosen  <irar@il.ibm.com>

	PR tree-optimization/51269
	* tree-vect-loop-manip.c (set_prologue_iterations): Make
	first_niters a pointer.
	(slpeel_tree_peel_loop_to_edge): Likewise.
	(vect_do_peeling_for_loop_bound): Update call to
	slpeel_tree_peel_loop_to_edge.
	(vect_gen_niters_for_prolog_loop): Don't compute wide_prolog_niters
	here.  Remove it from the parameters list.
	(vect_do_peeling_for_alignment): Update calls and compute
	wide_prolog_niters.

2012-01-03  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/51070
	* tree-loop-distribution.c (stmt_has_scalar_dependences_outside_loop):
	Properly handle calls.

2012-01-03  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/51692
	* tree-ssa-dce.c (eliminate_unnecessary_stmts): Do not remove
	the LHS of allocation stmts.

2012-01-03  Olivier Hainque  <hainque@adacore.com>

	* system.h: Prior to #define, #undef fopen and freopen unconditionally.

2012-01-03  Olivier Hainque  <hainque@adacore.com>

	* collect2.c (main): In AIX specific computations for vector
	insertions, use CONST_CAST2 to cast from char ** to const char **.

2012-01-03  Richard Guenther  <rguenther@suse.de>

	PR debug/51650
	* dwarf2out.c (dwarf2out_finish): Always create a DIE for
	the context of a limbo DIE when it does not already exist.

2012-01-03  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/51719
	* value-prof.c (gimple_ic): When indirect call isn't noreturn,
	but direct call is, clear direct call's lhs and don't add fallthrough
	edge from dcall_bb to join_bb and PHIs.

2012-01-03  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>

	* config/s390/s390.md ("*cmp<mode>_ccs"): Fix comment mentioning
	the instructions emitted by the pattern.
	("*TDC_insn_<mode>"): Add comment.

2012-01-03  Richard Guenther  <rguenther@suse.de>

	PR middle-end/51730
	* fold-const.c (fold_comparison): Properly canonicalize
	tree offset and HOST_WIDE_INT bit position.

2012-01-02  Uros Bizjak  <ubizjak@gmail.com>

	* config/ia64/ia64.c (expand_vec_perm_broadcast): Use correct
	operands for extzv pattern.

2012-01-02  Jakub Jelinek  <jakub@redhat.com>

	PR bootstrap/51725
	* cselib.c (add_mem_for_addr): Call canonical_cselib_val
	on mem_elt first.

2012-01-02  Sandra Loosemore  <sandra@codesourcery.com>

	* doc/invoke.texi (-flto and related options): Copy-edit.

2012-01-02  Richard Sandiford  <rdsandiford@googlemail.com>

	* config/mips/mips.md (loadgp_newabi_<mode>): Add missing earlyclobber.

2012-01-02  Jakub Jelinek  <jakub@redhat.com>

	* config/i386/sse.md (*avx2_gatherdi<mode>_3, *avx2_gatherdi<mode>_4):
	New patterns.

2012-01-02  Richard Sandiford  <rdsandiford@googlemail.com>

	* expr.h (move_by_pieces_ninsns): Declare.
	* expr.c (move_by_pieces_ninsns): Make external.
	* config/mips/mips-protos.h (mips_move_by_pieces_p): Declare.
	(mips_store_by_pieces_p): Likewise.
	* config/mips/mips.h (MOVE_BY_PIECES_P): Call mips_move_by_pieces_p.
	(STORE_BY_PIECES_P): Likewise mips_store_by_pieces_p.
	* config/mips/mips.c (mips_move_by_pieces_p): New function.
	(mips_store_by_pieces_p): Likewise.

2012-01-02  Jakub Jelinek  <jakub@redhat.com>

	* passes.c (register_one_dump_file): Free full_name.

	* reload1.c (reload): Don't allocate reg_max_ref_width here.
	(calculate_elim_costs_all_insns): Free offsets_at and
	offsets_known_at at the end and clear the pointers.

2012-01-02  Georg-Johann Lay  <avr@gjlay.de>

	* config/avr/avr.opt (-mbranch-cost): Fix double definition of
	this option introduced in r180739.

2012-01-02  Georg-Johann Lay  <avr@gjlay.de>

	PR target/51345
	* config.gcc (tm_file target=avr]): Add avr/avr-multilib.h
	(tmake_file target=avr): Add avr/t-multilib.

	* config/avr/avr-c.c (avr_cpu_cpp_builtins): Use AVR_HAVE_8BIT_SP
	to built-in define __AVR_HAVE_8BIT_SP__, __AVR_HAVE_16BIT_SP__.
	* config/avr/genmultilib.awk: New file.
	* config/avr/t-multilib: New auto-generated file.
	* config/avr/multilib.h: New auto-generated file.
	* config/avr/t-avr (AVR_MCUS): New variable.
	(genopt.sh): Use it.
	(s-mlib): Depend on t-multilib.
	(t-multilib, multilib.h): New dependencies.
	(s-avr-mlib): New rule to build t-multilib, multilib.h from AVR_MCUS.
	(MULTILIB_OPTIONS): Remove.
	(MULTILIB_MATCHES): Remove.
	(MULTILIB_DIRNAMES): Remove.
	(MULTILIB_EXCEPTIONS): Remove:
	* config/avr/genopt.sh: Don't use hard coded file name;
	pass AVR_MCUS from t-avr instead.

2012-01-02  Georg-Johann Lay  <avr@gjlay.de>

	* config/avr/avr.c (avr_out_ashrpsi3): Fix "case 31" to "case 23".

2012-01-02  Georg-Johann Lay  <avr@gjlay.de>

	Implement light-weight DImode support.
	* config/avr/avr-dimode.md: New file.
	* config/avr/avr.md: Include it.
	(adjust_len): Add plus64, compare64.
	(HIDI): Remove code iterator.
	(code_stdname): New code attribute.
	(rotx, rotsmode): Remove DI.
	(rotl<mode>3, *rotw<mode>, *rotb<mode>): Use HISI instead of HIDI
	as code iterator.
	* config/avr/avr-protos.h (avr_have_dimode): New.
	(avr_out_plus64, avr_out_compare64): New.
	* config/avr/avr.c (avr_out_compare): Handle DImode.
	(avr_have_dimode): New variable definition and initialization.
	(avr_out_compare64, avr_out_plus64): New functions.
	(avr_out_plus_1): Use simplify_unary_operation to negate xval.
	(adjust_insn_length): Handle ADJUST_LEN_COMPARE64, ADJUST_LEN_PLUS64.
	(avr_compare_pattern): Skip DImode comparisons.

2012-01-02  Revital Eres  <revital.eres@linaro.org>

	* ddg.c (def_has_ccmode_p): New function.
	(add_cross_iteration_register_deps,
	create_ddg_dep_from_intra_loop_link): Call it.

2012-01-02  Richard Guenther  <rguenther@suse.de>

	PR other/51679
	* invoke.texi (fassociative-math): Remove spurious paranthesis.

2012-01-01  Jakub Jelinek  <jakub@redhat.com>

	* gcc.c (process_command): Update copyright notice dates.
	* gcov.c (print_version): Likewise.
	* gcov-dump.c (print_version): Likewise.
	* mips-tfile.c (main): Likewise.
	* mips-tdump.c (main): Likewise.

2012-01-01  Ira Rosen  <irar@il.ibm.com>

	PR tree-optimization/51704
	* tree-vect-slp.c (vect_detect_hybrid_slp_stmts): Check that
	a use is inside the basic block or loop before accessing its vect info.

2012-01-01  Jan Hubicka  <jhjh@suse.cz>

	PR rtl-optimization/51069
	* cfgloopmanip.c (remove_path): Removing path making irreducible
	region unconditional makes BB part of the region.

2012-01-01  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/51683
	* tree-ssa-propagate.c (substitute_and_fold): Don't optimize away
	calls with side-effects.
	* tree-ssa-ccp.c (ccp_fold_stmt): Likewise.

Copyright (C) 2012 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.
